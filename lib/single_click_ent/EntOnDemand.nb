(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    313996,       6877]
NotebookOptionsPosition[    310815,       6773]
NotebookOutlinePosition[    311209,       6790]
CellTagsIndexPosition[    311166,       6787]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialisation stuff", "Section",
 CellChangeTimes->{{3.681633872228385*^9, 3.6816338746106043`*^9}, {
  3.681642440204884*^9, 3.6816424444349327`*^9}},
 ExpressionUUID -> "de6d88b8-6c3f-4505-8303-55926e2f9c52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<QDENSITY`Qdensity`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"packageDir", " ", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<QSIM\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", 
  RowBox[{"\"\<QSIM`noise`\>\"", ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"packageDir", ",", "\"\<QSIM_noise.m\>\""}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.6695439070995455`*^9, {3.669615285514118*^9, 3.669615286297501*^9}, {
   3.66961535366998*^9, 3.6696153697304783`*^9}, {3.669615480132023*^9, 
   3.669615480610299*^9}, {3.66961556497503*^9, 3.6696155750271273`*^9}, {
   3.669615637840352*^9, 3.6696156384778433`*^9}, {3.6696169979826393`*^9, 
   3.6696170074136553`*^9}, {3.66961712203467*^9, 3.669617122405983*^9}, {
   3.669621269050124*^9, 3.669621274147662*^9}, {3.7028141595614643`*^9, 
   3.702814159927554*^9}, {3.702817063368638*^9, 3.702817078058247*^9}, {
   3.7028171945810127`*^9, 3.702817196212743*^9}, {3.703226660155167*^9, 
   3.703226721831998*^9}, {3.703414732270621*^9, 3.703414735381932*^9}},
 ExpressionUUID -> "23f04ebe-71f3-4e08-b8b5-90560da16a0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QDENSITY`Qdensity`*"}]], "Input",
 ExpressionUUID -> "c5d017eb-af5c-4ce8-af08-c330b62ab8f5"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["QDENSITY`Qdensity`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["QDENSITY`Qdensity`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["about",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"about", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["CPHASE",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"CPHASE", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["i8",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"i8", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Mutual",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Mutual", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PY",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"PY", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["res2$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"res2$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["stB",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"stB", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Xb",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info1173708786134-2411224", {"Xb", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["Adj",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Adj", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["CPHASEV",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"CPHASEV", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["intro",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"intro", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["nb",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"nb", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["qubit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"qubit", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Rotqbit",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Rotqbit", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Swap",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Swap", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["xd",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"xd", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["AF",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"AF", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["cRQN",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"cRQN", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["j8",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"j8", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["neg",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"neg", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomBra1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RandomBra1", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RotX",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RotX", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["s$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"s$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Xd",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Xd", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["at",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"at", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Definef",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Definef", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Ket1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Ket1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["nneg",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"nneg", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomBra2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RandomBra2", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RotY",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RotY", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["TensorProductQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "TensorProductQ", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ZeroMatrix",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ZeroMatrix", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["Bra1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Bra1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["density",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"density", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["KetV",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"KetV", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["nq",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info1173708786134-2411224", {"nq", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomBraN",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RandomBraN", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RotZ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RotZ", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ThreeOp",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ThreeOp", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ZeroT",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ZeroT", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["BraV",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"BraV", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["DForm2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"DForm2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["KetX",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"KetX", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Observables",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Observables", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomKet1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RandomKet1", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["s",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"s", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["to",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"to", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[ScriptCapitalH]",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "\[ScriptCapitalH]", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["BraX",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"BraX", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Discord",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Discord", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["KetY",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"KetY", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["OneOp",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"OneOp", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomKet2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RandomKet2", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Schmidt",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Schmidt", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Toffoli",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Toffoli", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[ScriptCapitalP]",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "\[ScriptCapitalP]", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["BraY",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"BraY", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["EnTropy",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"EnTropy", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["look",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"look", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Oracle",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Oracle", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomKetN",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"RandomKetN", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Sigma0",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Sigma0", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ts",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ts", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[DoubleStruckCapitalI]",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "\[DoubleStruckCapitalI]", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["CNOT",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"CNOT", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["EnTropy2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"EnTropy2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["matrices",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"matrices", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PartialTrace",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "PartialTrace", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomQubit1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "RandomQubit1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Sigma1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Sigma1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ts$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ts$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Rho]",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Rho]", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["Coeff",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Coeff", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Fidelity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Fidelity", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["mc",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"mc", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PartialTraceGen",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "PartialTraceGen", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomQubit2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "RandomQubit2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Sigma2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Sigma2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["TwoOp",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"TwoOp", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Rho]$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Rho]$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["Comm",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Comm", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["FidelityB",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"FidelityB", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["mcl",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"mcl", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PartialTranspose",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "PartialTranspose", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["RandomQubitN",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "RandomQubitN", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Sigma3",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Sigma3", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["U",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"U", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Sigma]",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Sigma]", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["CompMeasureKet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "CompMeasureKet", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["for",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"for", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["mcl$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"mcl$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ProjG",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ProjG", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["rcsDate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"rcsDate", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Snos",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Snos", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["v",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"v", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Phi]A1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Phi]A1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["CompPTr",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"CompPTr", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["had",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"had", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["mc$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"mc$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PTr",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"PTr", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["rcsRevision",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"rcsRevision", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["SP",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"SP", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Vs",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Vs", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Phi]A2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Phi]A2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["ControlledX",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ControlledX", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Had",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Had", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["MeasureKet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"MeasureKet", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PTrGen",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"PTrGen", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["res1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"res1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Spin",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Spin", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["v$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"v$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Phi]B1",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Phi]B1", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["ControlledY",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ControlledY", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Hadamard",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Hadamard", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["MultiProjCBasis",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "MultiProjCBasis", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["Purity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"Purity", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["res1$",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"res1$", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["SpinObs",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"SpinObs", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["ws",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ws", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[Phi]B2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"\[Phi]B2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]},
        {
         ButtonBox["ControlledZ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"ControlledZ", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["HALL",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"HALL", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["MultiQProj",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"MultiQProj", "QDENSITY`Qdensity`"}},
          
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["PX",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"PX", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["res2",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"res2", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["stA",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"stA", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["xb",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {"xb", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"], 
         ButtonBox["\[CapitalOmega]s",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173708786134-2411224", {
            "\[CapitalOmega]s", "QDENSITY`Qdensity`"}},
          ButtonNote->"QDENSITY`Qdensity`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.11875]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.708778934991026*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExpmFidelity", "[", 
    RowBox[{"Op1_", ",", "Op2_"}], "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"Fidelity", "[", 
     RowBox[{"Op1", ",", "Op2"}], "]"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CombineErrors", "[", "errorTable_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "probNone"}], "}"}], ",", 
     RowBox[{
      RowBox[{"probNone", "=", 
       RowBox[{"Times", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "#"}], ")"}], "&"}], "/@", "errorTable"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"probNone", " ", 
          FractionBox[
           RowBox[{"errorTable", "[", 
            RowBox[{"[", "ii", "]"}], "]"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"errorTable", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}], ")"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "errorTable", "]"}]}], "}"}]}], "]"}], 
       "]"}]}]}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"for", " ", "small", " ", "probabilities"}], ",", " ", 
    RowBox[{
    "these", " ", "depolarizing", " ", "channels", " ", "just", " ", "add", 
     " ", 
     RowBox[{"up", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PZ", "[", "i_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{"i", ",", "0", ",", 
     SubscriptBox["\[ScriptCapitalP]", "0"], ",", "1", ",", 
     SubscriptBox["\[ScriptCapitalP]", "1"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projectors", "=", 
   RowBox[{"{", 
    RowBox[{"PX", ",", "PY", ",", "PZ"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KP", "[", "r__", "]"}], ":=", 
   RowBox[{"KroneckerProduct", "[", "r", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"id", " ", "=", "\[DoubleStruckCapitalI]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bellState", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", 
       RowBox[{"PauliMatrix", "[", "i", "]"}], ",", 
       RowBox[{"PauliMatrix", "[", "0", "]"}]}], "]"}], "]"}], ".", "phi0", 
    ".", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", 
       RowBox[{"PauliMatrix", "[", "i", "]"}], ",", 
       RowBox[{"PauliMatrix", "[", "0", "]"}]}], "]"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.699090652233322*^9, 3.699090652416977*^9}, {
  3.702814116785346*^9, 3.7028141186416683`*^9}, {3.7028143169165287`*^9, 
  3.7028143175013857`*^9}, {3.702815414323429*^9, 3.702815436700596*^9}, {
  3.702815520752363*^9, 3.7028156808734503`*^9}, {3.7028163308850937`*^9, 
  3.702816335873829*^9}, {3.702816374891945*^9, 3.7028163757136307`*^9}, {
  3.702816916797699*^9, 3.702816925926155*^9}, {3.70877876781531*^9, 
  3.7087787682953577`*^9}},
 ExpressionUUID -> "f390f7d7-8bf3-4eca-bf93-8eea345d186c"],

Cell[CellGroupData[{

Cell["Single qubit gates", "Subsubsection",
 CellChangeTimes->{{3.6253825232581577`*^9, 3.625382525948211*^9}},
 ExpressionUUID -> "eeffa186-fc99-4489-b6a2-95739133c758"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Definition", " ", "of", " ", "single", " ", "spin", " ", "rotations", " ",
     "using", " ", "the", " ", "qdensity", " ", "package", 
    "\[IndentingNewLine]", 
    RowBox[{"Nomenclature", ":", "  ", 
     RowBox[{
      RowBox[{
      "r", " ", "followed", " ", "by", " ", "a", " ", "capital", " ", 
       RowBox[{"letter", " ", "--"}]}], ">", " ", 
      RowBox[{
      "rotation", " ", "by", " ", "\[Pi]", " ", "around", " ", "the", " ", 
       "axis", " ", "specified", " ", "by", " ", "the", " ", 
       RowBox[{"letter", ".", "\[IndentingNewLine]", "\t\t\t", "r"}], " ", 
       "followed", " ", "by", " ", "a", " ", "lower", " ", "case", " ", 
       "letter"}]}], ":", " ", 
     RowBox[{"rotation", " ", "by", " ", 
      RowBox[{"\[Pi]", "/", "2"}], " ", "around", " ", "the", " ", "axis", 
      " ", "specified", " ", "by", " ", "that", " ", "letter", 
      "\[IndentingNewLine]", "The", " ", "rotation", " ", "direction", " ", 
      "is", " ", "given", " ", "by", " ", "the", " ", "appended", " ", 
      "letter", " ", "m", " ", "or", " ", "p"}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxp", ",", "rXp", ",", "ryp", ",", "rYp", ",", "rzp", ",", "rZp"}], 
      "}"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", 
         SubscriptBox["\[Sigma]", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"j", "/", "2"}], "-", "0.01"}], "]"}], "+", "1"}]], "*", 
         
         RowBox[{"\[Pi]", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{"j", ",", "2"}], "]"}]}], ")"}]}], ")"}]}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxm", ",", "rXm", ",", "rym", ",", "rYm", ",", "rzm", ",", "rZm"}], 
      "}"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{"\[ImaginaryI]", "*", 
         SubscriptBox["\[Sigma]", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"j", "/", "2"}], "-", "0.01"}], "]"}], "+", "1"}]], "*", 
         
         RowBox[{"\[Pi]", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{"j", ",", "2"}], "]"}]}], ")"}]}], ")"}]}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6253825423585396`*^9, 3.6253827022427373`*^9}, {
   3.625382734303378*^9, 3.625382934497382*^9}, {3.625383067510042*^9, 
   3.625383180183296*^9}, {3.6253833170660334`*^9, 3.625383321436121*^9}, {
   3.6253833557968082`*^9, 3.625383395257597*^9}, {3.625383441208516*^9, 
   3.625383456938831*^9}, 3.6254002924707193`*^9, {3.6254025285095654`*^9, 
   3.6254026176425657`*^9}, {3.6254648143872457`*^9, 3.625465144503848*^9}, {
   3.6254652474355307`*^9, 3.6254653002160587`*^9}, {3.6254653496075525`*^9, 
   3.6254653544276004`*^9}, {3.6254765225810413`*^9, 3.62547654041122*^9}, {
   3.6260849283733234`*^9, 3.626084936943409*^9}, {3.669616603318604*^9, 
   3.669616625730185*^9}, 3.669624019274583*^9, {3.669637023488163*^9, 
   3.669637035155864*^9}, {3.6699787860400963`*^9, 3.669978821820661*^9}, {
   3.681620367984284*^9, 3.6816203746214848`*^9}},
 ExpressionUUID -> "af64b6bc-50ae-4594-9f47-b511f45f672c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data functions", "Subsubsection",
 CellChangeTimes->{{3.708778815031031*^9, 3.70877881861539*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"findFileInDataDir", "[", 
    RowBox[{"string_", ",", "dataDir_", ",", 
     RowBox[{"daysPreviousToSearch_:", "365"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"filenames", ",", "daysPrevious"}], "}"}], ",", 
     RowBox[{
      RowBox[{"daysPrevious", "=", "0"}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"daysPrevious", "<", "daysPreviousToSearch"}], ")"}], " ", "&&", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"Length", "[", "filenames", "]"}], "==", "0"}], ")"}]}], 
        ",", 
        RowBox[{
         RowBox[{"filenames", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"FileNames", "[", 
             RowBox[{
              RowBox[{"\"\<*\>\"", "<>", "string", "<>", "\"\<*\>\""}], ",", 
              RowBox[{"FileNameJoin", "[", 
               RowBox[{"{", 
                RowBox[{"dataDir", ",", 
                 RowBox[{"DateString", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", 
                    RowBox[{
                    TagBox["86400",
                    Function[BoxForm`e$, 
                    MatrixForm[BoxForm`e$]]], " ", "daysPrevious"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", 
                    "\"\<Day\>\""}], "}"}]}], "]"}]}], "}"}], "]"}]}], "]"}], 
            ",", "DirectoryQ"}], "]"}]}], ";", 
         RowBox[{"daysPrevious", "++"}], ";"}]}], "]"}], ";", 
      RowBox[{"Return", "[", "filenames", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetDirectoryNameContaining", "::", "notunique"}], "=", 
   "\"\<File not unique\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetDirectoryNameContaining", "::", "nofile"}], "=", 
   "\"\<No matching file found\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetDirectoryNameContaining", "[", 
    RowBox[{"string_", ",", 
     RowBox[{"dir_:", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], ",", 
     RowBox[{"searchDataDir_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "filenames", "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"searchDataDir", "==", "False"}], ",", 
        RowBox[{
         RowBox[{"filenames", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"FileNames", "[", 
             RowBox[{
              RowBox[{"\"\<*\>\"", "<>", "string", "<>", "\"\<*\>\""}], ",", 
              "dir"}], "]"}], ",", "DirectoryQ"}], "]"}]}], ";"}], ",", 
        RowBox[{"filenames", "=", 
         RowBox[{"findFileInDataDir", "[", 
          RowBox[{"string", ",", "dir"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "filenames", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"filenames", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Length", "[", "filenames", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"GetDirectoryNameContaining", "::", "nofile"}], "]"}], ";", 
         
         RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Length", "[", "filenames", "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"GetDirectoryNameContaining", "::", "notunique"}], "]"}], 
         ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetCorrelationFile", "[", 
   RowBox[{"string_", ",", 
    RowBox[{"dir_:", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ",", 
    RowBox[{"exactDir_:", "False"}], ",", 
    RowBox[{"twoDsweep_:", "False"}], ",", 
    RowBox[{"corrFileName_:", "\"\<correlations.h5\>\""}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "Corrs", "}"}], ",", 
    RowBox[{
     RowBox[{"Corrs", "=", "\[IndentingNewLine]", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"exactDir", ",", "dir", ",", 
             RowBox[{"GetDirectoryNameContaining", "[", 
              RowBox[{"string", ",", "dir"}], "]"}]}], "]"}], ",", 
           "corrFileName"}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Datasets\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{"twoDsweep", ",", 
            RowBox[{"{", "\[NoBreak]", 
             RowBox[{
             "\"\</sweep_pts1\>\"", ",", "\"\</sweep_pts2\>\"", ",", 
              "\"\</correlations\>\"", ",", "\"\</correlations_u\>\"", ",", 
              "\"\</norm_correlators\>\"", ",", "\"\</norm_correlators_u\>\"",
               ",", "\"\</counts_per_pt\>\"", ",", "\"\<tail_counts\>\"", 
              ",", "\"\<tail_counts_u\>\""}], "}"}], ",", 
            RowBox[{"{", "\[NoBreak]", 
             RowBox[{
             "\"\</sweep_pts\>\"", ",", "\"\</correlations\>\"", ",", 
              "\"\</correlations_u\>\"", ",", "\"\</norm_correlators\>\"", 
              ",", "\"\</norm_correlators_u\>\"", ",", 
              "\"\</counts_per_pt\>\"", ",", "\"\<tail_counts\>\"", ",", 
              "\"\<tail_counts_u\>\""}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", "twoDsweep", "]"}], ",", 
       RowBox[{
        RowBox[{"Corrs", "=", 
         RowBox[{"Insert", "[", 
          RowBox[{"Corrs", ",", 
           RowBox[{"{", "1", "}"}], ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Corrs", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "=", 
            RowBox[{"{", 
             RowBox[{"Corrs", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "}"}]}], ")"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}]}], 
        ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "Corrs", "]"}], ";"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.703227115678536*^9, 3.703227186023409*^9}, {
   3.7032272413732567`*^9, 3.703227368770213*^9}, 3.703227524372758*^9, {
   3.703227577584149*^9, 3.7032276895759077`*^9}, {3.703227726697473*^9, 
   3.703227875631407*^9}, {3.703227905734476*^9, 3.703227916120223*^9}, {
   3.7032305382876863`*^9, 3.7032305441172533`*^9}, {3.703230592403916*^9, 
   3.703230694937496*^9}, {3.703231234144678*^9, 3.7032312637458353`*^9}, {
   3.703245116953105*^9, 3.703245133433434*^9}, {3.703245821799634*^9, 
   3.703245824858577*^9}, {3.7032465331688833`*^9, 3.703246534267222*^9}, {
   3.703415546324552*^9, 3.703415585326552*^9}, {3.7034156399405518`*^9, 
   3.703415675541552*^9}, {3.703415893956792*^9, 3.7034159368650823`*^9}, {
   3.703417009873372*^9, 3.7034170670800924`*^9}, {3.703417257687151*^9, 
   3.7034172657059526`*^9}, {3.70341737498888*^9, 3.7034173761329947`*^9}, {
   3.703417428971278*^9, 3.703417430874468*^9}, {3.7065267319395704`*^9, 
   3.7065267496543417`*^9}, {3.707074743959446*^9, 3.707074775216571*^9}, {
   3.707074903689417*^9, 3.7070749461866665`*^9}, {3.7070751044494915`*^9, 
   3.707075108816928*^9}, {3.7086829199634237`*^9, 3.7086829358210096`*^9}, {
   3.708689821153371*^9, 3.708689823488371*^9}, {3.7088352836829987`*^9, 
   3.7088353337800083`*^9}, {3.708835397527382*^9, 3.7088353999916286`*^9}, {
   3.708835621056733*^9, 3.7088356663062572`*^9}, {3.7088359934219656`*^9, 
   3.7088361686924906`*^9}, {3.7088362170313244`*^9, 3.7088362399756184`*^9}, 
   3.7088365396865864`*^9},
 ExpressionUUID -> "20d5e485-6866-4c9d-b18b-18cd1577039c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getFileCorrs", "[", 
     RowBox[{"fileNameArray_", ",", 
      RowBox[{"corrFileName_:", "\"\<correlations.h5\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "Corrs", "}"}], ",", 
      RowBox[{
       RowBox[{"Corrs", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Corrs", ",", 
            RowBox[{"GetCorrelationFile", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"FileNameJoin", "[", 
               RowBox[{"{", 
                RowBox[{"BaseDirString", ",", "#"}], "}"}], "]"}], ",", 
              "True", ",", "False", ",", "corrFileName"}], "]"}]}], "]"}], 
          ")"}], "&"}], "/@", "fileNameArray"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Corrs", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateDataFidelityList", "[", 
   RowBox[{"LDEAttempts_", ",", "fileCorrs_"}], "]"}], ":=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"FidFromData", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"FidErrorFromData", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "&"}], "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"LDEAttempts", ",", "fileCorrs"}], "}"}], "]"}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7088405330757837`*^9, 3.7088405548507843`*^9}, {
  3.708840637757784*^9, 3.7088406380817842`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetMsmtFilenameContaining", "::", "notunique"}], "=", 
   "\"\<File not unique\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetMsmtFilenameContaining", "::", "nofile"}], "=", 
   "\"\<No matching file found\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetMsmtFilenameContaining", "[", 
    RowBox[{"string_", ",", 
     RowBox[{"dir_:", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"filenames", ",", "dirname"}], "}"}], ",", 
     RowBox[{
      RowBox[{"dirname", "=", 
       RowBox[{"GetDirectoryNameContaining", "[", 
        RowBox[{"string", ",", "dir"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"dirname", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"FileNameSplit", "[", "dirname", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "<>", "\"\<.hdf5\>\""}]}], 
         "}"}], "]"}], "]"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetAdwinGroup", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"groups", ",", "group", ",", "x"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"groups", "=", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"filename", ",", "\"\<Groups\>\""}], "]"}], ",", 
          "\"\</\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"x", "=", "1"}], ",", 
         RowBox[{"x", "<=", 
          RowBox[{"Length", "[", "groups", "]"}]}], ",", 
         RowBox[{"x", "++"}], ",", 
         RowBox[{
          RowBox[{"group", "=", 
           RowBox[{"groups", "[", 
            RowBox[{"[", "x", "]"}], "]"}]}], ";", 
          RowBox[{"(", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "group", "]"}], "\[Equal]", "0"}], ",", 
             "Null", ",", 
             RowBox[{
              RowBox[{"group", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "==", "\"\<adwindata\>\""}],
              ",", 
             RowBox[{"Return", "[", 
              RowBox[{"\"\</\>\"", "<>", 
               RowBox[{"StringJoin", "[", 
                RowBox[{"Riffle", "[", 
                 RowBox[{"group", ",", "\"\</\>\""}], "]"}], "]"}]}], "]"}]}],
             "]"}], ")"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetAdwinData", "[", 
     RowBox[{"filename_", ",", "arrayname_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"$VersionNumber", "\[GreaterEqual]", "10"}], ",", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Datasets\>\"", ",", 
          RowBox[{
           RowBox[{"GetAdwinGroup", "[", "filename", "]"}], "<>", "\"\</\>\"",
            "<>", "arrayname"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Datasets\>\"", ",", 
          RowBox[{
           RowBox[{"GetAdwinGroup", "[", "filename", "]"}], "<>", "\"\</\>\"",
            "<>", "arrayname"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetPQData", "[", 
     RowBox[{"filename_", ",", "arrayname_"}], "]"}], ":=", 
    RowBox[{"Import", "[", 
     RowBox[{"filename", ",", "arrayname"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetMsmtAttribute", "[", 
    RowBox[{"filename_", ",", "attribute_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"$VersionNumber", "\[GreaterEqual]", "10"}], ",", 
     RowBox[{
      RowBox[{"(", "attribute", ")"}], "/.", 
      RowBox[{"(", 
       RowBox[{"Import", "[", 
        RowBox[{"filename", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Attributes\>\"", ",", 
           RowBox[{"GetAdwinGroup", "[", "filename", "]"}]}], "}"}]}], "]"}], 
       ")"}]}], ",", 
     RowBox[{"attribute", "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"GetAdwinGroup", "[", "filename", "]"}], ")"}], "/.", 
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", 
          RowBox[{"{", "\"\<Attributes\>\"", "}"}]}], "]"}]}], ")"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetMsmtAttributeNames", "[", "filename_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Keys", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"filename", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Attributes\>\"", ",", 
        RowBox[{"GetAdwinGroup", "[", "filename", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.703239188457457*^9, 3.7032393091284657`*^9}, {
   3.703240804996306*^9, 3.703240913420457*^9}, {3.7032410337476797`*^9, 
   3.703241053332593*^9}, {3.703241097768548*^9, 3.703241135451231*^9}, {
   3.703242319280608*^9, 3.7032423196791277`*^9}, {3.7032424733562517`*^9, 
   3.7032424929857063`*^9}, {3.703242556004568*^9, 3.703242559478384*^9}, {
   3.703242757416637*^9, 3.703242961164856*^9}, {3.703243007940428*^9, 
   3.703243013096283*^9}, {3.703243078379157*^9, 3.703243104889338*^9}, {
   3.7032431393490562`*^9, 3.70324317737875*^9}, {3.703243219015449*^9, 
   3.703243248672678*^9}, {3.703417199596343*^9, 3.7034172151739006`*^9}, {
   3.703417628774256*^9, 3.7034176870420823`*^9}, {3.7034183653179035`*^9, 
   3.703418370792451*^9}, {3.703418438461217*^9, 3.7034184596203327`*^9}, 
   3.7034185095333233`*^9, 3.703418543144389*^9, {3.7034186612535768`*^9, 
   3.7034186690188003`*^9}, {3.7034186990207996`*^9, 
   3.7034186994917526`*^9}, {3.7034190023625383`*^9, 3.703419023298538*^9}, {
   3.7045375391008034`*^9, 3.7045375504609394`*^9}, {3.704537802062097*^9, 
   3.704537835926483*^9}, {3.7045380096958585`*^9, 3.7045380230381927`*^9}, {
   3.7045380964335313`*^9, 3.7045381053364215`*^9}},
 ExpressionUUID -> "281c3c10-431c-4e2f-83c4-02ddea7725a1"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.703232089665801*^9, 3.703232094325968*^9}},
 ExpressionUUID -> "da0afa82-0877-4648-aab8-db4e540f7d01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FidFromData", "[", "corrs_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Total", "[", 
            RowBox[{"Abs", "[", "#", "]"}], "]"}]}], ")"}], "/", "4"}], "&"}],
        "/@", "#"}], ")"}], "&"}], "/@", "corrs"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FidErrorFromData", "[", "corrsError_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"Total", "[", 
            SuperscriptBox["#", "2"], "]"}], "]"}], "/", "4"}], ")"}], "&"}], 
       "/@", "#"}], ")"}], "&"}], "/@", "corrsError"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.703231662798757*^9, 3.7032316734010057`*^9}, {
   3.703231809264821*^9, 3.703231811355338*^9}, {3.703231849180872*^9, 
   3.703231860932172*^9}, {3.703232010288199*^9, 3.703232030880577*^9}, {
   3.703232065869577*^9, 3.703232073488056*^9}, {3.703232133432131*^9, 
   3.703232133655649*^9}, {3.703232164823674*^9, 3.703232218714841*^9}, {
   3.703232261881003*^9, 3.7032324796695433`*^9}, {3.703234230956765*^9, 
   3.703234292660675*^9}, {3.70323524522323*^9, 3.703235467986801*^9}, {
   3.70323560262996*^9, 3.703235617926396*^9}, {3.7032462075181847`*^9, 
   3.7032462922914143`*^9}, {3.7032463906611357`*^9, 3.703246414042169*^9}, {
   3.7046168320841045`*^9, 3.7046168476766634`*^9}, 3.7062696621902227`*^9, {
   3.7064139335108476`*^9, 3.7064139407741213`*^9}, 3.706444524746787*^9, {
   3.7065269125506296`*^9, 3.7065269128366585`*^9}, {3.7070745408151336`*^9, 
   3.7070745797590275`*^9}, {3.708683072530679*^9, 3.7086833869911222`*^9}, {
   3.708683434193842*^9, 3.7086834472801504`*^9}, 3.7086893972073708`*^9, {
   3.7086894686953707`*^9, 3.7086894895573707`*^9}, {3.7086898753093705`*^9, 
   3.7086899238983707`*^9}, {3.7086899780564437`*^9, 3.708690016953333*^9}, {
   3.70869032125476*^9, 3.7086903992405577`*^9}, {3.708690429626596*^9, 
   3.708690431145748*^9}, {3.7086906380664377`*^9, 3.7086907803916693`*^9}, {
   3.7086908177694063`*^9, 3.708690820584688*^9}, {3.7086908767323017`*^9, 
   3.7086909059802265`*^9}, {3.70869093662129*^9, 3.708691047715399*^9}, {
   3.708691092259853*^9, 3.7086910963402605`*^9}, {3.708691417074331*^9, 
   3.7086914200696306`*^9}, {3.7086915491745396`*^9, 3.708691579991621*^9}, 
   3.7086934624145994`*^9, {3.708836551235741*^9, 3.7088365548030977`*^9}},
 ExpressionUUID -> "5756325e-14fc-4a7f-9ddd-7acf769281b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model", "Section",
 CellChangeTimes->{{3.681642430211882*^9, 3.681642431050837*^9}},
 ExpressionUUID -> "ed25764d-a561-444d-b02c-7f23da01f059"],

Cell[TextData[{
 "Parameters that define the raw state (generated by a single photon click): \
\n\n",
 StyleBox["vis ",
  FontWeight->"Bold"],
 "- the visibility of the photons\n",
 StyleBox["fz ",
  FontWeight->"Bold"],
 " - determined by initialization error, MW pulse infidelity and spin flip \
probability  \n",
 StyleBox["r ",
  FontWeight->"Bold"],
 " - the proportion of the state in the unentangled \[OpenCurlyQuote]11\
\[CloseCurlyQuote] state\n\nThe r value depends on: \n",
 StyleBox["pDetect ",
  FontWeight->"Bold"],
 "- detection efficiency\n",
 StyleBox["theta ",
  FontWeight->"Bold"],
 " - the initial rotation of the state of the qubits: Cos[theta]|0> + \
Sin[theta]|1>\n",
 StyleBox["PDC ",
  FontWeight->"Bold"],
 "- dark count prob per detector\n\nthe function rawState[fid_,pLoss_] \
generates a density matrix of the entangled state generated after a single \
detector click\n"
}], "Text",
 CellChangeTimes->{{3.6260159054750957`*^9, 3.6260159848498287`*^9}, {
   3.6260160164807587`*^9, 3.62601603241346*^9}, {3.6260160853325787`*^9, 
   3.626016360869864*^9}, {3.6260164044790154`*^9, 3.626016428197345*^9}, {
   3.6260199750885077`*^9, 3.6260200503918753`*^9}, {3.6260200878771048`*^9, 
   3.626020121937676*^9}, 3.626020458581408*^9, {3.6574481636279697`*^9, 
   3.657448389576106*^9}, {3.657448433633213*^9, 3.657448582392974*^9}, {
   3.6574486184878273`*^9, 3.6574486295662527`*^9}, {3.6579699944312153`*^9, 
   3.6579701660203724`*^9}, {3.657970914417205*^9, 3.6579709242871914`*^9}, {
   3.6972000502303934`*^9, 3.697200052806651*^9}, {3.697200597967161*^9, 
   3.697200602640629*^9}, {3.6974490127617087`*^9, 3.697449017468179*^9}, {
   3.699088646559111*^9, 3.6990886466692657`*^9}, {3.7032262524631977`*^9, 
   3.703226284702581*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 ExpressionUUID -> "b3b41320-15d4-4f4b-88f7-9f447454c57c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rValue", "[", 
   RowBox[{"theta_", ",", "pDetect1_", ",", "pDetect2_", ",", "pDC_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p00", ",", "p01", ",", "p10", ",", "p11", ",", "pd1", ",", "pd2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pd1", " ", "=", " ", "pDetect1"}], ";", "\n", 
     RowBox[{"pd2", " ", "=", " ", "pDetect2"}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"p00", " ", "=", " ", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"Cos", "[", "theta", "]"}], "^", "4"}], "*", "pDC", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pDC"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p01", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Sin", "[", "theta", "]"}], ")"}], "^", "2"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Cos", "[", "theta", "]"}], ")"}], "^", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "pDC"}], ")"}], "^", "2"}], " ", "*", " ", 
          "pd2"}], "+", " ", 
         RowBox[{"2", "*", "pDC", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pDC"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd2"}], ")"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p10", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Sin", "[", "theta", "]"}], ")"}], "^", "2"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Cos", "[", "theta", "]"}], ")"}], "^", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "pDC"}], ")"}], "^", "2"}], " ", "*", " ", 
          "pd1"}], "+", " ", 
         RowBox[{"2", "*", "pDC", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pDC"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd1"}], ")"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"p11", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "theta", "]"}], "^", "4"}], " ", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "pDC"}], ")"}], "^", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pd1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "pd2"}], ")"}]}], "+", 
            RowBox[{"pd2", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "pd1"}], ")"}]}]}], ")"}]}], " ", "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pDC"}], ")"}], "*", "pDC", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd2"}], ")"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p00", ",", "p01", ",", "p10", ",", "p11"}], "}"}], "/", 
      RowBox[{"(", 
       RowBox[{"p00", "+", "p01", "+", "p10", "+", "p11"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.657448711288566*^9, 3.6574487489939947`*^9}, {
   3.6574498817703133`*^9, 3.657450127628716*^9}, {3.65745038070788*^9, 
   3.657450472295886*^9}, {3.657450528801023*^9, 3.6574505620945044`*^9}, {
   3.6574506234124537`*^9, 3.657450623483407*^9}, {3.6574507521998053`*^9, 
   3.657450757010153*^9}, {3.657450799343954*^9, 3.657450845429591*^9}, {
   3.657450876921249*^9, 3.657451003532775*^9}, {3.657451150388335*^9, 
   3.6574512528777113`*^9}, {3.6574512920694237`*^9, 3.6574513315796003`*^9}, 
   3.657451572499042*^9, {3.657451787775593*^9, 3.6574517943027153`*^9}, 
   3.6574521051442623`*^9, {3.671856477089058*^9, 3.671856477186067*^9}, {
   3.6781005347017717`*^9, 3.6781005347540407`*^9}, {3.678111418833529*^9, 
   3.6781114531018267`*^9}, {3.67811180499543*^9, 3.6781118051189003`*^9}, {
   3.678111897945161*^9, 3.678111911107593*^9}, {3.681460028154976*^9, 
   3.681460031551877*^9}, {3.681528333021152*^9, 3.681528338792787*^9}, {
   3.681528547384946*^9, 3.681528570098406*^9}, {3.686919958206641*^9, 
   3.686919958251935*^9}, {3.689423975552659*^9, 3.6894239765830183`*^9}, {
   3.6895816071264143`*^9, 3.6895816172005787`*^9}, {3.699088659115555*^9, 
   3.6990886686529703`*^9}},
 ExpressionUUID -> "bc4ffd84-a5d7-4596-aafb-18820a484090"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rValueBK", "[", 
   RowBox[{"theta_", ",", "pDetect1_", ",", "pDetect2_", ",", "pDC_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "p00", ",", "p01", ",", "p10", ",", "p11", ",", "pd1", ",", "pd2", ",", 
      "p00BK", ",", "p10BK"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"pd1", " ", "=", " ", "pDetect1"}], ";", "\n", 
     RowBox[{"pd2", " ", "=", " ", "pDetect2"}], ";", "\n", "\n", 
     RowBox[{"p00", " ", "=", " ", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"Cos", "[", "theta", "]"}], "^", "4"}], "*", "pDC", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pDC"}], ")"}]}]}], ";", "\n", 
     RowBox[{"p01", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Sin", "[", "theta", "]"}], ")"}], "^", "2"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Cos", "[", "theta", "]"}], ")"}], "^", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "pDC"}], ")"}], "^", "2"}], " ", "*", " ", 
          "pd2"}], "+", " ", 
         RowBox[{"2", "*", "pDC", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pDC"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd2"}], ")"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"p10", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Sin", "[", "theta", "]"}], ")"}], "^", "2"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Cos", "[", "theta", "]"}], ")"}], "^", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "pDC"}], ")"}], "^", "2"}], " ", "*", " ", 
          "pd1"}], "+", " ", 
         RowBox[{"2", "*", "pDC", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pDC"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd1"}], ")"}]}]}], ")"}]}]}], ";", "\n", 
     RowBox[{"p11", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "theta", "]"}], "^", "4"}], " ", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "pDC"}], ")"}], "^", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pd1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "pd2"}], ")"}]}], "+", 
            RowBox[{"pd2", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "pd1"}], ")"}]}]}], ")"}]}], " ", "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pDC"}], ")"}], "*", "pDC", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "pd2"}], ")"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"p00BK", "=", 
      RowBox[{"p11", " ", "p00"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p10BK", "=", 
      RowBox[{"p01", " ", "p10"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p00BK", ",", "p10BK", ",", "p10BK", ",", "p00BK"}], "}"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "p00BK"}], "+", 
        RowBox[{"2", "p10BK"}]}], ")"}]}]}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.7064990149920163`*^9, 3.7064990149940166`*^9}, {
  3.7065006246246104`*^9, 3.7065006666166105`*^9}, {3.7065007196266108`*^9, 
  3.70650077740561*^9}}],

Cell[CellGroupData[{

Cell["Raw state generation", "Subsubsection",
 CellChangeTimes->{{3.657452115546418*^9, 3.6574521293461647`*^9}, 
   3.7064990092214394`*^9},
 ExpressionUUID -> "43288aff-31fa-4245-a0b4-d3beefbbc59c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rawState", "[", 
    RowBox[{"vis_", ",", "fz_", ",", "rValue_", ",", "RndOpticalPhase_"}], 
    "]"}], ":=", 
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"rValue", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"KP", "[", 
       RowBox[{
        SubscriptBox["\[ScriptCapitalP]", "1"], ",", 
        SubscriptBox["\[ScriptCapitalP]", "1"]}], "]"}]}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "fz"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rValue", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{"rValue", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "2"}]}], ",", "0",
          ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"rValue", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", "fz"}], ",", 
         RowBox[{
          RowBox[{"-", "vis"}], "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"rValue", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"rValue", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "*", "fz", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"\[ImaginaryI]", "*", "RndOpticalPhase"}], "]"}]}], ",", 
         "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "vis"}], "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"rValue", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "*", 
            RowBox[{"rValue", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "*", "fz", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "RndOpticalPhase"}], "]"}]}],
          ",", 
         RowBox[{
          RowBox[{"rValue", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "*", "fz"}], ",", "0"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "fz"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rValue", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{"rValue", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "2"}]}]}], 
        "}"}]}], "}"}], "+", 
     RowBox[{
      RowBox[{"rValue", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "*", 
      RowBox[{"KP", "[", 
       RowBox[{
        SubscriptBox["\[ScriptCapitalP]", "0"], ",", 
        SubscriptBox["\[ScriptCapitalP]", "0"]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.657451286838171*^9, 3.657451290637148*^9}, 
   3.6574521426655273`*^9, {3.657452583436804*^9, 3.657452618447434*^9}, {
   3.657452710796493*^9, 3.657452782806159*^9}, {3.6579701770184727`*^9, 
   3.657970210616832*^9}, {3.6579708619019537`*^9, 3.657970865084272*^9}, 
   3.6579710551492767`*^9, {3.681528359850584*^9, 3.6815283691929913`*^9}, {
   3.6815292832440166`*^9, 3.681529286969962*^9}, {3.68152937268887*^9, 
   3.681529379496372*^9}, {3.681529445937708*^9, 3.681529446079356*^9}, {
   3.6815295109194193`*^9, 3.681529511726603*^9}, {3.689423979424311*^9, 
   3.689423980860569*^9}, {3.6895816195076036`*^9, 3.689581620740617*^9}, {
   3.697199907015073*^9, 3.69719990798717*^9}, {3.6990886739549723`*^9, 
   3.6990886741498013`*^9}, {3.702815478984622*^9, 3.702815486471924*^9}, {
   3.702815697811577*^9, 3.70281572813731*^9}, {3.706449426925975*^9, 
   3.706449440526335*^9}, 3.706501556308137*^9},
 ExpressionUUID -> "c9e99aee-758f-4442-8c14-0d998748990e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BKState", "[", "setupParams_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pDoubleExcite", ",", "DM"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pDoubleExcite", " ", "=", " ", 
       RowBox[{"setupParams", "[", "\"\<pDoubleExcite\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DM", " ", "=", " ", 
       RowBox[{"rawState", "[", 
        RowBox[{
         RowBox[{"setupParams", "[", "\"\<vis\>\"", "]"}], ",", 
         RowBox[{"setupParams", "[", "\"\<fz\>\"", "]"}], ",", 
         RowBox[{"rValueBK", "[", 
          RowBox[{
           RowBox[{"\[Pi]", "/", "4"}], ",", 
           RowBox[{"setupParams", "[", "\"\<pDetect1\>\"", "]"}], ",", 
           RowBox[{"setupParams", "[", "\"\<pDetect2\>\"", "]"}], ",", 
           RowBox[{"setupParams", "[", "\"\<pDC\>\"", "]"}]}], "]"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "include", " ", "phase", " ", "error", " ", "due", " ", "to", " ", 
        "double", " ", "excitation", " ", 
        RowBox[{"(", 
         RowBox[{"removes", " ", "all", " ", "coherences"}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"DM", "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], "2"], "DM"}], " ", 
        "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], 
         RowBox[{"pDoubleExcite", " ", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{
             SubscriptBox["\[Sigma]", "3"], ",", "\[DoubleStruckCapitalI]"}], 
            "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{
              SubscriptBox["\[Sigma]", "3"], ",", "\[DoubleStruckCapitalI]"}],
              "]"}], "\[ConjugateTranspose]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], 
         RowBox[{"pDoubleExcite", "/", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{"\[DoubleStruckCapitalI]", ",", 
             SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{"\[DoubleStruckCapitalI]", ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], 
            "\[ConjugateTranspose]"}]}], ")"}]}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"pDoubleExcite", "/", "2"}], ")"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{
             SubscriptBox["\[Sigma]", "3"], ",", 
             SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{
              SubscriptBox["\[Sigma]", "3"], ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], 
            "\[ConjugateTranspose]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DM", "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], "2"], "DM"}], " ", 
        "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], 
         RowBox[{"pDoubleExcite", " ", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{
             SubscriptBox["\[Sigma]", "3"], ",", "\[DoubleStruckCapitalI]"}], 
            "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{
              SubscriptBox["\[Sigma]", "3"], ",", "\[DoubleStruckCapitalI]"}],
              "]"}], "\[ConjugateTranspose]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], 
         RowBox[{"pDoubleExcite", "/", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{"\[DoubleStruckCapitalI]", ",", 
             SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{"\[DoubleStruckCapitalI]", ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], 
            "\[ConjugateTranspose]"}]}], ")"}]}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"pDoubleExcite", "/", "2"}], ")"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{
             SubscriptBox["\[Sigma]", "3"], ",", 
             SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{
              SubscriptBox["\[Sigma]", "3"], ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], 
            "\[ConjugateTranspose]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "DM", "]"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7064998162051296`*^9, 3.706499957572265*^9}, {
   3.7065007987646103`*^9, 3.70650080859661*^9}, {3.7065011403815484`*^9, 
   3.7065011407765875`*^9}, {3.706501666864191*^9, 3.706501681105615*^9}, {
   3.7065017140129056`*^9, 3.706501733767881*^9}, {3.7065017965961633`*^9, 
   3.7065018376432676`*^9}, {3.706502362749773*^9, 3.706502391571655*^9}, {
   3.7087701071783*^9, 3.7087701567962613`*^9}, 3.708773785410105*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pPhaseError", "[", 
    RowBox[{
    "t_", ",", "InterferometricDrift_", ",", "InterferometricOffset_"}], 
    "]"}], ":=", 
   RowBox[{"0.5", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["E", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.5", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"InterferometricDrift", " ", "t"}], ")"}], "2"]}], "+", 
          SuperscriptBox["InterferometricOffset", "2"]}], ")"}]}]]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhaseErrorRawState", "[", 
    RowBox[{"\[Theta]_", ",", "setupParams_", ",", 
     RowBox[{"t_:", "0"}], ",", 
     RowBox[{"opticalPhase_:", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pDoubleExcite", ",", "phaseError", ",", "DM"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pDoubleExcite", " ", "=", " ", 
       RowBox[{"setupParams", "[", "\"\<pDoubleExcite\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DM", " ", "=", " ", 
       RowBox[{"rawState", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"setupParams", "[", "\"\<vis\>\"", "]"}], "]"}], ",", 
         RowBox[{"setupParams", "[", "\"\<fz\>\"", "]"}], ",", 
         RowBox[{"rValue", "[", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"setupParams", "[", "\"\<pDetect1\>\"", "]"}], ",", 
           RowBox[{"setupParams", "[", "\"\<pDetect2\>\"", "]"}], ",", 
           RowBox[{"setupParams", "[", "\"\<pDC\>\"", "]"}]}], "]"}], ",", 
         "opticalPhase"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "include", " ", "phase", " ", "error", " ", "due", " ", "to", " ", 
        "double", " ", "excitation", " ", 
        RowBox[{"(", 
         RowBox[{"removes", " ", "all", " ", "coherences"}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"DM", "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], "2"], "DM"}], " ", 
        "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], 
         RowBox[{"pDoubleExcite", " ", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{
             SubscriptBox["\[Sigma]", "3"], ",", "\[DoubleStruckCapitalI]"}], 
            "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{
              SubscriptBox["\[Sigma]", "3"], ",", "\[DoubleStruckCapitalI]"}],
              "]"}], "\[ConjugateTranspose]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pDoubleExcite", "/", "2"}]}], ")"}], 
         RowBox[{"pDoubleExcite", "/", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{"\[DoubleStruckCapitalI]", ",", 
             SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{"\[DoubleStruckCapitalI]", ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], 
            "\[ConjugateTranspose]"}]}], ")"}]}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"pDoubleExcite", "/", "2"}], ")"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"KP", "[", 
            RowBox[{
             SubscriptBox["\[Sigma]", "3"], ",", 
             SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
           RowBox[{
            RowBox[{"KP", "[", 
             RowBox[{
              SubscriptBox["\[Sigma]", "3"], ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], 
            "\[ConjugateTranspose]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "include", " ", "phase", " ", "error", " ", "due", " ", "to", " ", 
        "interferometric", " ", "instability"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"phaseError", " ", "=", " ", 
       RowBox[{"pPhaseError", "[", 
        RowBox[{"t", ",", 
         RowBox[{"setupParams", "[", "\"\<InterferometricDrift\>\"", "]"}], 
         ",", 
         RowBox[{"setupParams", "[", "\"\<InterferometricOffset\>\"", "]"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"DM", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "phaseError"}], ")"}], "*", "DM"}], " ", "+", " ", 
        RowBox[{"phaseError", "*", 
         RowBox[{
          RowBox[{"KP", "[", 
           RowBox[{
            RowBox[{"DiagonalMatrix", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], "]"}], ",", 
            SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"KP", "[", 
             RowBox[{
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], "]"}], ",", 
              SubscriptBox["\[Sigma]", "3"]}], "]"}], ")"}], 
           "\[ConjugateTranspose]"}]}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "DM", "]"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "assume", " ", "gaussian", " ", "distribution", " ", "as", " ", "measured",
     " ", "earlier"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FirstClickProb", "[", 
    RowBox[{"theta_", ",", "pd1_", ",", "pd2_", ",", 
     RowBox[{"pDC_:", "0"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "pDC"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "pDC", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "theta", "]"}], "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", "pDC"}], "+", 
         RowBox[{"pd1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"3", " ", "pDC"}]}], ")"}]}], "+", 
         RowBox[{"pd2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"3", " ", "pDC"}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "theta", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "theta", "]"}], "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pd2", "+", 
         RowBox[{"pd1", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "pd2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pDC"}], ")"}]}], "-", 
            RowBox[{"5", " ", "pDC"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "pDC"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["pd1", "2"], " ", "pDC"}], "-", 
         RowBox[{"pd2", " ", "pDC"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "theta", "]"}], "4"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CumProb", "[", 
   RowBox[{"nMax_", ",", "theta_", ",", "pd1_", ",", "pd2_", ",", 
    RowBox[{"pDC_:", "0"}]}], "]"}], ":=", 
  RowBox[{"1", "-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"FirstClickProb", "[", 
       RowBox[{"theta", ",", "pd1", ",", "pd2", ",", "pDC"}], "]"}]}], " ", 
     ")"}], "nMax"]}]}]}], "Input",
 CellChangeTimes->{{3.698506372538484*^9, 3.6985063942069225`*^9}, {
   3.6985064602730384`*^9, 3.6985065182895403`*^9}, {3.698506559723213*^9, 
   3.698506684008631*^9}, {3.6985067336323185`*^9, 3.698506835438097*^9}, {
   3.698506867667754*^9, 3.698506881504978*^9}, {3.698507230290391*^9, 
   3.6985072747660685`*^9}, {3.6985073992230873`*^9, 
   3.6985073994726877`*^9}, {3.6985076709473906`*^9, 3.6985076873586197`*^9}, 
   3.6985234602982597`*^9, {3.698523510552134*^9, 3.6985235130222754`*^9}, {
   3.6985236897843857`*^9, 3.698523710994599*^9}, {3.698602532240808*^9, 
   3.698602829772908*^9}, {3.698603323080122*^9, 3.698603340364952*^9}, {
   3.6986034354205017`*^9, 3.69860344377098*^9}, {3.699088687304775*^9, 
   3.699088687308901*^9}, {3.702808723954937*^9, 3.7028087471875553`*^9}, {
   3.702812044271038*^9, 3.702812057802577*^9}, {3.702812139562475*^9, 
   3.702812189177717*^9}, {3.702812240171707*^9, 3.7028122717993593`*^9}, {
   3.702812329202647*^9, 3.7028123366735373`*^9}, {3.7028123810342484`*^9, 
   3.702812383617897*^9}, {3.7031408937580442`*^9, 3.7031408942780123`*^9}, {
   3.7031423985841*^9, 3.7031424107901773`*^9}, 3.703142475138603*^9, {
   3.703143997320682*^9, 3.703144072322011*^9}, {3.703144124077379*^9, 
   3.7031441276537724`*^9}, {3.703144753209597*^9, 3.7031447557212687`*^9}, {
   3.7031448369314127`*^9, 3.703144839402932*^9}, {3.7064438210694265`*^9, 
   3.7064439778281007`*^9}, {3.70644401902322*^9, 3.7064440260179195`*^9}, {
   3.7064496227515554`*^9, 3.706449641758456*^9}, {3.706449703823662*^9, 
   3.7064497073910184`*^9}, {3.7064499418883104`*^9, 
   3.7064499513813105`*^9}, {3.7064501425883107`*^9, 3.706450199118311*^9}, {
   3.7064502340483103`*^9, 3.7064502447863107`*^9}, {3.7064502853293104`*^9, 
   3.7064503091523104`*^9}, {3.7064506119463105`*^9, 3.706450730247308*^9}, {
   3.7064508042247047`*^9, 3.706450826288911*^9}, {3.7064510109303737`*^9, 
   3.7064510907803574`*^9}, {3.7064511875960383`*^9, 
   3.7064511912334023`*^9}, {3.7064512432456026`*^9, 3.706451351810458*^9}, 
   3.706501846399143*^9, {3.7087680420167856`*^9, 3.7087680687854624`*^9}, {
   3.708768151012684*^9, 3.7087681514157248`*^9}, {3.708768726755666*^9, 
   3.7087687415916653`*^9}, {3.7087696728118677`*^9, 
   3.7087699394755316`*^9}, {3.7087699814457283`*^9, 3.708770000485632*^9}, {
   3.708770039481531*^9, 3.70877004007159*^9}, 3.7087700816897516`*^9, 
   3.708773775411105*^9, {3.708775799656636*^9, 3.7087758644336367`*^9}, {
   3.7087758974976363`*^9, 3.7087759632926364`*^9}, {3.708776634212971*^9, 
   3.708776682534803*^9}, 3.7087769684983964`*^9},
 ExpressionUUID -> "96ec5820-0a10-4f75-bf89-b1619c3959a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Entanglement on demand defs", "Subsubsection",
 CellChangeTimes->{{3.708767941170702*^9, 3.7087679482354083`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pT1", "[", 
     RowBox[{"t_", ",", "T1_"}], "]"}], ":=", "  ", 
    RowBox[{"0.5", "-", 
     RowBox[{"0.5", 
      RowBox[{"(", 
       SuperscriptBox["E", 
        FractionBox[
         RowBox[{"-", "t"}], "T1"]], ")"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pT2", "[", 
    RowBox[{"t_", ",", "T2_"}], "]"}], ":=", " ", 
   RowBox[{"0.5", "-", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      SuperscriptBox["E", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"t", "/", "T2"}], ")"}]}]], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pDecoupleError", "[", 
     RowBox[{"t_", ",", "T1_", ",", "T2_", ",", "decouplinginfidelity_"}], 
     "]"}], ":=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pT1", "[", 
         RowBox[{"t", ",", "T1"}], "]"}], "+", 
        RowBox[{"pT2", "[", 
         RowBox[{"t", ",", "T2"}], "]"}], "+", 
        RowBox[{"decouplinginfidelity", " ", "t"}]}], ")"}], ",", "0.5"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "raw", " ", "state", " ", "after", " ", "a", " ", 
    "certain", " ", "amount", " ", "of", " ", "decoupling"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CalculateRawStateDecoupled", "[", 
   RowBox[{
   "\[Theta]_", ",", "Attempt_", ",", "AttemptMax_", ",", "setupParams_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "decouplingtime", ",", "totalattemptduration", ",", "pPhaseErrorAtt", 
      ",", "pNoise1", ",", "pNoise2", ",", "DM"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"decouplingtime", " ", "=", " ", 
      RowBox[{
       RowBox[{"setupParams", "[", "\"\<LDEduration\>\"", "]"}], 
       RowBox[{"(", 
        RowBox[{"AttemptMax", "-", "Attempt"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"totalattemptduration", " ", "=", " ", 
      RowBox[{
       RowBox[{"setupParams", "[", "\"\<LDEduration\>\"", "]"}], " ", "*", 
       " ", "Attempt"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DM", " ", "=", " ", 
      RowBox[{"PhaseErrorRawState", "[", 
       RowBox[{"\[Theta]", ",", "setupParams", ",", "totalattemptduration"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pNoise1", " ", "=", " ", 
      RowBox[{"pDecoupleError", "[", 
       RowBox[{"decouplingtime", ",", 
        RowBox[{"setupParams", "[", "\"\<T1\>\"", "]"}], ",", 
        RowBox[{"setupParams", "[", "\"\<T21\>\"", "]"}], ",", 
        RowBox[{"setupParams", "[", "\"\<decouplinginfidelity\>\"", "]"}]}], 
       "]"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"pNoise2", " ", "=", " ", 
      RowBox[{"pDecoupleError", "[", 
       RowBox[{"decouplingtime", ",", 
        RowBox[{"setupParams", "[", "\"\<T1\>\"", "]"}], ",", 
        RowBox[{"setupParams", "[", "\"\<T22\>\"", "]"}], ",", 
        RowBox[{"setupParams", "[", "\"\<decouplinginfidelity\>\"", "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Assume", " ", "that", " ", "all", " ", "decay", " ", "channels", " ", 
       "are", " ", "depolarizing"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DM", " ", "=", " ", 
      RowBox[{"applySingleQubitNoise", "[", 
       RowBox[{
        RowBox[{"applySingleQubitNoise", "[", 
         RowBox[{"DM", ",", "2", ",", "pNoise2"}], "]"}], ",", "1", ",", 
        "pNoise1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "DM", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.698507293564102*^9, 3.6985074787364273`*^9}, {
   3.6985075302165174`*^9, 3.6985075340385246`*^9}, {3.6985076297945185`*^9, 
   3.6985076690441875`*^9}, {3.6985077031458473`*^9, 3.69850778454679*^9}, {
   3.6985078251224613`*^9, 3.698507830364071*^9}, {3.6985081210861816`*^9, 
   3.6985081215385823`*^9}, {3.698508305478505*^9, 3.698508306539307*^9}, {
   3.6985085936110115`*^9, 3.698508605170632*^9}, 3.698508749252485*^9, {
   3.698508826831421*^9, 3.698508827127822*^9}, {3.6985235343394947`*^9, 
   3.698523551014448*^9}, {3.6985236002672653`*^9, 3.6985236518782177`*^9}, {
   3.6985236838080435`*^9, 3.698523683949052*^9}, {3.6985237501708393`*^9, 
   3.6985237506758685`*^9}, {3.69852383287757*^9, 3.698523842440117*^9}, {
   3.698537930525727*^9, 3.698537933760912*^9}, 3.6986033137825055`*^9, {
   3.708164875615384*^9, 3.7081649053593583`*^9}, {3.7087686098396654`*^9, 
   3.7087687079856653`*^9}, {3.7087688706436653`*^9, 
   3.7087689071656656`*^9}, {3.7087689485876656`*^9, 
   3.7087689945516653`*^9}, {3.708769091602666*^9, 3.708769204198011*^9}, {
   3.7087692812597165`*^9, 3.708769344475037*^9}, {3.7087694813067193`*^9, 
   3.7087695365792456`*^9}, {3.7087700454641294`*^9, 3.708770068967479*^9}, {
   3.7087759670036364`*^9, 3.7087760325206366`*^9}, {3.7087760849166365`*^9, 
   3.708776086948636*^9}, {3.7087765388484354`*^9, 3.708776600018552*^9}, {
   3.708776710150564*^9, 3.7087767103755865`*^9}, {3.708777508359377*^9, 
   3.708777540920633*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "assumes", " ", "a", " ", "fully", " ", 
    "anticorrelated", " ", "state", " ", "if", " ", "we", " ", "fail", " ", 
    "to", " ", "entangle"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EntangleOnDemand", "[", 
    RowBox[{
     RowBox[{"\[Theta]_", "?", "NumericQ"}], ",", 
     RowBox[{"AttemptMax_", "?", "NumericQ"}], ",", "setupParams_", ",", 
     RowBox[{"includeFails_:", "True"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SucProb", ",", "AvgFidelities", ",", "OutputFidelity"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SucProb", "=", 
       RowBox[{"CumProb", "[", 
        RowBox[{"AttemptMax", ",", "\[Theta]", ",", 
         RowBox[{"setupParams", "[", "\"\<pDetect1\>\"", "]"}], ",", 
         RowBox[{"setupParams", "[", "\"\<pDetect2\>\"", "]"}], ",", 
         RowBox[{"setupParams", "[", "\"\<pDC\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AvgFidelities", " ", "=", " ", 
       RowBox[{
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Re", "@", 
           RowBox[{"ExpmFidelity", "[", 
            RowBox[{
             RowBox[{"CalculateRawStateDecoupled", "[", 
              RowBox[{
              "\[Theta]", ",", "sumindex", ",", "AttemptMax", ",", 
               "setupParams"}], "]"}], ",", 
             RowBox[{"bellState", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"sumindex", ",", "1", ",", "AttemptMax", ",", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               RowBox[{"1", "-", "AttemptMax"}], ")"}], "]"}], "/", "10"}]}], 
           "}"}]}], " ", "]"}], "/", "10."}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"OutputFidelity", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{"includeFails", ",", 
         RowBox[{
          RowBox[{"SucProb", "*", "AvgFidelities"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "SucProb"}], ")"}], "*", "0.00"}]}], ",", 
         "AvgFidelities"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "OutputFidelity", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6985081280437937`*^9, 3.6985085770125823`*^9}, {
   3.6985086206302586`*^9, 3.6985086453563023`*^9}, {3.698508729970851*^9, 
   3.6985088383910418`*^9}, {3.698509492952591*^9, 3.6985095091142197`*^9}, {
   3.6985095812019463`*^9, 3.6985095813735466`*^9}, {3.6985096631644897`*^9, 
   3.6985097500410423`*^9}, {3.6985098443432083`*^9, 3.698509877727267*^9}, {
   3.6985240052564297`*^9, 3.698524007481557*^9}, {3.698603055616652*^9, 
   3.698603090357913*^9}, {3.6988370092205677`*^9, 3.69883700945857*^9}, {
   3.699350238450866*^9, 3.6993502386128826`*^9}, {3.6993507665236683`*^9, 
   3.699350781865202*^9}, {3.699350897664781*^9, 3.6993509045114655`*^9}, {
   3.706416644595047*^9, 3.706416649515539*^9}, {3.706416946827267*^9, 
   3.7064169752601104`*^9}, {3.7064170946240454`*^9, 3.706417095556139*^9}, {
   3.7081519901018867`*^9, 3.7081519906929455`*^9}, {3.708152724055085*^9, 
   3.708152739779513*^9}, {3.708153750262904*^9, 3.708153750461924*^9}, {
   3.708158355055356*^9, 3.7081583564474955`*^9}, {3.7087690446466656`*^9, 
   3.7087690674756656`*^9}, {3.7087692274623375`*^9, 3.708769231638755*^9}, {
   3.708769547331321*^9, 3.708769565972185*^9}, {3.708770198205402*^9, 
   3.7087702433259134`*^9}, 3.7087702902716074`*^9, {3.70877634967452*^9, 
   3.7087763544890013`*^9}, {3.708776447694321*^9, 3.7087764699495463`*^9}, {
   3.708778793608889*^9, 3.7087787965291815`*^9}, {3.7088338514955616`*^9, 
   3.7088338532865615`*^9}, {3.708840369422784*^9, 3.7088403986997843`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot function defs", "Subsubsection",
 CellChangeTimes->{{3.6972003653799047`*^9, 3.6972003689962664`*^9}, {
  3.703140877737967*^9, 3.70314088104208*^9}},
 ExpressionUUID -> "348d97b6-69f5-4155-b2f5-50cf63eabbb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PopulationToTheta", "[", "p_", "]"}], ":=", 
   RowBox[{"ArcSin", "[", 
    RowBox[{"Sqrt", "[", "p", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFidelities", "[", 
    RowBox[{"start_", ",", "stop_", ",", "steps_", ",", "rawState_"}], "]"}], 
   ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Re", "@", 
        RowBox[{"ExpmFidelity", "[", 
         RowBox[{
          RowBox[{"rawState", "[", 
           RowBox[{"PopulationToTheta", "[", "i", "]"}], "]"}], ",", 
          RowBox[{"bellState", "[", "2", "]"}]}], "]"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "start", ",", "stop", ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{"start", "-", "stop"}], ")"}], "]"}], "/", "steps"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BasisList", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetCorrs", "[", 
   RowBox[{
   "start_", ",", "stop_", ",", "steps_", ",", "rawState_", ",", "j_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Re", "@", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"rawState", "[", 
         RowBox[{"PopulationToTheta", "[", "i", "]"}], "]"}], ".", 
        RowBox[{"KP", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"projectors", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"BasisList", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"projectors", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"BasisList", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "start", ",", "stop", ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"(", 
          RowBox[{"start", "-", "stop"}], ")"}], "]"}], "/", "steps"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetSigmas", "[", 
   RowBox[{"start_", ",", "stop_", ",", "steps_", ",", "rawState_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Re", "@", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"rawState", "[", 
         RowBox[{"PopulationToTheta", "[", "i", "]"}], "]"}], ".", 
        RowBox[{"KP", "[", 
         RowBox[{
          SubscriptBox["\[Sigma]", "j"], ",", 
          SubscriptBox["\[Sigma]", "j"]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "start", ",", "stop", ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"(", 
          RowBox[{"start", "-", "stop"}], ")"}], "]"}], "/", "steps"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetFirstClickProbs", "[", 
   RowBox[{"start_", ",", "stop_", ",", "steps_", ",", "setupParams_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FirstClickProb", "[", 
      RowBox[{
       RowBox[{"PopulationToTheta", "[", "i", "]"}], ",", 
       RowBox[{"setupParams", "[", "\"\<pDetect1\>\"", "]"}], ",", 
       RowBox[{"setupParams", "[", "\"\<pDetect2\>\"", "]"}], ",", 
       RowBox[{"setupParams", "[", "\"\<pDC\>\"", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "start", ",", "stop", ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"(", 
          RowBox[{"start", "-", "stop"}], ")"}], "]"}], "/", "steps"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetSuccessRate", "[", 
   RowBox[{"start_", ",", "stop_", ",", "steps_", ",", "setupParams_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetFirstClickProbs", "[", 
     RowBox[{"start", ",", "stop", ",", "steps", ",", "setupParams"}], "]"}], 
    "*", 
    SuperscriptBox["10", "4"]}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetSuccessRateBK", "[", 
   RowBox[{"start_", ",", "stop_", ",", "steps_", ",", "setupParams_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"setupParams", "[", "\"\<pDetect1\>\"", "]"}], "*", 
      RowBox[{"setupParams", "[", "\"\<pDetect2\>\"", "]"}], "*", 
      RowBox[{
       SuperscriptBox["10", "4"], "/", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "start", ",", "stop", ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"start", "-", "stop"}], "]"}], "/", "steps"}]}], "}"}]}], 
    "]"}], "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.6972003711174784`*^9, 3.697200536689034*^9}, {
   3.697200641668531*^9, 3.6972007049178553`*^9}, {3.697200756021965*^9, 
   3.697200766229986*^9}, {3.6972008383511972`*^9, 3.697200942207582*^9}, {
   3.6972010310264626`*^9, 3.697201049178278*^9}, {3.6972010880101604`*^9, 
   3.697201102184578*^9}, {3.6972012050718656`*^9, 3.6972013571560726`*^9}, {
   3.6972014185492115`*^9, 3.697201421187475*^9}, {3.6972014718945456`*^9, 
   3.6972015681541705`*^9}, 3.6972016006864233`*^9, {3.697203418992072*^9, 
   3.697203438897082*^9}, {3.6972035687946577`*^9, 3.697203578173658*^9}, {
   3.697204675180467*^9, 3.69720469041199*^9}, 3.6972068199139194`*^9, {
   3.6974492133377647`*^9, 3.6974492134797783`*^9}, {3.697449245846015*^9, 
   3.6974492497844086`*^9}, {3.697449342087638*^9, 3.6974493436117907`*^9}, {
   3.697449429764405*^9, 3.6974494884462724`*^9}, {3.6986028944640083`*^9, 
   3.6986029821717234`*^9}, {3.6986030988755283`*^9, 
   3.6986031462528114`*^9}, {3.698603272473633*^9, 3.6986032726920333`*^9}, {
   3.6986897283071203`*^9, 3.698689756134869*^9}, {3.698690500182975*^9, 
   3.698690500770422*^9}, {3.699030033480956*^9, 3.699030049321439*^9}, 
   3.6990303950305367`*^9, {3.6990886872816057`*^9, 3.699088687286804*^9}, 
   3.6990904228357277`*^9, {3.70280882636189*^9, 3.702808840272284*^9}, {
   3.702808892508395*^9, 3.702808894270595*^9}, {3.7028091615277987`*^9, 
   3.7028091650087013`*^9}, 3.702809224136671*^9, {3.7028092991444607`*^9, 
   3.702809409133217*^9}, {3.7028095141498938`*^9, 3.702809587234432*^9}, 
   3.7028096338324842`*^9, 3.7028097800039473`*^9, {3.7028098984168463`*^9, 
   3.702809912745103*^9}, {3.702811729182878*^9, 3.702811731207246*^9}, {
   3.7028125323796663`*^9, 3.702812545753587*^9}, {3.7028125758849907`*^9, 
   3.7028126070174513`*^9}, {3.702812789660804*^9, 3.702812796858944*^9}, {
   3.702812916775763*^9, 3.70281297115306*^9}, {3.702813119970038*^9, 
   3.702813125664239*^9}, {3.70281318127774*^9, 3.702813207332767*^9}, {
   3.702813237618187*^9, 3.702813238914785*^9}, {3.702813334271778*^9, 
   3.702813337401887*^9}, {3.703137675290679*^9, 3.703137695791868*^9}, {
   3.703137726527701*^9, 3.7031377842616653`*^9}, {3.7031379104397163`*^9, 
   3.70313795417314*^9}, {3.703137989651001*^9, 3.7031380245826273`*^9}, {
   3.7031382331412697`*^9, 3.703138261370008*^9}, {3.703138316567142*^9, 
   3.7031383191520853`*^9}, {3.703138361073629*^9, 3.703138367942869*^9}, 
   3.703140209016863*^9, {3.703140240705196*^9, 3.7031402449797153`*^9}, {
   3.70314087528222*^9, 3.703140945762711*^9}, {3.703141117320747*^9, 
   3.703141135558874*^9}, {3.703142506892461*^9, 3.7031425070547256`*^9}, {
   3.703219622270607*^9, 3.703219624184651*^9}, {3.7032344375904922`*^9, 
   3.703234440362596*^9}, {3.70323447749614*^9, 3.70323455175242*^9}, 
   3.7087738273953032`*^9, {3.7087788585393815`*^9, 3.708778861466674*^9}},
 ExpressionUUID -> "ca7db003-64e3-4302-a6f1-58bb9c47f514"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CreatePopLineCut", "[", 
    RowBox[{
    "pop_", ",", "MinAttempts_", ",", "MaxAttempts_", ",", "NoOfPoints_", ",",
      "setupParams_", ",", 
     RowBox[{"includeFails_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "fids", "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fids", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"attempts", ",", 
            RowBox[{"EntangleOnDemand", "[", 
             RowBox[{
              RowBox[{"PopulationToTheta", "[", "pop", "]"}], ",", "attempts",
               ",", "setupParams", ",", "includeFails"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"attempts", ",", "MinAttempts", ",", "MaxAttempts", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"MaxAttempts", "-", "MinAttempts"}], ")"}], "/", 
             "NoOfPoints"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"fids", ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Maximum entangling attempts\>\"", ",", "\"\<Fidelity\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"minPlotAttempts", ",", "maxPlotAttempts"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"minPlotFid", ",", "maxPlotFid"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", "Dashed", "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"minPlotAttempts", ",", "0.5"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxPlotAttempts", ",", "0.5"}], "}"}]}], "}"}], 
             "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.708840417242784*^9, 3.708840427467784*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreatePlotLists", "[", 
   RowBox[{
   "func_", ",", "start_", ",", "stop_", ",", "steps_", ",", "args___"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", ",", "plotLists", ",", "x", ",", "j"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", 
       RowBox[{"func", "[", 
        RowBox[{"start", ",", "stop", ",", "steps", ",", "args"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"plotLists", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "start", ",", "stop", ",", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"(", 
              RowBox[{"start", "-", "stop"}], ")"}], "]"}], "/", "steps"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArrayDepth", "[", "res", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"plotLists", "=", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"x", ",", "res"}], "]"}], ",", "2"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<=", 
           RowBox[{
            RowBox[{"Dimensions", "[", "res", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"plotLists", ",", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Riffle", "[", 
               RowBox[{"x", ",", 
                RowBox[{"res", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", ";;"}], "]"}], "]"}]}], "]"}], ",", "2"}],
              "]"}]}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "plotLists", "]"}], ";"}], "\[IndentingNewLine]",
      ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697203037928133*^9, 3.6972031160089407`*^9}, {
   3.6972031517855177`*^9, 3.6972031816915083`*^9}, {3.6972032565633173`*^9, 
   3.697203257206253*^9}, {3.6972033097839947`*^9, 3.6972033433186407`*^9}, {
   3.702809699621626*^9, 3.702809701774041*^9}, {3.702809746974483*^9, 
   3.702809759385809*^9}, {3.7028132994819937`*^9, 3.702813500770796*^9}, {
   3.702816810273096*^9, 3.7028168726852627`*^9}, 3.7031413276988373`*^9, {
   3.703141368473521*^9, 3.703141375071705*^9}, {3.7087763988744397`*^9, 
   3.708776424812033*^9}, 3.7087769013746843`*^9},
 ExpressionUUID -> "95ffcdb5-5bb5-42bb-a238-6e4674ac4c06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"divisionFunction", "[", 
    RowBox[{"xMin_", ",", "xMax_"}], "]"}], ":=", 
   RowBox[{"N", "@", 
    RowBox[{"FindDivisions", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xMin", ",", "xMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "5"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridFunction", "[", 
   RowBox[{"xMin_", ",", "xMax_"}], "]"}], ":=", 
  RowBox[{"First", "[", 
   RowBox[{"divisionFunction", "[", 
    RowBox[{"xMin", ",", "xMax"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "tickFunction", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<MinorLength\>\"", "\[Rule]", "0.005"}], ",", 
     RowBox[{"\"\<MajorLength\>\"", "\[Rule]", ".01"}], ",", 
     RowBox[{"\"\<InsideOutside\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tickFunction", "[", 
   RowBox[{"xMin_", ",", "xMax_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"major", ",", "minor"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"major", ",", "minor"}], "}"}], "=", 
      RowBox[{"divisionFunction", "[", 
       RowBox[{"xMin", ",", "xMax"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#", ",", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<InsideOutside\>\"", "]"}], " ", 
             
             RowBox[{"OptionValue", "[", "\"\<MajorLength\>\"", "]"}]}]}], 
           "}"}], "&"}], ",", "major"}], "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "\"\<\>\"", ",", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<InsideOutside\>\"", "]"}], " ", 
             
             RowBox[{"OptionValue", "[", "\"\<MinorLength\>\"", "]"}]}]}], 
           "}"}], "&"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"minor", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tickFunctionNoLabel", "[", 
   RowBox[{"xMin_", ",", "xMax_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<\>\"", ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
    RowBox[{"tickFunction", "[", 
     RowBox[{"xMin", ",", "xMax"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.702810477916521*^9, 3.7028105135614157`*^9}, {
  3.702811152828006*^9, 3.702811267924197*^9}, {3.702811368879443*^9, 
  3.702811395201708*^9}},
 ExpressionUUID -> "0891315c-54f6-4af1-9559-fc34af692590"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"col1", " ", "=", " ", 
   RowBox[{
    RowBox[{"ColorData", "[", 
     RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col2", " ", "=", " ", 
   RowBox[{
    RowBox[{"ColorData", "[", 
     RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col3", " ", "=", " ", 
   RowBox[{
    RowBox[{"ColorData", "[", 
     RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6972039833646584`*^9, 3.697204019358658*^9}, {
  3.6974495019666243`*^9, 3.6974495077251997`*^9}, {3.703414943713552*^9, 
  3.7034149489025517`*^9}, {3.7034187706986313`*^9, 3.703418775438157*^9}, {
  3.704538157240443*^9, 3.7045381610474434`*^9}},
 ExpressionUUID -> "46093e64-b912-4b1d-8a0e-50847fa367b1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Entanglement on demand", "Section",
 CellChangeTimes->{{3.702799101740656*^9, 3.702799105998024*^9}, {
  3.708840463238784*^9, 3.708840466342784*^9}},
 ExpressionUUID -> "ee7af857-9e5b-49c2-9e70-7012e420de31"],

Cell[CellGroupData[{

Cell["Load data", "Subsection",
 CellChangeTimes->{{3.7032267925334063`*^9, 3.703226798563301*^9}},
 ExpressionUUID -> "eeb1ac82-8bd0-4a15-8399-8ffee8bffded"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.708840505945784*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "BaseDirString", "=", 
   "\"\<D:\\\\measuring\\\\data\\\\Single_click_expm\\\\LT4_data\\\\\
EntOnDemand20170705\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExpmStrings0p2", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<EntOnDemand0p2_11p5k\>\"", ",", "\"\<EntOnDemand0p2_14k\>\"", ",", 
     "\"\<EntOnDemand0p2_16p5k\>\"", ",", "\"\<EntOnDemand0p2_19k\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LDEAttempts0p2", "=", 
    RowBox[{"{", 
     RowBox[{"11.5*^3", ",", "14*^3", ",", "16.5*^3", ",", "19*^3"}], "}"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExpmStrings0p15", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<EntOnDemand0p15_14k\>\"", ",", "\"\<EntOnDemand0p15_18k\>\"", ",", 
     "\"\<EntOnDemand0p15_22k\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LDEAttempts0p15", "=", 
    RowBox[{"{", 
     RowBox[{"14*^3", ",", "18*^3", ",", "22*^3"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileCorrs0p2", "=", 
   RowBox[{"getFileCorrs", "[", "ExpmStrings0p2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fileCorrs0p15", "=", 
    RowBox[{"getFileCorrs", "[", "ExpmStrings0p15", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileCorrsOnlyClicks0p2", "=", 
   RowBox[{"getFileCorrs", "[", 
    RowBox[{"ExpmStrings0p2", ",", "\"\<correlations_only_APD.h5\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileCorrsOnlyClicks0p15", "=", 
   RowBox[{"getFileCorrs", "[", 
    RowBox[{"ExpmStrings0p15", ",", "\"\<correlations_only_APD.h5\>\""}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7032272675356827`*^9, 3.703227290304446*^9}, {
   3.703227349861649*^9, 3.703227379813525*^9}, {3.703227646135727*^9, 
   3.703227646295722*^9}, {3.703227700585904*^9, 3.703227716267078*^9}, {
   3.703227880142015*^9, 3.703227886100463*^9}, {3.703230345560623*^9, 
   3.703230403239609*^9}, 3.703230758244464*^9, {3.703230819579153*^9, 
   3.703230850682106*^9}, {3.703231153537725*^9, 3.703231213606132*^9}, {
   3.703231279070096*^9, 3.7032313024479723`*^9}, {3.703243366791892*^9, 
   3.7032433969643183`*^9}, {3.703414993114552*^9, 3.703415002029552*^9}, {
   3.703415061732552*^9, 3.703415065850552*^9}, {3.7034151196455517`*^9, 
   3.703415181842552*^9}, {3.703415298087552*^9, 3.703415300624552*^9}, {
   3.7034153466965523`*^9, 3.703415357393552*^9}, {3.703415411661552*^9, 
   3.7034154498625517`*^9}, {3.703415687692552*^9, 3.703415695509552*^9}, {
   3.703419083107538*^9, 3.7034190847305384`*^9}, {3.7034191482895384`*^9, 
   3.7034191503535385`*^9}, {3.7034192011795387`*^9, 
   3.7034192044475384`*^9}, {3.703563828693392*^9, 3.7035638300855308`*^9}, {
   3.704517656354638*^9, 3.7045176646764708`*^9}, {3.70626930242725*^9, 
   3.7062693213491416`*^9}, {3.706520060486454*^9, 3.7065200683812437`*^9}, {
   3.7065201855389585`*^9, 3.706520197787183*^9}, {3.7065252330786805`*^9, 
   3.7065252548688593`*^9}, {3.706525305341906*^9, 3.7065253056899405`*^9}, {
   3.7069303543055906`*^9, 3.7069303695861187`*^9}, 3.7069308860417585`*^9, {
   3.7070743713691907`*^9, 3.7070743741794715`*^9}, {3.707074426646718*^9, 
   3.7070744272777805`*^9}, {3.707074484482501*^9, 3.707074520240076*^9}, {
   3.7070747997010193`*^9, 3.707074875424591*^9}, {3.7086828612515535`*^9, 
   3.708682881529581*^9}, {3.708682941772605*^9, 3.7086829836777945`*^9}, {
   3.708834971910825*^9, 3.7088351044350758`*^9}, 3.7088365732209396`*^9, {
   3.7088371135597973`*^9, 3.708837149893797*^9}, {3.7088393582324314`*^9, 
   3.70883944021863*^9}, 3.708839658708476*^9, {3.708840577281784*^9, 
   3.708840618686784*^9}},
 ExpressionUUID -> "d259819b-fd60-44ae-a6f6-498ab8d12511"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CreateDataFidelityList", "[", 
   RowBox[{"LDEAttempts_", ",", "fileCorrs_"}], "]"}], ":=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"FidFromData", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"FidErrorFromData", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "&"}], "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"LDEAttempts", ",", "fileCorrs"}], "}"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CreateDataAvgFidelityList", "[", 
   RowBox[{"LDEAttempts_", ",", "fileCorrs_"}], "]"}], ":=", 
  RowBox[{"Transpose", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"FidFromData", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"ErrorBar", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"Total", "[", 
            SuperscriptBox[
             RowBox[{
              RowBox[{"FidErrorFromData", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "2"], "]"}], "]"}], "/", "2"}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"LDEAttempts", ",", "fileCorrs"}], "}"}], "]"}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.7088414265092525`*^9, 3.7088414711337147`*^9}, {
  3.7088415153931403`*^9, 3.7088415277773786`*^9}, {3.7088415880854087`*^9, 
  3.7088416184364433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateDataAvgFidelityList", "[", 
  RowBox[{"LDEAttempts0p2", ",", "fileCorrs0p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088415747710776`*^9, 3.7088415803706374`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"11500.`", ",", "0.5274918611520919`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"14000", ",", "0.5657543057678562`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"16500.`", ",", "0.5516170413953221`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"19000", ",", "0.5372815537793714`"}], "}"}]},
     {
      RowBox[{"ErrorBar", "[", "0.011955114473206505`", "]"}], 
      RowBox[{"ErrorBar", "[", "0.011965710001908776`", "]"}], 
      RowBox[{"ErrorBar", "[", "0.012016423789108216`", "]"}], 
      RowBox[{"ErrorBar", "[", "0.009241506205456973`", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7088415809666967`*^9, 3.7088416210687065`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fileCorrs0p2", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088413707316756`*^9, 3.7088413755311556`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", "0.3811130217062222`"}]},
          {"0.37922283701389203`"},
          {
           RowBox[{"-", "0.4616760920019407`"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0.3534281615483714`"},
          {
           RowBox[{"-", "0.40509652686680964`"}]},
          {
           RowBox[{"-", "0.4323996920253401`"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7088413718437867`*^9, 3.7088413757921815`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate", "Subsection",
 CellChangeTimes->{{3.703226800367469*^9, 3.703226801648325*^9}},
 ExpressionUUID -> "e4bd887c-c012-4628-9604-ebbc1445bb97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmin", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmax", "=", "0.35"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minPlotAttempts", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxPlotAttempts", "=", "24000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minPlotFid", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxPlotFid", "=", "0.7"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setupParams", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<vis\>\"", " ", "\[Rule]", " ", "0.88"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<fz\>\"", " ", "\[Rule]", "  ", "0.99"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pDetect1\>\"", " ", "\[Rule]", "  ", "0.0003"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pDetect2\>\"", " ", "\[Rule]", "  ", "0.000375"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pDoubleExcite\>\"", " ", "\[Rule]", "  ", "0.00"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pDC\>\"", "\[Rule]", " ", 
      RowBox[{"20.0", " ", "30*^-9"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<LDEduration\>\"", " ", "\[Rule]", "  ", 
      RowBox[{"5.0", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], " ", ",", 
     RowBox[{"(*", 
      RowBox[{"in", " ", "seconds"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<InterferometricDrift\>\"", " ", "\[Rule]", "  ", "\[Pi]"}], 
     ",", 
     RowBox[{"(*", 
      RowBox[{
      "full", " ", "decoherence", " ", "within", " ", "1000", " ", "ms"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<InterferometricOffset\>\"", " ", "\[Rule]", "  ", 
      RowBox[{"28.0", " ", 
       RowBox[{"\[Pi]", "/", "180"}]}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "Initial", " ", "uncertainty", " ", "in", " ", "units", " ", "of", " ", 
       "\[Pi]"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<T21\>\"", " ", "\[Rule]", "  ", "0.30"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"in", " ", 
        RowBox[{"seconds", ".", "There"}], " ", "are", " ", "two", " ", 
        "strategies"}], ",", " ", 
       RowBox[{
       "either", " ", "get", " ", "hit", " ", "by", " ", "T2", " ", "or", " ",
         "by", " ", "pulse", " ", "infidelities", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "more", " ", "pulses", " ", "at", " ", "short", " ", "tau"}], ")"}],
          ".", " ", "I"}], " ", "choose", " ", "the", " ", 
        RowBox[{"latter", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<T22\>\"", "\[Rule]", "  ", "0.80"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<decouplinginfidelity\>\"", " ", "\[Rule]", "  ", "1.0"}], 
     " ", ",", 
     RowBox[{"(*", 
      RowBox[{
      "fidelitiy", " ", "loss", " ", "per", " ", "second", " ", "of", " ", 
       "decoupling", " ", "at", " ", "the", " ", "fundamental", " ", 
       "larmour", " ", 
       RowBox[{"frequency", ".", " ", "I"}], " ", "assume", " ", "a", " ", 
       "linear", " ", "relationship", " ", "and", " ", "full", " ", 
       "decoherence", " ", "when", " ", "decoupling", " ", "for", " ", "one", 
       " ", 
       RowBox[{"second", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<T1\>\"", " ", "\[Rule]", "  ", "3.0"}]}], 
    RowBox[{"(*", 
     RowBox[{"in", " ", 
      RowBox[{"seconds", ".", " ", "Without"}], " ", "MW", " ", "switch", " ",
       "and", " ", "favourable", " ", "AMP", " ", 
      RowBox[{"attenuation", "."}]}], "*)"}], "\[IndentingNewLine]", "|>"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.698505295496992*^9, 3.6985053363690643`*^9}, {
   3.698505414260001*^9, 3.698505576937087*^9}, {3.698505844149956*^9, 
   3.6985058704360027`*^9}, {3.6985059475313377`*^9, 3.69850597721819*^9}, {
   3.6985060779163666`*^9, 3.6985060830955763`*^9}, {3.6985063236947985`*^9, 
   3.698506351618848*^9}, {3.698506398091329*^9, 3.6985064368885975`*^9}, {
   3.698506531268763*^9, 3.6985065320019646`*^9}, {3.6985066954278517`*^9, 
   3.6985067190774927`*^9}, {3.6985069477582946`*^9, 3.698506994823577*^9}, 
   3.6985071082357764`*^9, {3.6985071674222803`*^9, 3.6985071930531254`*^9}, {
   3.698507877226553*^9, 3.6985078779909544`*^9}, {3.698508007361982*^9, 
   3.6985080169403987`*^9}, {3.698603366198598*^9, 3.698603394278647*^9}, {
   3.6990296429773207`*^9, 3.699029647996854*^9}, {3.699030220125435*^9, 
   3.699030299378077*^9}, 3.699030358837878*^9, 3.699090624479322*^9, 
   3.699090674405357*^9, {3.699090953896305*^9, 3.699090954788171*^9}, {
   3.699091077805534*^9, 3.6990910784860773`*^9}, {3.699091371170948*^9, 
   3.6990913761985197`*^9}, {3.699091572920747*^9, 3.69909159659818*^9}, {
   3.702799114547147*^9, 3.702799136300476*^9}, {3.702808644600861*^9, 
   3.7028086456229887`*^9}, {3.702808677812283*^9, 3.7028086781312227`*^9}, {
   3.702810083019513*^9, 3.702810085029331*^9}, {3.702812209718943*^9, 
   3.7028122161689167`*^9}, {3.7028124714712276`*^9, 
   3.7028124973839417`*^9}, {3.703141490854332*^9, 3.703141492504271*^9}, 
   3.703141556840547*^9, {3.703142161996684*^9, 3.703142165455772*^9}, {
   3.7031423084756327`*^9, 3.703142311054722*^9}, {3.703143693580669*^9, 
   3.70314369919576*^9}, {3.7031438819915867`*^9, 3.703143882172147*^9}, {
   3.703144165226799*^9, 3.703144166193583*^9}, {3.703144215904237*^9, 
   3.703144217165194*^9}, {3.7031443592719603`*^9, 3.703144382528777*^9}, 
   3.703144582881667*^9, {3.703144629922998*^9, 3.7031446593002367`*^9}, {
   3.703144798402837*^9, 3.7031447987768793`*^9}, {3.703144876898672*^9, 
   3.7031448770899487`*^9}, {3.703144954954144*^9, 3.7031449875816107`*^9}, {
   3.703145103236177*^9, 3.703145141670828*^9}, {3.703145273125782*^9, 
   3.703145273847713*^9}, {3.703214270974931*^9, 3.703214271911789*^9}, {
   3.703214417591001*^9, 3.7032144192679367`*^9}, {3.7032349571005287`*^9, 
   3.7032349914229918`*^9}, {3.7032358893501253`*^9, 3.703235893230377*^9}, {
   3.7032359655674334`*^9, 3.703236008152959*^9}, {3.7032453963356867`*^9, 
   3.703245399263844*^9}, {3.703245438732254*^9, 3.7032454403346157`*^9}, {
   3.7032454952437983`*^9, 3.7032454964951973`*^9}, {3.703246675285*^9, 
   3.703246706428838*^9}, {3.70324679683036*^9, 3.703246849614999*^9}, {
   3.7032469772216053`*^9, 3.703246977646921*^9}, {3.7035636974372673`*^9, 
   3.7035637238349066`*^9}, {3.70356385548007*^9, 3.7035638670722294`*^9}, {
   3.7045177127122736`*^9, 3.7045177323342357`*^9}, {3.7045177771447163`*^9, 
   3.7045177772557273`*^9}, {3.7045180318741865`*^9, 
   3.7045180403690357`*^9}, {3.7045373564055357`*^9, 3.704537374678363*^9}, {
   3.7045378718800783`*^9, 3.7045378833842287`*^9}, {3.704538182815443*^9, 
   3.704538214557443*^9}, {3.7045392239682875`*^9, 3.7045392445433445`*^9}, {
   3.7045392825051403`*^9, 3.7045393138972797`*^9}, {3.704539818220707*^9, 
   3.7045398316600504`*^9}, {3.7046167812190185`*^9, 3.704616781267023*^9}, {
   3.704616893453241*^9, 3.704616919309826*^9}, {3.704617068370731*^9, 
   3.7046170706169553`*^9}, {3.704617341999091*^9, 3.7046174044735565`*^9}, {
   3.7046174387515564`*^9, 3.7046174437905564`*^9}, {3.704617491571556*^9, 
   3.7046174921715565`*^9}, {3.7046175350475564`*^9, 
   3.7046175352635565`*^9}, {3.7046175995625563`*^9, 
   3.7046176194335566`*^9}, {3.7046176778125563`*^9, 3.704617677892556*^9}, {
   3.7046177094745564`*^9, 3.7046177456545563`*^9}, {3.7046179143555565`*^9, 
   3.704617919385556*^9}, {3.7050311347190294`*^9, 3.7050311863011875`*^9}, {
   3.7050312296315193`*^9, 3.7050312329118476`*^9}, {3.7050313060171576`*^9, 
   3.705031306169173*^9}, {3.705031364313512*^9, 3.705031364511492*^9}, {
   3.705031406088334*^9, 3.705031437451197*^9}, {3.7050316358323574`*^9, 
   3.705031636255315*^9}, {3.705117986899886*^9, 3.7051180319718857`*^9}, {
   3.7051458089415655`*^9, 3.705145818197491*^9}, {3.7051459333060007`*^9, 
   3.7051459342650967`*^9}, {3.7053126879514303`*^9, 
   3.7053127850844307`*^9}, {3.7053783977337275`*^9, 
   3.7053783998939433`*^9}, {3.7062636838544297`*^9, 
   3.7062637118312273`*^9}, {3.7062637876338067`*^9, 
   3.7062637883448777`*^9}, {3.706269366447651*^9, 3.7062693842554317`*^9}, {
   3.706273400077525*^9, 3.7062734132822046`*^9}, {3.706273459706561*^9, 
   3.706273462609271*^9}, {3.706273493905141*^9, 3.7062734986026716`*^9}, {
   3.706273590227508*^9, 3.706273618037727*^9}, {3.7062736607264576`*^9, 
   3.706273660853445*^9}, {3.7062737104897585`*^9, 3.706273710712758*^9}, {
   3.7062737721407585`*^9, 3.7062737938187585`*^9}, 3.706413879831216*^9, {
   3.706416888264037*^9, 3.7064168916073713`*^9}, {3.706416945385749*^9, 
   3.70641694669888*^9}, {3.706443685241845*^9, 3.7064436921775384`*^9}, {
   3.7064441988071966`*^9, 3.706444209593275*^9}, {3.7064445817974916`*^9, 
   3.7064445821135235`*^9}, {3.7064447346407747`*^9, 
   3.7064447352058306`*^9}, {3.706444989543262*^9, 3.7064449998662944`*^9}, {
   3.7064450328315907`*^9, 3.7064450347167788`*^9}, {3.706445082662573*^9, 
   3.7064450842747345`*^9}, 3.7065022259890985`*^9, 3.706502282119711*^9, {
   3.706509688525315*^9, 3.706509688910353*^9}, {3.706509725828045*^9, 
   3.706509728324294*^9}, {3.706509771455607*^9, 3.7065097724997115`*^9}, {
   3.706509824665928*^9, 3.7065098247909403`*^9}, {3.7065198292783356`*^9, 
   3.7065198357249804`*^9}, 3.7065198659179993`*^9, {3.7065199598603926`*^9, 
   3.7065199604424505`*^9}, {3.7068471154374123`*^9, 
   3.7068471279176598`*^9}, {3.7068749619495516`*^9, 
   3.7068749620525513`*^9}, {3.706930400963256*^9, 3.706930434995659*^9}, {
   3.7069305643985977`*^9, 3.706930625006658*^9}, {3.7069306722333803`*^9, 
   3.706930673520509*^9}, {3.7069309987120247`*^9, 3.7069309991510687`*^9}, {
   3.7069313086790185`*^9, 3.706931308910042*^9}, {3.7069313597511253`*^9, 
   3.706931359950145*^9}, {3.7069314880499535`*^9, 3.706931513194468*^9}, {
   3.706931583403488*^9, 3.7069316139725447`*^9}, {3.7070753002240667`*^9, 
   3.7070753215121956`*^9}, {3.707075789294969*^9, 3.7070758036694064`*^9}, {
   3.7070763573220105`*^9, 3.707076372155527*^9}, 3.707076643459892*^9, 
   3.7071070024723816`*^9, {3.7071072157897115`*^9, 3.70710721757689*^9}, {
   3.7086935793895597`*^9, 3.708693600925713*^9}, {3.7086937317797976`*^9, 
   3.7086937328829074`*^9}, {3.7086942653851523`*^9, 3.708694265880202*^9}, {
   3.7086942980414176`*^9, 3.708694399148527*^9}, {3.708741554034893*^9, 
   3.7087415625427437`*^9}, {3.708742768462324*^9, 3.708742770293507*^9}, {
   3.708742809195397*^9, 3.7087428101804953`*^9}, {3.7087428782342997`*^9, 
   3.708742891782655*^9}, {3.7087429726057363`*^9, 3.708743008477524*^9}, {
   3.708743044684524*^9, 3.7087430458335238`*^9}, {3.7087679096035457`*^9, 
   3.7087679100245876`*^9}, {3.708773852803844*^9, 3.708773858402404*^9}, {
   3.708773936182181*^9, 3.7087739368702497`*^9}, {3.7087739684224043`*^9, 
   3.7087739978163433`*^9}, {3.7087740398595476`*^9, 
   3.7087740876923304`*^9}, {3.708774308348394*^9, 3.708774378728431*^9}, {
   3.7087746163531914`*^9, 3.7087746343059864`*^9}, {3.7087747251410685`*^9, 
   3.7087747421817727`*^9}, {3.708774785609115*^9, 3.7087749184293957`*^9}, {
   3.7087750720517564`*^9, 3.7087750846440153`*^9}, {3.7087751391424646`*^9, 
   3.708775161087659*^9}, {3.7087752280253525`*^9, 3.7087752316897187`*^9}, {
   3.7087752718997393`*^9, 3.708775285596109*^9}, {3.7087753793924875`*^9, 
   3.7087755294956365`*^9}, {3.708775618724636*^9, 3.7087758229496365`*^9}, {
   3.708776048776636*^9, 3.7087761078606367`*^9}, {3.7087761652166367`*^9, 
   3.7087761674716363`*^9}, {3.708776854493997*^9, 3.708776871965744*^9}, {
   3.708778305622095*^9, 3.708778362614794*^9}, {3.708834050163659*^9, 
   3.7088340640200443`*^9}, {3.7088388426928825`*^9, 
   3.7088388806956825`*^9}, {3.708839058012413*^9, 3.7088390660132127`*^9}, {
   3.7088397682324276`*^9, 3.708839769927597*^9}, {3.708839973009903*^9, 
   3.708839981055708*^9}, {3.708840014851087*^9, 3.7088400255381556`*^9}},
 ExpressionUUID -> "8c554a61-b111-4e64-9689-519cdfa7b9e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"modelFidPlt0p2", "=", 
     RowBox[{"CreatePopLineCut", "[", 
      RowBox[{
      "0.2", ",", "minPlotAttempts", ",", "maxPlotAttempts", ",", "20", ",", 
       "setupParams"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFids0p2", "=", 
     RowBox[{"CreateDataFidelityList", "[", 
      RowBox[{"LDEAttempts0p2", ",", "fileCorrs0p2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFidPlt0p2", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{"dataFids0p2", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"minPlotAttempts", ",", "maxPlotAttempts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"minPlotFid", ",", "maxPlotFid"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<LDE Attempts\>\"", ",", "\"\<Fidelity\>\""}], "}"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelFidPlt0p15", "=", 
     RowBox[{"CreatePopLineCut", "[", 
      RowBox[{
      "0.15", ",", "minPlotAttempts", ",", "maxPlotAttempts", ",", "20", ",", 
       "setupParams"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFids0p15", "=", 
     RowBox[{"CreateDataFidelityList", "[", 
      RowBox[{"LDEAttempts0p15", ",", "fileCorrs0p15"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFidPlt0p15", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{"dataFids0p15", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"minPlotAttempts", ",", "maxPlotAttempts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"minPlotFid", ",", "maxPlotFid"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<LDE Attempts\>\"", ",", "\"\<Fidelity\>\""}], "}"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelFidPltOnlyClicks0p2", "=", 
     RowBox[{"CreatePopLineCut", "[", 
      RowBox[{
      "0.2", ",", "minPlotAttempts", ",", "maxPlotAttempts", ",", "20", ",", 
       "setupParams", ",", "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFidsOnlyClicks0p2", "=", 
     RowBox[{"CreateDataFidelityList", "[", 
      RowBox[{"LDEAttempts0p2", ",", "fileCorrsOnlyClicks0p2"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFidPltOnlyClicks0p2", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{"dataFidsOnlyClicks0p2", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"minPlotAttempts", ",", "maxPlotAttempts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"minPlotFid", ",", "maxPlotFid"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<LDE Attempts\>\"", ",", "\"\<Fidelity\>\""}], "}"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "modelFidPlt0p2", ",", "dataFidPlt0p2", ",", "modelFidPltOnlyClicks0p2", 
      ",", "dataFidPltOnlyClicks0p2"}], "}"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modelFidPltOnlyClicks0p15", "=", 
     RowBox[{"CreatePopLineCut", "[", 
      RowBox[{
      "0.15", ",", "minPlotAttempts", ",", "maxPlotAttempts", ",", "20", ",", 
       "setupParams", ",", "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFidsOnlyClicks0p15", "=", 
     RowBox[{"CreateDataFidelityList", "[", 
      RowBox[{"LDEAttempts0p15", ",", "fileCorrsOnlyClicks0p15"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataFidPltOnlyClicks0p15", "=", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{"dataFidsOnlyClicks0p15", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"minPlotAttempts", ",", "maxPlotAttempts"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"minPlotFid", ",", "maxPlotFid"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<LDE Attempts\>\"", ",", "\"\<Fidelity\>\""}], "}"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "modelFidPlt0p15", ",", "dataFidPlt0p15", ",", 
      "modelFidPltOnlyClicks0p15", ",", "dataFidPltOnlyClicks0p15"}], "}"}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.708774165228083*^9, 3.7087742256971292`*^9}, {
   3.7087742656191216`*^9, 3.7087742981153708`*^9}, {3.7087762145576363`*^9, 
   3.7087762205396366`*^9}, {3.7087762673376365`*^9, 3.708776308950448*^9}, {
   3.708776798091357*^9, 3.70877680761931*^9}, {3.708838823106924*^9, 
   3.7088388239250064`*^9}, {3.7088388895435677`*^9, 3.708839123963007*^9}, {
   3.7088391939860086`*^9, 3.708839312678877*^9}, {3.7088396761012154`*^9, 
   3.708839706742279*^9}, {3.7088397452881336`*^9, 3.708839754745079*^9}, 
   3.7088399317817807`*^9, {3.7088406459167843`*^9, 3.7088407683587837`*^9}, {
   3.708841182747879*^9, 3.7088412268702908`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQYdhx3airvNA2we2IP5z444eDz8kXNgIZTvcsxB
5pXNYsZfUP6i4w7vgvtPJrk9hPAZTjpISz4yFeqA8uNOORwX+n5B4QCUv+e0
g5Fc+ueW91C+1FmHLA+/3zLijyD8inMOsdYTFm40h/KvnXdg3f9L5EcglD/r
goPd0vcPJqdB+Z4XHY4obFoiUQbl/7jokG/0ZT53I5S//JLDo7lnJZ62Q/lh
lx2mGN6bJ9gN5bNecYhO/q/3uQvK33LFwXvnFKtHMPXJVx3uqdpN1WuC8oWu
OfTNz/JWqILyD15z2CfAnfIjH8ovuO4gtSi3/2PyI3sA7Dd3tQ==
        
        "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{11500., 0.5289495522263071}, {14000., 0.5532139646035193}, {
        16500., 0.5555029876805138}, {19000., 
        0.529287327972073}}], {{
         LineBox[{{11500., 0.5457012073301255}, {11500., 
          0.5121978971224888}}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.5457012073301255}], 
           Offset[{-1.5, 0}, {11500., 0.5457012073301255}]}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.5121978971224888}], 
           Offset[{-1.5, 0}, {11500., 0.5121978971224888}]}]}, {
         LineBox[{{14000., 0.5700461099653594}, {14000., 
          0.5363818192416793}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.5700461099653594}], 
           Offset[{-1.5, 0}, {14000., 0.5700461099653594}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.5363818192416793}], 
           Offset[{-1.5, 0}, {14000., 0.5363818192416793}]}]}, {
         LineBox[{{16500., 0.5723798579199031}, {16500., 
          0.5386261174411244}}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.5723798579199031}], 
           Offset[{-1.5, 0}, {16500., 0.5723798579199031}]}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.5386261174411244}], 
           Offset[{-1.5, 0}, {16500., 0.5386261174411244}]}]}, {
         LineBox[{{19000., 0.542313897110326}, {19000., 0.51626075883382}}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.542313897110326}], 
           Offset[{-1.5, 0}, {19000., 0.542313897110326}]}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.51626075883382}], 
           Offset[{-1.5, 0}, {19000., 0.51626075883382}]}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{11500., 0.5260341700778767}, {14000., 0.578294646932193}, {
        16500., 0.5477310951101303}, {19000., 
        0.5452757795866698}}], {{
         LineBox[{{11500., 0.5430952690914984}, {11500., 
          0.5089730710642549}}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.5430952690914984}], 
           Offset[{-1.5, 0}, {11500., 0.5430952690914984}]}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.5089730710642549}], 
           Offset[{-1.5, 0}, {11500., 0.5089730710642549}]}]}, {
         LineBox[{{14000., 0.5953061649690117}, {14000., 
          0.5612831288953744}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.5953061649690117}], 
           Offset[{-1.5, 0}, {14000., 0.5953061649690117}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.5612831288953744}], 
           Offset[{-1.5, 0}, {14000., 0.5612831288953744}]}]}, {
         LineBox[{{16500., 0.5648410049182093}, {16500., 
          0.5306211853020513}}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.5648410049182093}], 
           Offset[{-1.5, 0}, {16500., 0.5648410049182093}]}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.5306211853020513}], 
           Offset[{-1.5, 0}, {16500., 0.5306211853020513}]}]}, {
         LineBox[{{19000., 0.5583879969532449}, {19000., 
          0.5321635622200948}}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.5583879969532449}], 
           Offset[{-1.5, 0}, {19000., 0.5583879969532449}]}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.5321635622200948}], 
           Offset[{-1.5, 0}, {19000., 
            0.5321635622200948}]}]}}}, {}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQYdhx3uehtw9l1+ag/mPzvi0PJ3movCOijf5ZiD
wpLj5f87oPxFxx3OHHilrp0C5TOcdFjWrX93kT2UH3fKwTt3r1KaNJS/57SD
TPXStpLvTyB8qbMO375dnnn2MpRfcc7h9yXGDwUboPxr5x3krJbJx/VC+bMu
OGjIvTg4JQvK97zo8Ph0f5GIB5T/46KDeduP83dUofzllxzeajBVv2WG8sMu
O7y9zCTu9ugxhM96xWHD/B2ezw5A+VuuOByLtt59dj6Un3zVwSnineifOihf
6JrDOasitsI4KP/gNYfEB9Osdeyg/ILrDtE+vmm6co/tAb2vecI=
        
        "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{11500., 0.6376879674134737}, {14000., 0.6146072303379836}, {
        16500., 0.5938818022973619}, {19000., 
        0.5568951598692051}}], {{
         LineBox[{{11500., 0.656328971425427}, {11500., 0.6190469634015203}}],
          LineBox[{
          Offset[{1.5, 0}, {11500., 0.656328971425427}], 
           Offset[{-1.5, 0}, {11500., 0.656328971425427}]}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.6190469634015203}], 
           Offset[{-1.5, 0}, {11500., 0.6190469634015203}]}]}, {
         LineBox[{{14000., 0.6327345660629706}, {14000., 
          0.5964798946129966}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6327345660629706}], 
           Offset[{-1.5, 0}, {14000., 0.6327345660629706}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.5964798946129966}], 
           Offset[{-1.5, 0}, {14000., 0.5964798946129966}]}]}, {
         LineBox[{{16500., 0.6118307722263417}, {16500., 0.575932832368382}}],
          LineBox[{
          Offset[{1.5, 0}, {16500., 0.6118307722263417}], 
           Offset[{-1.5, 0}, {16500., 0.6118307722263417}]}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.575932832368382}], 
           Offset[{-1.5, 0}, {16500., 0.575932832368382}]}]}, {
         LineBox[{{19000., 0.5704462679817706}, {19000., 
          0.5433440517566397}}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.5704462679817706}], 
           Offset[{-1.5, 0}, {19000., 0.5704462679817706}]}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.5433440517566397}], 
           Offset[{-1.5, 0}, {19000., 0.5433440517566397}]}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{11500., 0.6463750175474052}, {14000., 0.6532736240722323}, {
        16500., 0.6065355577328518}, {19000., 
        0.5843695783583711}}], {{
         LineBox[{{11500., 0.6653135962380345}, {11500., 
          0.6274364388567759}}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.6653135962380345}], 
           Offset[{-1.5, 0}, {11500., 0.6653135962380345}]}], 
         LineBox[{
          Offset[{1.5, 0}, {11500., 0.6274364388567759}], 
           Offset[{-1.5, 0}, {11500., 0.6274364388567759}]}]}, {
         LineBox[{{14000., 0.6714075299451091}, {14000., 
          0.6351397181993556}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6714075299451091}], 
           Offset[{-1.5, 0}, {14000., 0.6714075299451091}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6351397181993556}], 
           Offset[{-1.5, 0}, {14000., 0.6351397181993556}]}]}, {
         LineBox[{{16500., 0.6246770774997937}, {16500., 
          0.5883940379659099}}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.6246770774997937}], 
           Offset[{-1.5, 0}, {16500., 0.6246770774997937}]}], 
         LineBox[{
          Offset[{1.5, 0}, {16500., 0.5883940379659099}], 
           Offset[{-1.5, 0}, {16500., 0.5883940379659099}]}]}, {
         LineBox[{{19000., 0.5980335184736552}, {19000., 
          0.5707056382430871}}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.5980335184736552}], 
           Offset[{-1.5, 0}, {19000., 0.5980335184736552}]}], 
         LineBox[{
          Offset[{1.5, 0}, {19000., 0.5707056382430871}], 
           Offset[{-1.5, 0}, {19000., 
            0.5707056382430871}]}]}}}, {}}, {}, {}, {{}, {}}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{10070., 0.4015},
   DisplayFunction->Identity,
   Epilog->{
     Directive[
      Dashing[{Small, Small}]], 
     LineBox[{{10000, 0.5}, {24000, 0.5}}]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"Fidelity\"", TraditionalForm], None}, {
      FormBox["\"Maximum entangling attempts\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{10000, 24000}, {0.4, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7088392679033995`*^9, 3.7088393139019995`*^9}, 
   3.708839711824787*^9, {3.7088397582294273`*^9, 3.708839774248029*^9}, 
   3.7088399864502473`*^9, 3.70884002818242*^9, 3.7088407446937838`*^9, 
   3.7088412295855627`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQYdhx1edi697d1z1x7Mf3bEwTHgkwpD9T0I3+WY
Q7845yvxoPsQ/qLjDv+FkxZt4XwA4TOcdDiuy+AVnADlx51yuDsjaeaGtVD+
ntMOeUruf1s/QflSZx3a0uJO1ek/hPArzjms7Cnxt0yF8q+dd9i74+Al9ylQ
/qwLDrMiflQb7oXyPS86FLV06BQ/gPJ/XHTYylPs3vAPyl9+ySEw803mYfFH
EH7YZQehgO+i83WgfNYrDsXWHAF5tlD+lisOyQHrDFq9oPzkqw6ml7WyDUOg
fKFrDrlrzp3cFQXlH7zm8J/56YLkOCi/4LrDlmuPLDLjH9kDAFb6dbc=
        
        "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{14000., 0.48271132751975443`}, {18000., 
        0.5363675723913527}, {22000., 
        0.5289634711284867}}], {{
         LineBox[{{14000., 0.49935862832424094`}, {14000., 
          0.4660640267152679}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.49935862832424094`}], 
           Offset[{-1.5, 0}, {14000., 0.49935862832424094`}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.4660640267152679}], 
           Offset[{-1.5, 0}, {14000., 0.4660640267152679}]}]}, {
         LineBox[{{18000., 0.5531988263595901}, {18000., 
          0.5195363184231153}}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.5531988263595901}], 
           Offset[{-1.5, 0}, {18000., 0.5531988263595901}]}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.5195363184231153}], 
           Offset[{-1.5, 0}, {18000., 0.5195363184231153}]}]}, {
         LineBox[{{22000., 0.5458915642555319}, {22000., 
          0.5120353780014416}}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.5458915642555319}], 
           Offset[{-1.5, 0}, {22000., 0.5458915642555319}]}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.5120353780014416}], 
           Offset[{-1.5, 0}, {22000., 0.5120353780014416}]}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{14000., 0.4703013662813162}, {18000., 0.5077660465060927}, {
        22000., 0.5051570598245368}}], {{
         LineBox[{{14000., 0.4874116237765659}, {14000., 
          0.4531911087860665}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.4874116237765659}], 
           Offset[{-1.5, 0}, {14000., 0.4874116237765659}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.4531911087860665}], 
           Offset[{-1.5, 0}, {14000., 0.4531911087860665}]}]}, {
         LineBox[{{18000., 0.5248702919628934}, {18000., 
          0.49066180104929197`}}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.5248702919628934}], 
           Offset[{-1.5, 0}, {18000., 0.5248702919628934}]}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.49066180104929197`}], 
           Offset[{-1.5, 0}, {18000., 0.49066180104929197`}]}]}, {
         LineBox[{{22000., 0.5220840331958626}, {22000., 
          0.4882300864532111}}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.5220840331958626}], 
           Offset[{-1.5, 0}, {22000., 0.5220840331958626}]}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.4882300864532111}], 
           Offset[{-1.5, 0}, {22000., 
            0.4882300864532111}]}]}}}, {}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{12874.578438290438`, 0.7}, {13500., 0.6956844306513719}, {
        14200., 0.6908937572797598}, {14900., 0.6861423571481722}, {15600., 
        0.6814300028413551}, {16300., 0.6767564725238352}, {17000., 
        0.6721215498264315}, {17700., 0.6675250237329833}, {18400., 
        0.6629666884673139}, {19100., 0.658446343380452}, {19800., 
        0.653963792838136}, {20500., 0.6495188461086225}, {21200., 
        0.6451113172508243}, {21900., 0.6407410250028027}, {22600., 
        0.6364077926706364}, {23300., 0.6321114480176968}, {24000., 
        0.6278518231543511}}]}}, {}, {}, {{}, {}}}, {{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{14000., 0.6483891248947065}, {18000., 0.634098847028227}, {
        22000., 0.6073152143399193}}], {{
         LineBox[{{14000., 0.6679004945942131}, {14000., 
          0.6288777551951998}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6679004945942131}], 
           Offset[{-1.5, 0}, {14000., 0.6679004945942131}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6288777551951998}], 
           Offset[{-1.5, 0}, {14000., 0.6288777551951998}]}]}, {
         LineBox[{{18000., 0.652581139404554}, {18000., 0.6156165546519001}}],
          LineBox[{
          Offset[{1.5, 0}, {18000., 0.652581139404554}], 
           Offset[{-1.5, 0}, {18000., 0.652581139404554}]}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.6156165546519001}], 
           Offset[{-1.5, 0}, {18000., 0.6156165546519001}]}]}, {
         LineBox[{{22000., 0.625866564741144}, {22000., 0.5887638639386946}}],
          LineBox[{
          Offset[{1.5, 0}, {22000., 0.625866564741144}], 
           Offset[{-1.5, 0}, {22000., 0.625866564741144}]}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.5887638639386946}], 
           Offset[{-1.5, 0}, {22000., 0.5887638639386946}]}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{14000., 0.6478419601682643}, {18000., 0.628653533121138}, {
        22000., 0.5979841600365964}}], {{
         LineBox[{{14000., 0.6681210514925638}, {14000., 
          0.6275628688439648}}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6681210514925638}], 
           Offset[{-1.5, 0}, {14000., 0.6681210514925638}]}], 
         LineBox[{
          Offset[{1.5, 0}, {14000., 0.6275628688439648}], 
           Offset[{-1.5, 0}, {14000., 0.6275628688439648}]}]}, {
         LineBox[{{18000., 0.6476079724697095}, {18000., 
          0.6096990937725666}}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.6476079724697095}], 
           Offset[{-1.5, 0}, {18000., 0.6476079724697095}]}], 
         LineBox[{
          Offset[{1.5, 0}, {18000., 0.6096990937725666}], 
           Offset[{-1.5, 0}, {18000., 0.6096990937725666}]}]}, {
         LineBox[{{22000., 0.6164903572593166}, {22000., 
          0.5794779628138762}}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.6164903572593166}], 
           Offset[{-1.5, 0}, {22000., 0.6164903572593166}]}], 
         LineBox[{
          Offset[{1.5, 0}, {22000., 0.5794779628138762}], 
           Offset[{-1.5, 0}, {22000., 
            0.5794779628138762}]}]}}}, {}}, {}, {}, {{}, {}}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{10070., 0.4015},
   DisplayFunction->Identity,
   Epilog->{
     Directive[
      Dashing[{Small, Small}]], 
     LineBox[{{10000, 0.5}, {24000, 0.5}}]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"Fidelity\"", TraditionalForm], None}, {
      FormBox["\"Maximum entangling attempts\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{10000, 24000}, {0.4, 0.7}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7088392679033995`*^9, 3.7088393139019995`*^9}, 
   3.708839711824787*^9, {3.7088397582294273`*^9, 3.708839774248029*^9}, 
   3.7088399864502473`*^9, 3.70884002818242*^9, 3.7088407446937838`*^9, 
   3.708841230120616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pltFidelity", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"CreatePlotLists", "[", 
       RowBox[{"GetFidelities", ",", "xmin", ",", "xmax", ",", "100", ",", 
        RowBox[{
         RowBox[{"PhaseErrorRawState", "[", 
          RowBox[{"#", ",", "setupParams"}], "]"}], "&"}]}], "]"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "col1"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Superposition fraction\>\"", ",", "\"\<Fidelity\>\""}], 
        "}"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Automatic", ",", "col1", ",", "Automatic", ",", "Automatic"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"{", 
          RowBox[{"0.2", ",", "0.9"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", "Bold"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", "50"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pltRate", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"CreatePlotLists", "[", 
        RowBox[{
        "GetSuccessRate", ",", "xmin", ",", "xmax", ",", "100", ",", 
         "setupParams"}], "]"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None", ",", "None", ",", "True"}], "}"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"None", ",", "col3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\>\"", ",", 
           "\"\<Success probability (\!\(\*SuperscriptBox[\(10\), \
\(-4\)]\))\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", " ", "Bold"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Dashed", ",", "col3"}], "]"}]}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", "50"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"None", ",", "tickFunction"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", "pltFidelity", "}"}], "]"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "pltRate", "}"}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7087770659891443`*^9, 3.708777076325178*^9}}],

Cell[BoxData[
 TagBox[
  OverlayBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw1kwlQE2cYhpWioxZUlEuqWBUPKoxHLVSs80IcSoGKB4eMQUUqVTsq6Kit
iFiLR9QoMBwpCGqqqFgOuSJQpMgRA1EIR1AR8cgmm90di5bhErHd7Pz8Mzs7
O7v7/d/3Ps8/JyJqY6TZmDFjIvnLdN//eDBwbd5GZKSbVgN+YRYsm5C7B/a6
6SM/3NCR51gcsbkxa+A8DYclz53GnzgFp17qiwxnhryX4nZ+6nbjJyy4DWWO
p7gkuGV4NnufYsn3qXDekvB9UQcLXwuzxWds03Fw3DftwZ9y5P9MRE/vVoa4
cgjSZV+q+/wqvERzt6eJOFJPDuUZp9dlARx+q26UeyuuYUimOu4YxJH62egM
7PtnB/9clNVzU+l/E5WXZBEF6zmyXw7GuS2r0/hyeBljne/z6jaab6alRXqO
7p+LPq+Z0dQKDlNDV5aoDudDWrik+dbC0X7uID3hsz3v7TlcETYsxFuLWL9p
E0f7K4Tlfw7rHAdZuJ/1CtdrihB/pkq7xsCSfoth5idNk7exaBoI5CuWYKbs
7JQN1aP5lGK35aXUnbksfhSWAvHL184fkLFknruwdBCbT4lnMdJu6rgMiwuH
ULl3NM9yxIZenDoplEXqmvN76OFy1E2c7WwmYsm8FfB4P3cgdzELF6HgX3D4
zqXDyoYl81fCTTbBw/0jA37WA7uS7qE8IaRlLs2QPKpgNmz3x9NmBuKEmr5F
YX+joj9qTngZQ/KpRpd7jE/FVQZDcT9VHkyuxiR13xVOwpC87sN93KbQgWgG
3opefoT7WBml8H8ZypD87mPdl8MWOZ4Mkt7E4qutNXgjvtATuIghedZA3PFo
sm4KA8GmNbWwUp0OCh0wknxrocw/FlfabcSiMFODdYg64jvvQ72R5F2HJbRE
4ZpnxMFke/OQyfV4VpIo9U8xkvzrkeKZ/TzkqBFCud56ZM/SqNZHGAkPJdSH
t4V4+BohxP1Uicw+hxjrpUbC5wHGzvra5qWtEZuEuB4gRWI7mDVCE14quHmr
dQEUjWvRqyc9vqZC994T53sbacKvAXmbSlOlhTRM1dzPNqDnWUCWw+804dkA
j4LLyy/H0Vj1Yt0F2b5GiF1FXXaRNOHbiJqLb+0k/jRO2z7lR1ZDNGOFuGcZ
TXirMe+clXWAPY3WtRE80odYX3Al5/pHA+H/EFJDYmwvZQAPgyfyCIz5HdpD
bSA+PMKBoQ2eRwsNMNG1N2/CtpB7HSUyA/GjCZxK0k8fM6DUhJdpgmT3O4P1
DgPxpRlMsTO3ys+Asab4mppxrlsu2rLUQPzR8OfTz/mIrQGmbmZu1iDZUvM4
4YOe+KRB3ANtvPy1Hg+FpcGvuxeE56v0xK8WdM3XZyry9eCb5Q1qAdzKd1ak
6IlvLfgzrJ8rj9HDRN+1qAVvgms2lobriX8tyDvhXpv7rR5VQsFWzB85GXHV
RU98bEX6LougxGl67BAAtKJBcqw8dpAifrYi7t+eoshuCjxcnnAb7hrfb/Wv
o4ivbQhLVne63qZwR2iwDcUFK0WWiRTxtw1jOzsLmEMUgvnusnraYCO1Xl0r
pojP7TjOuphleFEYznnHI2xH9c+bbfctpIjf7VDUtCbAkoJcGLgddk5P4if3
6ojvWogyleOfPdHB55VJGC0OvZ7tkl2lI/5r8bE4bfze6zoI41Zo4bh/xq3l
53TkPGhRat01pz9KB6Gcawcqk7afvBusI+ejAx/kJ18cXqXD/1CiMAY=
        
        "]]}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0.20350000000000001`},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, True}},
    FrameLabel->{{
       FormBox["\"Fidelity\"", TraditionalForm], None}, {
       FormBox["\"Superposition fraction\"", TraditionalForm], None}},
    FrameStyle->{Automatic, 
      RGBColor[0.368417, 0.506779, 0.709798], Automatic, Automatic},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->50,
    ImageSize->Medium,
    LabelStyle->Bold,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.35}, {0.2, 0.9}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], Dashing[{Small, Small}],
        LineBox[CompressedData["
1:eJw1lAtUTHkcx2emFHlsWL0krWWFsFhC8r2EaYW2VUixOGRR2bC2rG1bK5ke
ZyNtRZhe8qgpVHqXMqlmzLPUoNRW20sqPVRT2Tsz//2fc88999x7f//v43Pv
F4dOfn+ExWAwjtCH6vz/cuTq8E+HX4ZP21fLxid7YBqbfdXTJo5cn8dnJwdd
Rpx5MFlaO1fnjwCMC1uYsMkqg9wPASOFtyTINhcdjllmAR1XYMPe5N6SVESe
j4C1yZv1E3gl+HYSa1GgQTR+EZvFLkwvJe/HoN99Uqh9TjmcGhNvPDPnglef
wPIoEpJ5sUha18oMKRXjQlFF7ObMeHjbnOA7u0vJ/ETwXjzZcaRNhkc3u5JK
7ZMwUayIOeNRSfa7h8AN0tQ/u6pQf+5zHrvhPszn3Qq8eqqa7J+MOl9qbmx/
DfT3rEkvO8tDDrICUn1eET1pyDg7Ljlf+Rq31Rs+hNTMIlLgV0v0PYTeanO2
gvkWVpwNB5olj7CiYWDf6Y31RO9jdO8vGx7SaoDo4056YjpsIrTP+fMbiP4M
mFx88Fon8B+4q1cmAhflzw61ayR+nuBi8Jot0/WaMFqpUpwF/QRzh2hBE/GX
DcufT62dHdqMCNtgjxZlNmrGloxP3PEv8ZuDaRt2ZS3Ub4GlemAu6qxbt6ZJ
W4j/PFh3NRWuDG8F7fXUj1fyMc91m2GuUxvJowDc380cKYN2uP5V3G/hVogU
N1dPfnU7yacIdh9YHlujOzDkdzzvTHgRvKkZ28V735G8nmIJ+6q+k2knNmf2
0haewlfnXGZNbSfJ7yl2+gnX77v9Hlc6z2Pl/mLk8Tj3Gg50kTyLUSvYo1w+
tRtqmmxLEGc6Z3q/dzfJtwS8cnPTJ7JuWLipBD6DltzJwHdFD8n7GbirC5jW
13pwJtxIe9cUPgKG3epG+npI/nw8NFqWXOD8AepxvXzMD197wj/zA+mjFE3H
fGduNOyFOm5FKdpiOvO0fHpJP8+xwjLSgV/Ti93quJ6jzPCs/NKaPtJXGRJ+
CLKzu96H+J9s9Krjy1CuVcmboOwj/ZVjlfZOHYFrP1TTrDjl6Dig6xCS10/6
LEezcc/l7bMGYP3WITTSqwILluqnT/EbIP1W4DH3sERcN4BLBgrasgCXvd7X
huEj6VuA+KiUN47cj5BtP0RXKoTu7DjhNOYg6V+IdKYwRX5wEHQZdCMvcJda
5H+teJDw8AKNrwttnb8cgqpdI20Rjso5gzMuDhE+RFg2n3PrZdMQMlT1tomw
pTp/ZeTmYcKLGLca5xfsvjMMpio+kRjUtudWRrpKwo8EllNj4mqOKqFSY7pX
goPL74xFlSkJTxLUpzbbuywYgVC9JIjh7A0yDhohfElxv1A7R9E+AlosTZAU
o45Nr6LtRwlvUkRRQ+9ckkehan/xIynOB9t2G08eI/xJEbe8pEnhOYYC9UAZ
DFf5VESLxgiPMkgiDsW6LP2Ew+oCZJA7XjhmHPaJ8CnDrOPVcxTdn0CXSzcs
x56uNHehBYPS8CpHaXXYN5YuDCpNLVCO3V4TlcEcBqXhV47Jj81zOrIZlDOt
7maXHI2JEm/7dgal4bkSb7fMnPPAhEkp7/XQFVZC62+GQM+eSWn4pv9z4f4e
x39lUrFqw5VIXX9Dp+IBk9LwXoV1Ud9FL3jDpNgNKmCq8O42dy5nEovS8F+F
Eufgu63rWJTabk4VcrP159l5sijN91CFGsHX15Nusij1uMUvYRTSoasrYlGa
7+MlfhumvNzHWNR/vDoUPA==
        "]]}}, {}, {}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{None, True}, {None, None}},
    FrameLabel->{{
       FormBox["\"\"", TraditionalForm], 
       FormBox[
       "\"Success probability (\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-4\\)]\\))\"", TraditionalForm]}, {
       FormBox["\"\"", TraditionalForm], 
       FormBox["\"\"", TraditionalForm]}},
    FrameStyle->{{None, 
       RGBColor[0.560181, 0.691569, 0.194885]}, {None, None}},
    FrameTicks->FrontEndValueCache[{{None, Charting`ScaledFrameTicks[
         $CellContext`tickFunction[
          SlotSequence[1]], {Identity, Identity}]& }, {None, None}}, {{
       None, {{-0.5, 
          FormBox[
           RowBox[{"-", "0.5`"}], TraditionalForm], {0.01, 0.}}, {0., 
          FormBox["0.`", TraditionalForm], {0.01, 0.}}, {0.5, 
          FormBox["0.5`", TraditionalForm], {0.01, 0.}}, {1., 
          FormBox["1.`", TraditionalForm], {0.01, 0.}}, {1.5, 
          FormBox["1.5`", TraditionalForm], {0.01, 0.}}, {2., 
          FormBox["2.`", TraditionalForm], {0.01, 0.}}, {2.5, 
          FormBox["2.5`", TraditionalForm], {0.01, 0.}}, {3., 
          FormBox["3.`", TraditionalForm], {0.01, 0.}}, {-0.4, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-0.3, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-0.2, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {-0.1, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.1, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.2, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.3, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.4, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.6, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.7, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.8, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {0.9, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.1, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.2, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.3, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.4, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.6, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.7, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.8, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {1.9, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.1, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.2, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.3, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.4, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.6, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.7, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.8, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}, {2.9, 
          FormBox["\"\"", TraditionalForm], {0.005, 0.}}}}, {None, None}}],
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->50,
    ImageSize->Medium,
    LabelStyle->Bold,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.35}, {0, 2.374218808515535}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7087770810166473`*^9, 3.708777470624604*^9, {3.7087780176513014`*^9, 
   3.7087780344189777`*^9}, 3.7087780968722224`*^9, 3.7087789356770945`*^9, 
   3.7088397727228765`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Explore", " ", "the", " ", "parameterspace"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"popvsMaxAttempts", "[", 
      RowBox[{
      "popmin_", ",", "popmax_", ",", "popsteps_", ",", "MaxAttempts_", ",", 
       "MaxAttemptssteps_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"dat", " ", "=", 
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{"EntangleOnDemand", "[", 
            RowBox[{
             RowBox[{"PopulationToTheta", "[", "pop", "]"}], ",", "attempts", 
             ",", "setupParams"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"attempts", ",", "1", ",", "MaxAttempts", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"MaxAttempts", "-", "1"}], ")"}], "/", 
              "MaxAttemptssteps"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pop", ",", "popmin", ",", "popmax", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"popmax", "-", "popmin"}], ")"}], "/", "popsteps"}]}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ListPlot3D", "[", " ", 
         RowBox[{"dat", ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Sup. fraction\>\"", ",", "\"\<Maximum LDE attempts\>\"", 
             ",", "\"\<Fidelity\>\""}], "}"}]}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", "\"\<SouthwestColors\>\""}], 
          ",", 
          RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<ZMesh\>\""}], ",", 
          RowBox[{"DataRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"popmin", ",", "popmax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "MaxAttempts"}], "}"}]}], "}"}]}]}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"popvsMaxAttempts", "[", 
    RowBox[{"0.05", ",", "0.3", ",", "12", ",", "40000", ",", "20"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708778999519478*^9, 3.708779048311884*^9}, {
  3.7088317942518225`*^9, 3.7088319484482408`*^9}, {3.708832027829178*^9, 
  3.7088320623736324`*^9}, {3.7088321122906237`*^9, 3.7088321172711215`*^9}, {
  3.7088321627766714`*^9, 3.708832420159407*^9}, {3.708832678653254*^9, 
  3.708832742879676*^9}, {3.7088328895423408`*^9, 3.7088330168540487`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{Graphics3DBox[
     GraphicsComplex3DBox[CompressedData["
1:eJxVnAk4VVsbxw3NKdJoSINSpIkyVfaSJKUSJRRNSBlSZCh1M4QkGcpcRJF5
nud5nimzc47SSCJTSXev46y9zznP99z7PL+7nnet/d/vGvb6v74Nl2+oG3Cw
sbG5cbKx4f9jCwyAvyiMjf4bxuZxStX+/Vspv5H+Syb4Yj+ueme1Jnlr+i+D
4HFjwRH+n9rka+m/XIJLCpbe2HOoU34Z/VdEcLPHtqI6hr3yuTnwV0Lw4686
v8zZQpW/agh/5QR/8VI649VfmjwvPU4VwQMeNNhxZnyQz6PHqSH40NmXcmIa
A/JG9Dj1BDf8EzK8svmT/CNX+GskeLxi48tyyS/yvT3w10TwW/LblPbbfJWX
pP9aCH4oJbbfKuSbPNKtDj62YgiYN/VPXjcnAUO6Ib7X+O+tP/FpGNIN8ZG/
Jy5d587BkG6ID657tcOFvRBDuiGe29Zx7tvhYgzphvjFY2tEKrVLMaQb4nwn
Jk6N7ivHkG6Ir9+e6iLxowJDuiGefcCqa9/tKgzphviUnMSp9IZqDOmGeHr3
ifNybLUY0g3xBZvEz6kvqMOQbkS/a+KX3v1Sh7HoppAA8sW7VdjZ8ll1w3nj
pJqrnlwpq244x3i/jkl9rWTVDec5n3/szl5Tx6obzpdu6gkBVxtZdcP5py28
yTULm1l1w7lMcLZrkXULq244F7T6tzEytZVVN5wPui2UrChpY9UN545LU2r3
vn3HqhvOtecUdrTov2fVDedsnrvOqk+/Z9UN5+nzFl7Ye7Od0A3+u8M8A+gd
/q6UplJG6IY45a2UlplmLaEb4oN/o6nF+5oI3RCPmvQ/501tIXRD/L9vFd6p
Iu8I3RDX4gp9c3RFO6Eb4jclb995kdxB6Ib4g99HzXcv7CJ0Q9xiev/RdqFu
QjfEi7k/3Sua6iZ0QzzxaPDCRyE9hG6I9yVOjh5a2UvohniQy2Ufrwu9rPkG
CoCerdF9kb5q1nzDeeXZ6H9GUU2s+YZzhwNF3gaybaz5hvO/+gM7f0m2s+Yb
zoXE7WuXx3Sy5hvON91RHgqJ72bNN5w7Xxnn9FLtZc03nHcuWo3t9epjzTec
3+PSMkxSpLDmG84LhMLWqAdTWPMN5zzl49kJ7yis+YZz2c7dF+3GKaz5hnNR
Hs4bkzMUjHlfuOhaAkzC/n3Ob2rAmPcFyNWAxg7uqFaMeV+A/OmTyDSaWzuh
G+IZzZMP38R3EbohrqD8SOrvzl6MeV+APGrj6jSV5RSMeV+APHWBfpNGCwVj
3hcgf2Hsv7P8IhVj3hcgt1m0WmZhCRVj3hcg995Jc7zFRsOY9wXIgevQGRMh
Gsa8L0B+mzfRwm8DDWPeFyDPKfy39fMSGss81TavADtK0+Qj1jSzzFPI33F/
O2Au+55lnkKeU3XmN5dKF8s8hbw5o/NC7u1elnkKuUfNad0/tygs8xRy93SJ
z93nqSzzFHKfqIdKDXNpLPMUcrlPyhIUGxrLPIV8wffV67ACGss8hTw6euPD
JxQayzyFXGP3ycYN/TSWeQq5m6M7H1ZLY5mnkPsqvX2iGErqtgf/rxpaNSAp
9Z7O8nmthG6IT8Rv/bjIqIPQDfGRDbtH9j3qIXRDfHGb7q1UDQqhG+IKuRpr
sTtUQjfE58XJaF1XpRG6IV6tJ1rk0EnqhviK+xp1ybv7Cd0Q35zZohx8vp/Q
DXEfhb+erVf6Cd0QT1lsvE3lRD+hG+LHV55a7bWhn9AN8d1ap8N20Ejd6vGn
VgUN4ClfjNfbjDZCN8R1bqUL1YAuQjfEi/Ydn6jU7SN0Q1wk5QKX1Q4qoRvi
P1KkvncdoBG6Ib5IzIwXGyN1Q5w/syXH/2o/oRvim07q2tSHk7oh3ptg+MYr
jdQN8ZZn3Xu5I0jdEG8PNx6ytSN1Q9zrhe0Ka3lSN8QNjHi7LYZZ8034WROQ
dj5hclzyPUu+QX50/qkFsvXdLPkG+bP26wcPGFNY8g3yjo29K1PaqCz5Bnl4
1Fr2gWoaS75BPk9s9ViYYT9LvkGe/EFUSTi/nyXfIO+UkxkMoLLmG+RpIb5n
rvSw5hvk71+zuw1ms+Yb5FsjklOu2bPmG+Rciz3TNKRY8w1yvTHL0o4eUjd2
fN1b79oCtJ79MdG9307ohrjjbtsjYXy9hG6IhxboHTBnoxK6Ib5Fkt1eQZ1G
6Ib4kYa49Rzi/YRuiOe8MW+JjyV1Q7xW4I278jdSN8Qrljs965kkdUP80X//
XPhppG6It0WJUS4nkrohPvbIvSzuOqkb4nO3rz63eRWpG+Ivda+WvEhnnaeC
dm3gS7Hwn9QXHSzzFPKgyL0h8tv6WOYp5CXujumnLKks8xRyP11phYcxNJZ5
CvkD77v3Oq71s8xTyLWpc3+PNfazzFPI/RW/uW2aYp2nkCfFW+d+G2Wdp5Av
UR89MVzHOk8hH044/FfNk3WeQh4w5+qrVwqs8xTy4pryh6EDNJZ5Cvlv7ial
LAdStyD8n3zm74HxZ36BvOedhG6IJzra8W2dSyF0Q3xD0oTRhxpSN8T3S2W8
if1E6oa4xJszc20ek7oh/uyzrD5XF6kb4vIOz986/SB1Q9w54ZDz/U5SN8R/
vZpepPmW1A3xmT+3x9Ivkboh/gmTsUnnInVDHPsuPeMfR+qG+Aq+gNHzyqRu
sJ9V+h1gza8LPFbXuwjdEG++1cQVqkfqhri365pGq8U0QjfEFSxL3tEW9xO6
Id53nGtjgC+pG+LpWwXYfzLlG+IvKd+fG7aSuiE+94vfbr1kUjfEnd3Ht6Rb
kboh3rX+5VcXUVI3xD//fvBcp5E8hyD+XRgT/mVG6ob42D4u8c/zSd324v91
uVYXeGW/bI79um5CN8Q3/MMqul6TuiFeFPNDJ1eK1A3xn6seL78jSOqGeHHb
M8mBp6RuiKtFnuq6lEHqhvitE0IZhrGkboj7Ds7k9vxH6ob4o7TOELYDpG6I
d3se1lT8Rp7fED9xzJ4t4CmpG+KSNk4Ox7aTuiH+5Eeul1s5ldAN3i3xqPaA
88rzKrZmkrohbtpoLniuk9QN8ZAn71f3q5G6IU6l3l3EvZbUDfGWmzUmondJ
3RCPfHSwUMib1A1x7TX+ejx3Sd0QfxrpclLmMKkb4t5PzpgtmyHPvYg77Tux
5FIUqRviC70lQlxUSd0QV/pKndT+SiV0Qzz86iGHOCdStwb8qblAH1g0UlN6
TbqH0A1xhee+g+rsVEI3xL+JXTobcZ7UDXF2L27TCB5SN8RFjjXstz5H6oa4
UzIXl5A+qRviqwUxA0FFUjfEQ+q9sPfzSd0Q/10rrPwnh9QN8YRNqX0vDEjd
ED9wO0DKZwGpG+LdQvNHD0WSuiHefPLqLxlFKst+OieQAvxqG+SmQnpY9lPI
86ImutIEqCz7KeS+If4peky6EXFkohLLplj3U8jvN9jPV5Nk3U8hf9IrcC99
J+t+Cvmu59eMXs1j3U/pcRqf+DiX01j2U8jvbP63XN6GxrKfQn54ycjY7g00
lv0U8jMqM70ppVSW/RTyI7lmQXX6VJb9FHI+39GbhRxUlnMv5zMqsCzYXHbs
Vw/LuRfyB3eSJvdto7KceyE/vVS/g1udxnLuhTx7zLLcpZPGcu6F3PdLUFDO
nH6Wcy/kL6y+nS0cZ/3OgnyGpjslU8H6nQX58w1JF4MdaSznXsg9z3qmDknS
WM69kJ9ZVKM/0U1lOfdCvnG/oKyXPZXl3Av5d43NlJvCVJZzL+SiPMdsQkso
LN/17B404HewQC1Iqpflux5ybeEvT6/tprJ810OuL+uob4nRWL7rIY9RErKI
T6WxfNdDviXjhueFJhrLdz3kfQ8iohKyaSzf9ZB7+3IcEXRm/a6H3GRr2KlV
gPW7HvIf7LdmWn5QWb7rIT8wb7fHwwAqy3c95JJ8aqZBGJXlux7yh3P/hjj0
U1i+6yF/bLUrapkz6z0Sm2s/uPbMyP67US/LPRLk63qWiT3fSWW5R4K87fCF
5QtEaCz3SJD3hz1sSXxEY7lHgpxnccc9r0Aayz0S5IZufauj7Ggs90iQT/jw
HJA7RGO5R4L8ffRITcI06z0S5GrvJAbuxrLeI0HOuWSz56GzVJZ7JMhFBYdN
Bf9RWO6RIJ9c6fxU4g2F5R4Jco2Nmqf3HqUwr2Oa6Y3uYL9xkrbeVDg5T91+
Ry6sCwYvayYH1KdSZrl3InHfXh4z/2fU7xRCf3ywc18n+AD2P9ElnngcJp3T
9de4gBvLIhXPMHMB631lK/zAUgVN2VN4fCb9PU67OIKuT1KZmXh7xP9l7zJT
d/QBe4XO3jnO1P7tytHdKxRfAI3F71rbx/LoXNUvmxjneERDx5zxPOI94tQ5
j98eUFTnaF/F4yNuOHGEd85qL5CrWqkI8PjEeWDqk35MaAAoX64m1YDHZ7p3
LaRk3wcOjrevBOFxEJd8VVqlleIBaCXbNS/icRAfP9ri4j3HD4hmx0VSmOK4
B64adkx4CQZqnVukp0pm+1Ug/ZcDvEW2+r9LiLzC/8HRtcEODO28fj0P7xdx
f431V/fzuwM22fOV1/F+EXeOCjLJXPYchIo7L/yA94v4WUGh3WdXBQOatxB1
N94v03lPeb3wHWCaeob/FR6fmO/S/CBIwA0Uu5V6auPxES81N/agePsAvctH
lk3g8RGXsl3/p2V1IJjWfr5FAo/PtD60ZfrYgMnTzX+r8fiIB2xZ/kPM3RWE
sd86exuPj3gjT0bZ5qveIPvRg+o+PD7iagbmDsDVH4D5R19uZ4qvN8d1rUXU
SyDYMLfq/kTl7Hio1YSe11aE9apOVjKvSz1amtZAYqPxgiv4eIjv9Fv9O9ae
dAFBM9c/quLjQVwgcxnHU1svsFV3gHccHw/ifTqg1OaYH+DsKdm5f6qE4L03
vQMM174AO5zntz3Ax8M0f+1MtK2Ab+3B8dd4v4jXisV3fT/lDAItJ3RP4P0i
nioyke2W4wncY28n5+H9It7OazSlcMIXHHx8v3kv3i/iWuyVqR8pQcCudJva
Xbxfpvv5yuMetwHFdnzsHN4vsW50LrdZ7fIQ+N3Y5K2I94v4trHjx/yFPYHr
lUstM3i/iJ+/f6/FwfE5WLTqhekBvF/Eh6yDOm71B4K2oajH8HnR+oPnXbPE
d0vgPbemdx3eL+KGWw2lsI9O4NEdlQrYL+JuGybdtp9+ChoPTTkX4/0innnO
/U4S9RlojVF6exDvF/HyuWYn1vIFgjmJPDus8X7ROmZoOGBn/TACnM58YdyJ
x0E8NdBgpXpbPFh1ZWWq5BRjvlGSCF/szr2dbhq/S4j1TUIy5YyR+Gvgvp39
9NEpct37fHzrVl+pBLDTvOh+Nx6fPM+kcGqHvAKX7EsFWpk4/2k/43jbtyBZ
REkH9kvu13xzpPReg5qy9L1yTHzgzLDCZ41ocMFvc5kdei430q+ME9lf1IHn
M7m+qar0Wr4C6eo+nqJoPcG56ojpnuctEcC+fqXaowmy/X/9bZrrJGIBW6v6
9YKxutlxLs4n4t//cPXq1fE6Yr3CdeBgl3kNrlfKZt7D4yCe7Ga6YcmOKPB7
79jHkjGyvfvx1Zf4N8WDYj8saO6dplneUkzE9xemmXncbWI6b/Ct0t0VBo4o
8Xk64fERd6jem4l1R4BSkVM/mvD4iH/cGmC8yjUGNEu9ObwQj4/WH1wHRVGP
UHAhQOqnNVoHcK6atzZ2aM4bEFp52DMTj4P4WslpxZK7UcDMMnjlXKY4xQ/l
F/qPxIFBeZvp7VMts/3eryDG79vBlpaDc7T+4PoYGDiHg3e+udeq8fiIJwtv
TXn8PhLoNEjv5cDjI26nfGW6ZGss2FE2GiQ61cK0LvHFBB0NA6ffs8U04HEQ
T1V4cH6xQwRQD7y5dvGdJoIPpx6wMsmKBmar7hVtZooz+P1K3cBwPDg6qXP2
pM272efqqCPGf2icNvDV5h3T/cZAII/iK+DZ/OJEM94vsf4s5nsocf0N0JRe
IMCN94v44cwtG5W8osD035qubXi/iBu/lsg0yIwD593mcp7C45PnkwdlRQah
QHLLhhaoP+IpfLKNF51eAzkL+RVQf8Tdpp8ZjYS9Bb4jb/3hcyEuz9ng614U
C1b94z91DI/P9D3ybfhsCHAXFrNPGyPrBPg9/T1KK8NBYeJ45CI8PuI887/n
mH+MBOvl5HdsweMj/vnL5glxjligZ1VucRyPj9YNA8OIILfdqaD0yBsVOB8P
wZ94AuELa4bLTQTi8xGtD7W17u9q69PA+UOiovvw+Uh+J6o+sj6bAD4M7fp6
G4+D+NLIinugKAXohaTm1+Ljp3frnkLEZ/PLM7XE5yNaH64aisRVH0wEQnoa
MXD+Ih5JPbt5/bcU/LtmQBDOC3qccdKv/9EkR32Nc7QOSEpaSBisSgKO0dKZ
XExcZ5Pe1UV3U8Fh7FWUCK4PfZjz84g4a/5OtLj9biHm+79/BYJuG5JBmMcz
wx1TJI/Y1uTPcz4NaG40NDxhw/D9Hcl6AE7ZkYpg23dM/rW7yVbFRBCyp5dD
BM07nI/mRi2J1E8BLxIja1VtyPYmH+2ObnROB3vi5tHMJ9pn40uWEfGptzoO
3Z9sJ+a1gaHI5qP1SWCVshNNFc0LnIusX2Cyoj8VqIv7LrbA45D3qx3RVfcT
wSJ7izSYb4jrGCxaZ+KZArSOLXnF3P7fWbEvC8Pw8RyTLvKz6pqdj0LVxHgO
31Y+lIs4Pk+vGkZsHbqbDFpTVC5Y4XEQL3Djit3qnQa+26iw++PtiXNCLVdQ
d0AS2PF0hYsN3h7xLZUOzw1yUsGM5vqFsD0574BLOC0RcBi+L7+Bt0c8Qr5c
0W1lKmgdvWL8nKm9Avu2MZMjGeBlx7zPGWM9s/EdyLoI14nibaU4J+85I1Lz
TyWCci55HjgexM8PFLh5BKWAEc6pC954fMSDbd9+MPuYDoaDLWSzxnqY6iXc
E7UUssCmMaWoapT/OF8Sr2vZ+i4fxASfS5h/Z3YcAfZxRF2B1O9ed4eJOswG
T8+Yz0kEP3hDt5tyt4mYj7jO/I98c0Gtw0sDB6Z5FxjQUVTyNQMIObn/gfMF
8Scb+EWG63LBoYarknD9pw8nMI2Ivzv3dJkHnv9o3rGzFV65G5QBtjpafoPr
CeLA4sfGbqFccNB8ggeuh3ScmkXE8T2bfxvmP/mdru3w928GOFshyq1mQ3KL
vBH7Kydzwb9K2YuWE4z6B8t8Ik7r7QX2Iyj/4feI5OhNvZFM4K2zI9SMiUeI
b163a2ceUCp+cdoXfy90vq6YiLNE9WPXXesuJj9Cm03CPBu8UFKfhu8RcexU
8hrduHyw6tpRzWz8Pc7uL2VEnL3bbfl7x3uY9mV3S9vtmcD5n5xlAB4Hca5U
x52Gd3PBuxle0zw8Dvm9oM17JiUbHBA58zebiT/h+rr/7zr8/Z4VdrkhR5nl
j8k6lplo3dqF+8g6FlyHn/dAFkj6sCQQ5hvi7Y3aJz3b8wBfQuouGIe8z7GY
Gl2VCdRPvMByUP7j/JbuEorfAP4e6/l2w/ZovuB5RRU+lAvmYJYPzeQoTOde
kcUywzlgEyU2wlyO+bvb5OSB8GKwbgdXyVY8T34M4T+hOKLe47KA5t6TeB7C
fA7RTSL4pZ7WH5y/W5juJ2N3BvEUgy/pUSZV6PyG562EpIZ13eoi0KiyaA1c
b+k4JJWIc5H/n/EUykM8P/F3afjhbiFwHoixuj1B1tVQ8nRVb6iUgLjR2mS4
PtCHL5FJxOGM3qhVPjnrz143I+twLMXrRFZak3U4hoaHp1UdCsGAhPo5+N4R
Dz1zdnWacglQmf6hAd/v7PmwkIhTqRp7Rm+8h+l+ryWskqcITFl+0YZ5Qt63
UBo4NxWDTdYeX03lGHU7KqVEnKNLR2sX76Mw3V/ZblbOKATnhuLziPyh38Os
T+yrKgZ9zTuK2e9QZ9sXkfU/3jxV1gJ3yPsZQ0NnWs/SYjC5oKyZ7Q7zvdbU
iyTvIpB7O2bwny3zvdbUXz6tIqC+ljscxkd5Ultr4mtrWATOnTmSC9uTeRKr
uO5oOWh2oc7A94jWPVTfEu76TdoIzx+YJyk6SQSP2/ZIP972HdP9GOXm9Oly
4F47oD+PaX2rrY1d9HdjKdjEm9kK9y96tyapRJwLeirh4Uz5YGTonKmVWw6E
FFp/wHlBx6VkfZF00/MvK6xn64smx3MI7qqc6X0bf4/EvQpb6PSFunJwZ8Jv
A5wv9Pf7vJBo/7qLstpfjsJ0z3bRQPRfCThx2nIjnEfEvUfAlLjk2zLgJvJj
FTuqt5EsJeIoHQt0eIreI339MZlzi1YC2LTO/4Dvi1xnbOe1a1eAsZ8Pf3ll
Me7rHpJ1ShGKGx4GZzHfA/voGReXgwff45K9s5jrlLK+rXlRDrJLggx8spj9
GsqzIY4K4Hv7ZglsT29u1kzEV1Yung7EOXrvjbUmbeUe1cDc8to+uM7Tz5mW
8UR9jq/jGvuttrPn0snkJILfPZTm1TFB1nPukVwuslW+BgB/90pRdH6j38ut
97xQUAG2czmbw3lNxzWpRJyzEdfWBVl3MflloS+1ZqrBHv0e9RtoHcPXAdTe
g1dn9Xn8/dKXGWuyPkpt6UhOvRyFaV/L+q5/tgbYT++4zIbeFw9ZN+WkO3OM
n6luysjwsA771woAQve8he+X9EG+v7XOqwaxea9PeaP3VVVGxGn+OLW+JIv5
nn/5a/36SlA5R4uuP3lucRZUHa4EQpI3uyCn67YkhqjnUZ4bJpKBzzso/5ee
BIIrJt1/juHrHvm938Ldh9WCxHl3DbLReeY6WR81aRBmr24zq/O1N2kElzIx
nK89jtpnEXyzNIfINNL5aD5Zv4Tpsyky6YPnlV9vbx3Q/1AkBvONLk9vMdG+
cMeiwSqmvDIynKf8tqIB/NY1/w33ffq+Mx5L1OGYqZUe+IbnD1xPdLsSCa7b
xvauFm9PnqPSR7peNILyXP+9x9H+QvcN7QS8eZtAcSqbrhkaf3QKEYdbyKvN
j5En/6bSCb5mUEikYR+FyS87r/bPvhG8c3swCvNk9pyTQ9Y7+a42vHiHrIO6
avjuT7pmE9hwYqmpN0OHAUoh0X7XfX2+ACYd9kiW7Bk91QKM/Ngc4Hlgdl2N
JupqLB68cj4xOTuPykACwZcOGBZz4vMCP2dcf8xO1iPFK0bvuzgx+1zW59II
Xvg3zrNNjuFHX80iuH/J8EHRu4znOl1A8IMhVSaBWcz1KrlFNy+3gN547nRv
xnryYitZ/yN4KWb+M5S3onFEfUt17g2LOzb0cda6TiUS3ClgKOzGeA9TnVWj
RL1OK6jfE6N+E63/v1OI9vnKO6YF9jHeozdZL/SeWzbT4A5jn5LII/hD00T7
N2jdu91M8I16xx4LZ9Nm17HTMUQ9ifl129GNNrPnCme+RIJbWfoEVY/1EHkl
JRm+72lwGzgIwnxRPggWk/U5ruE8+uazOl9a5JBOcLvNNlEid6hM65j5zc/D
bWDgxPcH3igfRnKI9l8fTfvIZtOYfM/gU2vnvwcHUsYeE+t8Ilknc27C+LNc
NplXwQFVBq0B7UBM50sDzH/686aSdTKWAtYLy/D8gTg4I57gX/rDf8pPwnUg
rOF1RxLBa/+lx90i5lEawbM412Ke6LlW5RDcsG/dzlCkfxtZryLB8/KCSjYj
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
ggVFNLA3YmQG8v8BzYt4Qw==
      "], {{{
         RGBColor[0.880722, 0.611041, 0.142051], 
         EdgeForm[None], 
         Specularity[
          GrayLevel[1], 3], 
         StyleBox[
          GraphicsGroup3DBox[{
            Polygon3DBox[CompressedData["
1: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
qjhndeNTbkBuRPbn3vsYVzX+g28CLwPuB54Abl/HOd+Vz9V2xubvCfmMm/Ls
70DuRPpy7+2MK3Jvnyby4wrgvcC3gperYy3X5zom531jc61ymFuQT0pwhuVy
XdZ7l+U9o3PfZ9ext9eVsLtpaZv9ued+xtXkJ+AXq+BOizTB/58o4SvPpY0P
QP8C47rmPvC94JXqWNc1yLVI7yby+FJ1rH1UrqNHEzy7NfrdwFeCFzNvgq8C
L1HHfhlPx+SeXZLfMzaffV3u75jcly9LcJUVjK912NINJfzjlfSNP0pwITnR
98k/5V8T8+z12ZUydx9cB5+SV8npfi3BkeRKy2c+6p/rnJLnLO+1VrVmdW1T
85pc19rWGvfg3Nv16uDC8jXfM6tEPWtda71h3WFeaOrge/I++Y68R/4o7xmY
v+WK1tdywo5N1N3W2q/nPnjW72YMN/Z+Lo8Bt2Pu0skf+qWNPZTr1t/0u8tL
+KE2I8/vn/vhu03icki55GKZf/eqoyby2+T71sPyMePJRll/WXNt3kTfY960
eW1PnxpYB7+yxpyY+cu8Nj5znHnNusv6y3yk7zyQdjs48/7WxiFw9yp6Ai+X
qG0XbsLn9D3vacnv3aroA8gt/XZj/CZN1ODWifqFsd1Yaq3fP/e+V55b/7Q9
+wn2FfRBexH2JMamXUzO9xn3fdakzOPm7jnqODt7JPdlTjdf98z3/MlxM54b
t6ckZ5ADrFJHfDBOvJW5VZu3DjEHmaeWSL7UB9wxuat7bH1nXjY/P1eCb8g7
rE/Ny+bnF0vwHPnObplzrVsfzFitn03KWG1ceaAEV5GzWMOak+RT+upd6bvD
kv+Y3+/N2G4deU2Jb5fXTC/BteRc3ZKfyVnsVxi3jd89k7vIc61N7B3Yg7B2
M06Z260NjXHm2GuqiE2e/2OZO+Q1RyQ32NS5JWKdMe/hzFlylhdKcDM5Wsvk
sb3riENj87mblODtQ9G3b6JWsm66soQNy8WsM43V5ovVStQONgbXL1E7DK4j
zhnvjNnGu5vy9+jUGeveKNG3sZ80KnXGQd/pXgzIueYtfdqa7ci85rMm5DXX
Yv4w/skD5APy2DuTG3xaR71mTDY2m+/N+/LhMSVsWE56QYm68nnXX8JP5aRX
lOCictIbS9itnPeWEvHtw8wLrtF4eXvyEDl17/RVc+K45Bif1/Gd49Kexpfg
5/L0Fk343cwS/v1U+tud6X/q5mkiPj9f/u6Njsqz9ExbZbw1RhmrOidvt7dp
7WQ99lct5bgg0oJrI5mzdRP9W2t8ef7OmcvaZD59pwr+KX+T48n35CfyZznz
2Xnenr9x1d7UBk2cpXZtv8+e7RVV5M2fS8R54739KvOpuX5kcjZ5mv2HTlXU
8sYZY5qxzVxmL2tdc0pywjXryInG8w5N9DS0E3mNvWbrVvuH1ubuiTXNOflO
120/yL6QXFqOoA/KueaqI84b7+3RyNWtrV7MnDhfE7nZWCHPnZ7xs0XGpa55
bva55f/WV8/ms91H+Ys+bo63n+D+22vRR+zltmqipzoq738zY2tr/b5ETF+s
ifPzHO2H90wO1g78WokcYa6wx+777eF0y5git5Fryk3lnl2S8yxZBw9V5xnb
S7Lutjb/uoRPrtRED8qz65F2YQ1gLfNVCX82lrya+cX8NTP3yfeZ18xx5rrh
VfQstYVF6ug523u2h2ssfahEP86+3Iclvt99sNf9VX6j67H/Zq/JHt3XuYf2
xe0p2e+1B2Vv2b60/SXjrnag/W6V5+T/ILQtbez3Evbrdbm/ech8ZI2wRhPc
xh6UZ2HPyr6fZ7RDnsuqTfCu70r4gM/Qd+2J2We2t7ZFE/838X8o2pN25f8L
PG/jhflnz+R57fNMO6dt2KNfvoo+z8U599r0PX2wrqNHKVe0r6tv6CM/lPAn
bctvlkv1raJfd3yu0WtycTn5ZyV6zv6PZv70X/mqPbbtmvgfysJ19LiXraLX
pO+4h/ae7em7Znm4fX75j40TudiIKvri9vrdt6eS42kb8mF7/eZx+wn29+VC
9jGGpb14fvs0UdesXEe/3l5Q94wx7rvfJN+V9/p/Cv8noQ1YQ5lbfJa2IB8d
nr97NVHXWMv82X8H31+i324esT8/MNfuPf8HiSlehw==
             "]], 
            Polygon3DBox[CompressedData["
1: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
kffI2eXud5bI0c2hzKW8G3Mrc1Pv6MoSdRnzMnO5j0rwRjmf3M+ajjUHaw1b
1MHp5HZyTLnmEGNWE2+0b7X1I2tVW9G3dR2ydaYt62hzLc/Is3FN+1zDuR1j
/qBP6AuXpP92rKJGsWfesXc9OefxjfOtew6sX+K9+LaKGuApyR+m5Hs9JN8z
a1nW/Kz9GXONvb6B1vN8X32bfKNOaALHN/Hm2me8tvZnTczamO+dtUNrhtYO
5UById9864G+377PP/7mvZtXRZtvtzVIa5Hz8v3zfXsn+33v5QxyBzmV9Wvf
7xfzvZ///s2p4g0dn2+2b7ecTm7n+z6ripqltUvbXkg+4Vj5m7XLWfn++2b6
dsohrE/6nlqr/Dbf374lzkYOcGryHWPNS8kv5CRyEzmEXML33t++UB18Qc4m
d5MDWs+XU8gtfAOtL8pXnGtOvufyq0fyfZevGAt823zjjAnyW3OtC6vgi/pS
93z/9CnrX+ai5qR3oS9agivKGeWD2rK5tjm3Ni3fPgf5iir4qRx8m+TFcm85
idxETmJ9WU4rt5Wzt07IN/2fhn1vl8ijrUFYi/BMZif/8azeKJGnm3Obe8vf
3qqiRmyt2Hq13EhOZT3afENuLEfuk5xd7i6nlduak5ubm/Ob+8vB5GJyOOvb
r5WoA1gjsFbgNzOTT41K/u1ZTq3ifznyXrm5HL5txkJrG9YgjInyec/K/9H4
vxo5i9xFDme9/H8qnALl
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtlWlwzWcUxu+ba2ujlkRiSUQiqDSofV+qCKKIiBATS81gxlIzbe1Kawxh
Sq2d2tdaxjAde5JSscYX1Bp7i6EMoa19i98z7/nwzLOcf3Lvfd9zzj9uyJjU
r0ICgcAQUBzUwGyFY+F+wUAgA1RFryarDKfge4FH6EKw2AUCjajthkPxM9Al
4c94pj14jn4G1lFvTm0//D/+P7Ac3ZRsL3wYfwgMQlcnmwX/hb8BpqPrkm2E
T+DzwXB0DbK58AswEv1Uz/GZ9YDjmfFkb8ia4JuCYmQTyAJwc3wLUAI9kSgI
t8S3AtfQV8E0/rYOtfVwOfx8dBjciWeSwD/ou+BH6vWpbYffgnHoIrghzzQC
53jmLBhLlkDtFzhE3xH8hm5Dlg8X8cw7nT+6FdlR+Cn+ic4f3YwsF76MvwSm
oBPJ1uhz8W/AZnRLsiPwRfwF/T70J2Qr4Vf4l+BXdAuyPPgW/iaYia5HtgX+
GL8XnQBn8j0HgGgQBU5TT6F2C15NfRVogI4kGwzPw88FUejyZN3hnqAq+gur
/wT2oT8ny4H/tZ44hu5s319noTP5Hd3B+kRnoTM5jO5EdsB+02vQGx1D1gNe
gF9oZ6nz2GS/83aI71/1cQX0ImrRcAXqZdARcAa+v33/cmQV4YHqTRCPDiOL
gYfih4Ge/K8eIFyfaXOie22N3uZ8n9wDf6A72h1qJjQbfdHVyFLhJfifQRd0
FFkyPBs/BzS2XnpCNsL6OhT/YdCfj/7vGbgWvia4gu5D9giOw8eCC+hUsntw
PL46KED3Jnugs9Osg7PoXmR34Q/wpUC23cFJuC8+HVTS3duuKIP/CBy0ezmn
s8OXDfq7SiK7qHnCJ2p2dKY2s+3wbcE752dW+0OzqRnVbI+y+dRsakZfko3W
viJrZrP93HaAZjscHxb0vdSF6DK8WHdt9xdOlqZdArqijzs/i5rJ+/a99Nur
2bmts9lbZbN3RbMB9oT4vlbPTXJ+prTj1jq/Q67b3GrHLbV5LAD71dN297HU
vnd+jzZEz4dPUjsFdoId1g/R1L51fka1C3+AD1LLA4/RX5IVOn/36oFk8hdk
3eCp+GngIfVBdv+6e/WA+ivL+r8stSTn99mn6Cz4GLXjIAdk24ypX7+Dl2m3
olc4v9+05yL5nxFBf7bJ1K45v6vj9Y6BN2j32L6IIEuEv8Z/o9+sPUH2J1zS
+k59nEZ2yfk71d1eR6eTXXX+syKtnwbYTlIPx1gfp1jPak40L7fRmWR34Cq2
z85bv2t+Slsfb7b9uMH599Df9h7S+2Cq83d4wHawdusE53tin703tJcnO39u
ubaDE+wOd+F32/ugNtk45+9Z911gM6r50exohvROjCPrD6/gmZXgPaJZ7iQ=

             "]]}], Lighting -> "Neutral"]}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0D8vA2EcwPHD6X+nJBYmE3YGo39DKyHBIGkXplpQTfsCeAHtgoUXwAuo
pCurpF6AjobaLGx8nsTwue/vnrvncnfzx2d7pyNRFB0xSphnHBItaZk5c0sX
9U5XtKfr+qa7+qFVPeHX3NIrpj20o/c8suT8SV/CXgZ8sm39R8ft3Ten9EDT
miFLjjwFJjh0PdFJikwR8+05Q95ZdU9fn+nyEL6BNolrl9qkxpe9Fd3h1bwW
9uiy3uoN1yw4b+gFdc6Ztbalm2yEfxP2h/e0XiBPjiwZ0qTC9xIz9v///wBM
qyTP
          "], VertexColors -> None]}, {
         GrayLevel[0.2], 
         Line3DBox[{277, 601, 274, 603, 278, 605, 280, 608, 284, 611, 287, 
          615, 292, 619, 296, 623, 300, 628, 306, 633, 311, 638, 316, 643, 
          321}, VertexColors -> None], 
         Line3DBox[{330, 649, 326, 651, 331, 653, 283, 607, 282, 610, 286, 
          613, 289, 617, 294, 621, 298, 625, 302, 630, 308, 635, 313, 640, 
          318, 645, 323}, VertexColors -> None], 
         Line3DBox[{368, 686, 364, 682, 360, 678, 355, 674, 352, 671, 348, 
          667, 345, 664, 341, 661, 338, 658, 339, 697, 378, 695, 376, 693, 
          377, 726, 408, 724, 410, 753, 442}, VertexColors -> None], 
         Line3DBox[{374, 690, 328, 650, 327, 652, 332, 654, 333, 656, 336, 
          659, 291, 614, 290, 618, 295, 622, 299, 626, 303, 631, 309, 636, 
          314, 641, 319, 646, 324}, VertexColors -> None], 
         Line3DBox[{405, 720, 401, 717, 399, 715, 397, 713, 394, 710, 392, 
          708, 389, 705, 390, 738, 422, 736, 420, 734, 421, 761, 445, 759, 
          447, 780, 466, 779, 467, 797, 483, 796, 485, 810, 500, 819, 509, 
          829, 520, 837, 530}, VertexColors -> None], 
         Line3DBox[{412, 723, 373, 691, 372, 692, 375, 694, 335, 655, 334, 
          657, 337, 660, 340, 663, 344, 666, 347, 670, 305, 627, 304, 632, 
          310, 637, 315, 642, 320, 647, 325}, VertexColors -> None], 
         Line3DBox[{438, 752, 437, 751, 436, 749, 434, 747, 431, 745, 432, 
          769, 455, 768, 453, 767, 454, 786, 473, 785, 471, 784, 472, 802, 
          489, 801, 491, 814, 504, 824, 512, 823, 514, 833, 523, 840, 531, 
          846, 538, 856, 544, 855, 547, 862, 552, 868, 559, 874, 565, 880, 
          572, 888, 580, 895, 586, 901, 595}, VertexColors -> None], 
         Line3DBox[{461, 774, 460, 773, 459, 772, 458, 771, 456, 770, 457, 
          789, 476, 788, 474, 787, 475, 805, 494, 804, 492, 803, 493, 815, 
          505, 826, 515, 825, 516, 834, 524, 841, 532, 848, 537, 847, 539, 
          857, 548, 863, 554, 869, 560, 875, 566, 881, 573, 889, 581, 896, 
          588, 902, 596}, VertexColors -> None], 
         Line3DBox[{465, 775, 440, 754, 411, 725, 409, 727, 413, 729, 380, 
          696, 379, 698, 381, 700, 343, 662, 342, 665, 346, 668, 349, 672, 
          353, 675, 356, 679, 361, 683, 365, 687, 369}, VertexColors -> None], 
         Line3DBox[{486, 794, 463, 776, 441, 755, 439, 756, 415, 728, 414, 
          730, 416, 732, 383, 699, 382, 701, 384, 703, 387, 706, 351, 669, 
          350, 673, 354, 676, 357, 680, 362, 684, 366, 688, 370}, 
          VertexColors -> None], 
         Line3DBox[CompressedData["
1:eJwNyE8vAnAAx+FfjJucFJsyB7HRJg7ZtLLVMOZffxx0UYc4kI1O6pILb5Lk
DYijLp7DZ8933+XmQ7kdCSFU9Wt8aaiFyRA+Oc8B43xnjB9c4w9X+c0UR8zw
j5scM8epiRB2Oc0iZ3jEOZa5yAsmeMUVXnOdLWZ4xywfmecz93miU9X06rvk
G8/Z5xlfeMguD9jjHp9YYIc7vOc2b7jFW6bZ4AabTLHOJVaYZJUxHnOWJUb5
DwlEILM=
          "], VertexColors -> None], 
         Line3DBox[{511, 818, 499, 809, 484, 795, 464, 777, 462, 778, 444, 
          757, 443, 758, 418, 731, 417, 733, 419, 735, 386, 702, 385, 704, 
          388, 707, 391, 709, 393, 712, 359, 677, 358, 681, 363, 685, 367, 
          689, 371}, VertexColors -> None], 
         Line3DBox[{553, 860, 545, 853, 535, 844, 528, 838, 521, 830, 510, 
          820, 508, 821, 502, 811, 488, 798, 487, 799, 469, 781, 448, 760, 
          446, 762, 449, 764, 424, 737, 423, 739, 425, 741, 428, 743, 396, 
          711, 395, 714, 398, 716, 400, 718, 402, 721, 406}, VertexColors -> 
          None], 
         Line3DBox[{569, 878, 570, 886, 577, 885, 578, 893, 585, 900, 593, 
          899, 594, 906, 599, 905, 600}, VertexColors -> None], 
         Line3DBox[{587, 894, 579, 887, 571, 879, 564, 873, 558, 867, 551, 
          861, 546, 854, 536, 845, 529, 839, 522, 831, 519, 832, 513, 822, 
          503, 812, 501, 813, 490, 800, 470, 782, 468, 783, 451, 763, 450, 
          765, 452, 766, 427, 740, 426, 742, 429, 744, 430, 746, 433, 748, 
          435, 750, 404, 719, 403, 722, 407}, VertexColors -> None], 
         Line3DBox[{322, 644, 317, 639, 312, 634, 307, 629, 301, 624, 297, 
          620, 293, 616, 288, 612, 285, 609, 281, 606, 279, 604, 275, 602, 
          276, 648, 329}, VertexColors -> None]}, {}, {}}}, 
      VertexColors -> CompressedData["
1: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
Wo4wjiLv5jOrzlr0wTOhx4/r79RD2bW3oinhXZBuBLyL62qgrtAyZfn6QkhQ
zDTMqmXAWGqvR05VDQizLRn/rZcPmqle53rQHrGiRGxjdQ3oRNnFztmbD1Cg
3JGJOBYJPZ7iiGP/Pq9iCeKIP201SkK7VfACf8K/J/jUeyXaBdxG5QifTays
LRvx0zt+NhO+UkhWZD76l/3e7yiK/tFmZhOL0H/nwm0Zmeiv3R18NQv9o9bs
f0T+cfoKXlKj2P+q5Te6DzbA3ewl8jHD+dDLnmK+FO1WD2UFvqN9tmLm0DO0
O+vKNb5F/APbb96URPy8zdeGFRA/aPzflgzEl+5vZb1H/OB8+6JfiN/FpW67
GHHGPT8odSDOhu3HLz9BnM2bzIeyEefZs+EBMcQJfaf9YTHiHPDZW5uNOHky
PqvzESffJ6JiAnFmdv4wXII4x5asN2AijnhS4VPK0+/uF86RKXzffSxp8rm6
BQ5z3mt3PVACXX+ZDxT/sODbPWbA4toWWNF28YKEUQl0hH+6UIBx492Yq4gf
Y40QAeJn+8rCvzkY90zGTHMhxu2zend6EuM6/976juKm2WQEsjAu89ilFopr
d1O5awjj1qZYhORg3MqKcoujGDf4A4v3I+IX5ipH0bmuOupFSCK++hIfYTpX
Qnb9l0+IP7TxnxWdy2/+2loZxI/klVP9hvjzUh4IEs8n3ycNEf5xHe5mwjfI
LftL+HZjhxWKEF8y18hnEeJzj5fbiCA+8/up5Z8Qvy8p8UYp4pesfiY7hfij
dSaalL/8TidO4u3r6tI7lL/GnS1zCT9t0YsXHxC/3WP8zSHEn5Kw1C8c6QXN
sJHdl7Z3we/mc+89DGvgu2FoyRDaM0ajNv9De1jVoTeWRjUwaxU/O+lhzVb2
L6SHQ8vUixQxn31qKS9Jb58Dl5qQ3sIsmLdIbyqczDQ6b6jjq+avmM+Z6ODp
p5jPWY8HzVTHV8v7DUsxn7Tr0gXemE+FeWYq5VMq1HYqBOPKNx/j88J8riRa
FxPPC9+nOxPPJRZBTRIYV2zdnVqKq+N2s5XiWkikJlBcCT0PNwmMa749e1YT
xt1/o+1ENMZV97r0ZBjjHn5Vy5+PcaWUU/SdMW7bpGTsZ4xbVbNm7wWM67fe
qvAkxg0RkY1Jxrg3pQMUqB/NnlmsWIFx83KXRpP+mfkX537AuOt4h/+S/ueq
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
y1gP5wrEeblMfWU75vn3SMbwEXqOv3V8S3MmNYh9L/FpP2M1Sny+EDcqNES7
6bu/R4To+W6kXz8X+Qzw/tBB/jbwz4j8+V66FJG/SZaAcg/y/7XT8uEk5h9x
/8hKX/Rfdm7/PuL/RDffPeK/WPVPJT1P65XZVeleYZyocpHuFTW8j1Z+wHxk
REvdDuG5PhRFHH6C54o7ZlsphfeQKyfD41fTXI0/WdKB/jm27R9N0P+s98Nn
lI+p6MhuyifiovU05bOnUWg16YT3mpYd2X0/mZ8j++6PzNuUz5zDB9Ion0KD
EmXK53djZpE+6sG41L6X+jdO72flTtTD4V2OXTnhXbDWpf0l7cvePdqeT3vJ
E4/G2mmPvLMiX572kvobZbbRXtJ9pKzmE/p3qfgvI3+OhT2l4uh/MXv/fto3
yT+bmJuO/reX/qmgPdcZzjPjhJ+Yr/+M/IXZfr0m/OP3HWfI38w3XzMD/Vsj
F6nS3sfSbb8x7X3mmy9ZRXvnvxGz5tPeZ55OhNIbxClt7S+j/dqgnvvzVYiz
4pOT8wfEyZp5uPUd4lxpmtlLcTOiH3+URhxbZueXfsQRs/rhRvtErsvXzT8g
jtzVnVISiPPtkMwhWcSJKigYpfN+nQ/WdN6FIrV76bxXNMM6KZ9HhnM6aA/F
1spnTfkUmKf8pX1Tz/SbVbRfvvnW9TLtlzPrecWJH9d+FRM6r9Xtzgu0f/T5
Pn8h7ZEn6iPYChA/ZcuNMcKH3MeraA/ro/CumoH4S7lbQgl/54NLmbSHXZGg
9Tob8S1+r4y3pv21THR5BuJvXJWZRf8HcDoY2SON+OmDt1ZT/tuXSk7Q3r98
dnsH8eltralNe9WVFy/YDCK+YePcTOJBe8mHd4RvVnT5CuHfCDM+Rvj5z3qW
0v8E2CpWXKE9uG5CnLso4tseuq77EfFF7UYqixC/9MLQU9qDB12xfk78SE5I
LSN+1mROAOUvmphXQXvMA3MkBKsQ/5GljdRFxI/20/1/j+n1K1WX9pjOz8tT
aY85/ClWner7vC6zhOobk6L9gOprMNxcSzpZysn9lvaY6yMOiv/+n7dgaTrX
8Bn16QGMO32a5yWdy0qhMIz2Ahxc7+/Qvu+mh+Te0xh3YFZoNMXd2XRFjeJm
VuTepLjygou2ZWFc6WO6ZsSni3+sPf2/IrtAZDbtJR+JHTAnfW6VuruJ4h4u
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
or6b++nlW9LDA+HgtdR3AXa+Oc54Xs8VVab0f4bN91NWTiIPXR8/raPvsTtD
648TP1XzRb3oe2zT+XgZOu9gq+tROq/d+l0pdN672UW36bzjN7oe0nlllVLv
0nmfM07L0PNiXYFOND3H68IKBOk5/uPnpBeddyFLy4DOqxlZE0znnTc3spWe
yxddgxTpXHB1SpDuDxcGtZNJtxseayyicy3kGN1E83zzzcZNNAdazt9WpTwz
LHfY0hyY2ihfQ/Zj260Pkr3Y7GAt5R8xMaePdJjhIsdB96g4pvM/ukfJPjw8
Tfcunein20mHXOGhNXR/fvfgzwG6P3c66K6n/OdbOt+sxTx3fiuupTx3ZfPJ
U56/F56XpjzfCPoZUj8yjFx3UD9mxjr4WGKeEb4vn/2/T1wl4E/5CG3eLUD5
yA56ylOebyWvryF7tNcDL8q/7OQHH9LJ/d1Nkgn03nFAdYR0MnupZRr1RfHZ
NcbUF4/P6nylvhgxsR24hPk8v1hrT/PZfsfSvjP0fzPHuADizeNqCjvxFn60
5TnxBlJDQ///v2WosJ36Qi5dy5H6Im3iTzrpIYvzlQnpIU+zdy3p4Zf6Un2a
A0FdbLbU71nTjgup30Nd3i6heetZGX6f8le8PHaP5m1OqaA9zW3dkytryX90
3XsJmucqNW/FqN9lyj0aiWeWlHsb9fv2eZcekh4knZVsSQ/pB5cVkR4cmjJ8
ae4NlZp3E8+7ksXtae7tPvZ1I/V7wNULLtTvbB2RmfScuqMRqUP8fzRapU38
V63gv0v8Gwb3rHDBfByu2z2jc50zW1H7m54LDvXS9L8INvE91ylP7+tiBvS/
CK9f9/JJD2Z/lJZRni+KdOxID5YKzXOJ/wPyfTMZmKez2I30L5jn6Io1SyhP
hnbfe8pzS0y+2gnM555NExfNH4vZI33E888XnRuI58I4NQHis+XWoBHFvZ8e
bUx83tskOEi86T+UHSb7QrmKaHrefdXjbqV5tVD30hjxrL6gfIz+dzT9O3j5
EOZjrJD7mnhblJJURvNQSihlI+lTLr+jk/hxUTPzo/+tZRjtnaF7VOs1Hk/K
RwDmBtJ+cPDDkZuUz4FVOW7/z/OfpY3Eg+YChjPpc6Ga1WaKe1Rrnirp8+5c
me2Up/rV91/+f177vtGi+rZ+jFxD/fIy8Jcs9cs8+x0G1C/aT25W0BwT3z//
NM2xsbUD7vQ/rgv9XE6Uz2xlAxXKR8HGrpzudZLsfQW0b/VsuyRBcXMKGdUU
1zP1Tivls+GC8f/7rIFIu1Lqo225t9+Qnr+xL8sjnKJZk+PE83POhm7SlUVz
ZAjxw6sVp0P8KPdYL6L3Akdbk3uUj0L5h0p6L3A9cjqKcKJr2DMJR114kTjd
Dw+8sq8incy7kvaWzptWJJpA5627/jGN9B+S3/ue8jEMk5tN+n8lrL2a/P+b
RMm9iSD1LEYxrqDw7F9elwFKD6+4JURA5fCVro5wUHuVJdLZChQOim+2yoDs
NTm1xgrU/sypfTPtKdD9tjV2B0Hpzcvw0s1TQPcrS8U6gNrV3xw+S4Ha1e1K
smagdvX+SDcZUDlfteFwMsh8u46ZR4KA5pz74uALcmfREZZF4PbSyUc5IHfe
myA7DyTOv/XUJpC4y8E8BZD4mZMpjqDySuNsSRZI/EmZShYonD/s3Lwb5P7a
Xd/B7YrgEO65oHaFvcvKS6D256vp9S9B5RLXjS/fQO3PnxvyJoDa83xNPiqg
dDh7+T8j0LqLc7KHz4P8y+T0LQ7k3wO3Zr8GpcNb99qmgOx1jt5cDa6XV3ZJ
g+yd9qfECJTeTsjwngCvv3qZ4gcKf7bZLHtB5hw9ujwMZA5//zxRUPpZscSq
H+TOyjgnVZA7Oe13MIDC+QL/lb8g9xjbHA8BuWdn/HlbUP+i38uuGhRu4ctv
9oLUP9I78B5UPxb8NH8LSm+Mr/9FgOdPS3ftBLnn2ZPns0Dx25gxdwXIPVcu
rbsLco+blKEByN7Ps1R+g9zTybXzKshenvZ0dVC6chU62woSz+PVUwf5FwA8
U5m9
       "], VertexNormals -> CompressedData["
1:eJwMl3c4l28Uxu2drIysaEiikPWT7yGlKSKkRYiMVJRQSkakUkmhZJUWQjLj
PVnZe+89v8tWRn6u6/3r+eO5znuec9/nc8vYXDO5zMTAwBDCzMCw/jGIeHET
B0o7sFWt1ndVmgmLt4Q0PDxGhUFy5TyTXj0G13furbvBjnZ9vYMOszQ4PPUz
o5xai8FlujH70ngwplf0lN4GOvBxaRzx0a9BLknVkw9/8+Ej39fXOOXo4JR6
40mJfxWGeJpEXWEVRBfrKzvu69LBZ35zcUZqBboE/kvo3bQJTzw9mXTOkg7s
n14XdJeXoXF5+LHJP8LIM1qRcPoGHVq9e7WNG0qxe2/Bgdupohiv29wjFUwH
lzdnpKKqijFPPD/t0n+b0T1TPvTGOzpc5Ex9n5pXiC++Xon3eSOOD9o2Z3Cm
04Fn2iC0Qh9RnaWhKKZeAiv/5LimFNEh3vDl+6ecP9HI/UhmbI8kJmeLUpQa
6fCGo6H9XsoyIfvyxwfmeClcXtm+srZGB8d/C3kTrhPIvsPmXm7QHHE0IevS
W+chwFIR9RjVEfSv43K9PPyP6Ety55xZHIMNHsUNuUbDOHAypsLhCzMe9/Al
a+aNw9hhN3HdM0OYO2gjlJvOjv/9vNGe6DMBdV9aNIJODKKD0qLag4fcSG28
XuWsOwlLASLhh3cP4KLU8eMBshvRPv8nyYWBDLOEHO8Deh/eJXtbc+vy48pH
L9P9P8kgJFZRlG/Vg9zT6kRytQCaN6ns2edKAX+20HeZyZ0479x33GCfEBaO
XyceC1OhoE/57ZuuNswKvPriv5ubUGcw7W9gOhX4KCbsB2ab0WavRMHlEGE0
jG/x+7SfBlX5U4ZNyw0Y8uV0oPEtEQw4fpthKpMGDxMYhGM5qjDTk4XZiG8z
Ru1kWFY7TIccr4NXuFmpONf/mStwapy4FyXz49GfTnDZ6jSjjmQ8KWh/tCx/
mqjpqV35OtAHjHf7r3vPTqL5z9EjqUyLBFdlpswL3QEQvZ/zkpVhEiU3hkho
6q0Ql+1m3V9/GoS4L34PjXrH8Xr/ELNYFgN6XY+z9N46DHOPelfHg8aQxab/
/g4tZjRsuLkjI3UE4m52fj27OIJn9X4U6sawolD14GXBQ2Nw6axWs438MEam
fsjY0caONdntjwM7xkGA4n3zitQgcvGMR31t4sSV7JYhM+tJeCu7nXY1uw9f
t90XsPbnxisvui1PVpFBZP6wQENbJ04neZ1bbuPBre3vxON4qHBQIp1dKr8F
BfdyJBaXbUB3kgOHjBgNRP01pi0fNOPbO/zGbaJ8uKpUH7PDmAZpn3inxmVp
aPUfmbLJeYBISOBzfx/YAqcusqyqBVHR8Q6fqW7YGBFsGA+7v7aDR9TurYdb
KLhhO41Rs4dGmPzNFntQ1AWnyRR7NxoZS73EbOVkZ4n48x+GV//rg6jSyd3S
JZPoaXYu4mnHAtHsNUROfTQA6dZ7dGYOTeDbZ6H7TvstEQc9qLSauCF4uKCy
c9V2DKVKAhjN1laJ+K8qzS6tIyCZ5bG9S2AE7WdsR/nCGfAVXXxPqdA4XPa/
vWhwahD1fEy/wCgjhlgVZorrTILWxouvmyx7Udcy92tSLxNeb75bqb2bAgc7
JWdFHrZhPbClBrkwY+jmZ9efFVFh7hInO8ftejTc7HSuNIQZb7v+TNGn0MAr
QkbtFVM9+uyLORH6iQVVvyydeLRMA81fW39oxtDwYfSL4BWzTuJMiGZEy5tG
6NBrFJfcR0PWF9/XFE8NEIG/U9eMtrVAo3BngsojKsYpN++w+zVKGOglGX+M
a4eef0bqnW8oWNdx3jXwJIWIfsr3yjCtG7T2ZtXVGJGxufClgsXsFHH/UcTV
seR++Pnoy2jRown00HR2cfs2S7R2Kl2GI0PgvjATELprDMeW3ru1qSwQYQ+e
JBgLjkK7vJeptfQwqgYfDt11/A9Rtqx/JH5gHF7EHi9PutaPL8M6ftjk/yX4
VR78bbxJBmV1nb+ST9rx6knllGbLJeL5YBB4PqWCvPIPA4sPdRj4anVjougS
0U9TN/zFSIeKB1Vd1xQL8NoOlX9eQn+J6B09B2Iq6TDPRHMy+pGH0lZ382JX
/hLd5fvbTzbRocru48rRHhp6XDjn5DLQTKS6D67LpB5+CAfO7QmkYfxI1VoQ
pZMYdtx+PWZ/E7yvi2w91ULFN/XeMvapA4TzT/G2IzvagHGvVuFYLQWDYoLI
Z1dHiKi1WDdydxfs15j9+vEoGZ08Vm6UH5okCiqdxBaz+kHZd860TXACaT2z
qxuMaITkk588X/uHIOt8qODWtRFUzSpmPNI1RVxuwm05OmPw0WT4FOPKAJr3
fiAr/5smCu84j7XenoTH2ZkGqy6dKFrhlhVhOUME7ddzENhOBR4Tt5ulu+tR
rrKJVto7TfwtC7TjXaDBPTunT2a/ctCi0YnLLn2KuG0tMRvTQYegj3yFUwc+
gjDBv3JVjkZk+50p0f1Dh3e7Onw98r4B0+KvxoUAGsFSaP5Fe5oODF+Pbz/E
QMdxh6iUVf4GwqVv0+LDn3VQ7mmzf+c3Gs4tqBhs/dJCiMYm2X/Y2wiTwm/D
oqeoKHulr/PChW4iV+WSYnxEK0RclSnqL6Kgo2fK3cInA8SvQ/QON95u0Ll9
nP3R2CR+juG9dqlymOC93auqYDoABZ1le1IEx/Epm2Nl+ZsxwnZkmlNcaAQ0
7DTXNHiHccQV9OUDJ4g01d+lt+nj8PqelN2j+h6MXBvb5cwzSejdkzSsNKbA
G+MXEqjViMvH+QzY1sYJ0ly+Q20yDWL8SnwCeX+ipWY6feuHdV202HJLre9H
/0E2/a3aSeCxp9Mp/tkQYVvYVuEwR4ef2ZHXuALKIEQkOHPWqJ/YcmNX7vOb
dNjquwv0dCrh4VT2AhtzP8F91F6C3YQOMUlfI0cF6Xjm3LlGdp9qQmYtHvX8
amHrS9bO1EIaKhlGs/2sbSBeX9bwrvraAFbc+0+m0Kio7cvUJCXfRhhQfAb7
4ltB+mLbmcOPKHhBeKqOyaqbyHvoeWZpvhtMSnnfG2tM4lyi573YwH6C5nYw
4rnlIJCbPyVNvRhFW85wNlW1QWLxYkX8gdRR+M4Yz9TuNIAHbmWJ/SsYJB6P
PLip3T4Jo/u2Lvkea0Vbd4YO6YYBYjdr0jTPGhVM3F3ZNT4VYfJa8+ZhvT6i
9jyH/pPPdDA8+tPtpWoCtLtaUAoedxBS9vuvNC7RgTbn9Dn9SBlY9X5cu5XW
RIzlfF4yuU2HkK2NAaGljfBhYUvSvYpqglnhmnRGBA2K/zyR6lVthrcfpJyU
uiuJhJ+Fz7dfoIEJa9IypxQdeU18tWw3lxMeO6U8tnTVgJRD2reKMhqms57X
LUquIVTcVgtFfBvguK98gXHb+v49+U1mVrCJGD+g8XJFvA2cAjIUzOUoKCw3
9sNuoZVY6ni1b9m5F45sIWR/aU5gSNo2++CFDoJmRm3B9CHYbcmWL/hsGG2B
MAhV6SLOTRke/hg4Dpu4Z4JV7LvRvyebJ7qjg9DU5ZgwTqHAnEtewWe1ahxR
cfju+a+FYDn+lytcnQ5+DMphSu3B+BzF+qPz64n/TuZ8u7zOV9IH3cRorCWg
dTA2WLrgN/H2pk7B9rd0cL6pufceTyOo5GkHycfkEbcq0rbcy6CBvbOieUBz
Gwj/CVVQDflIqNg67Zr5TgVRk18zMkodQHJ/a9nLH0vwFV5KNnZe59stoiyf
Zeh4ojpwh0h4CWG5QWvtSUwN+Fzv1iaV0FDBYXen93g5MVlmNDYX2QDbXXL1
HVOoyKcmvvLAo45Qmig+xjnVBuRsCuvVaDJa2Pss+tg3EqEmyYnVu/vByUPK
bXR0DItMhB/1VDcRPw2TspsMRqDWJT+mk38Qr755O1q4sYngfXxfefrKJNC1
7iQ2qLfgmP2umw05dcRnxxM3e/fSIPg8R5HH1hw8YyttLibym/CLSb7r20UH
0VGss8U8mNJX4Tu9mk14in2Nk1/37aUrTY98JOvhYD1ZporrDfFiMfokzx8a
HDHftVyR2wovk+crs6ejSauRS6e2T1LhdS30Whp2gaZbD29VaDrpupJ9495p
CuytC1Z97N8Nw2KjvD2yP0hPLJwPcHykAK95TIblFjpGfDpd2/WlkOgQOB/k
/aMGDifJHRnIoeF8RNKWorkS4veHppiUsQaQ2Kbaf/kGFR3KIp6QSyuINXK5
Zzx/B8Rs7BxhGZlEHfrfHsHqaqJmf16fgMUAiLW0kpJ0RtGmI/zzj8BqguY6
t2GccQxmvv9itr7Yiz0inSH/fS0jfph/2sikQIE9ZZtq0mKq8EOz4vgjRoIo
4761jRnoUMQpv8M7NhwUu1xO6YskEhLbHn40/7c+V6NNrPoPKuBdyb8tCzlR
pG+cF/TzztFhZYtkv3pKMxjk/TBics0g/VCJb/x+hAYlD8K1Ahk64drekPDy
6nzSu0itLS4663rnYEh9EdkDxJHX5P7PhSSuPzf/u2lFgWuJz+1ufOkF/f7V
i4W3i0gNmrOMH4Up8Eq+e+bfZjrqr5iKJtsShMr1+8bfN9TCvrzh+vsf1/3N
lLQn+XUhkc16MmXNthGeH25yPSpLxXvnPO37yksIj8rwXfpenSBstlfMdmUC
K2ruSns8KyWMuCgGH5MHQcpb+poaaRg37zY+SHUsIipuMgqHlY/DPzZ/In1T
O2Jf8VM51izixXy+aWUiFQ5N7R6/1JSHgj2DZFUimJi4uGI8uu7nyvxekuE8
BLwQn0z5YpVMEpOv+HaxjA41i6W7Vq43gOT5UWtx/Z8kx8XTTrQKGhiPL7b4
LbSBm8DhZA6FIlLZ3UMNm5OpkHtAhStOsxuaDziyBymWkq77H2ILzaFAk3oj
bubuAzOfHXEcgmWkwsvH8sqWyTDu+an0998+OPttf+RPzzISZSgyyiCHDDs4
xpw2CKzr9MURTy3pPGKi55GQSVwtxHDskT/xlIbKn5kOWRkWEFIbN/Z1cDRB
7ZLa190EBR2aurY3HP9F/Dtqx/FDphvcv8UvbFzPBaQJ+i2GogJie8q71vL1
XLDjsv3nsekBjLmzGrT9yndie3jnUtq9ScjV28f2LaEBA0TWfraZWBOfPg0N
dxTR4NmOCYcP7W4oefn0De7kdNLsNF/NxLpf/Xoo1zIlUgE6CsvyTVlISviU
f4bzEh3SJ9mkd083w/LVoyEHXpeQQhfllpl1aBDy43ZN34FOGGx+Y2Pwqoyk
Mje8/ZUSFUYt+L7wfe2BPYnNGjJWFaTSTJP7g2cpUGlzfEFkqA/uUQfS3I0q
SU9dLorWEmTYU3zqItvZfohQYuA+bVNJ+kAZ/Jr/gAz3WMU/5LDSkf1dRanX
xSwiwaDxUevlOhiVTlASvErDTcVOb6MFcgjLsLI94k1NEL+8VPfiAAXPXfc6
/8Qih1C47CF7iq0X7liIFlis5ybXny7V1kfTiXsOboRx2gh8y1Y8VdLSizsO
nf/7jv0esZ43mf24KLDbRm4pLu832tbP3r8okU7KfxYC9T50YJq8ZtjZ+QNO
ppFU7wX/IlG4NSNKh+ngFfR3XMy7HoR2GuzLHigljbrtY+8i04D5vfmV23fb
YEOxhp+6TAXpaAQni0cJFap5IwNz67vAd+mHoeZSJcnrYn1zRwMFwifOXf8Y
0gtfxXXKfg5XkQjpumZ2aQr4flM2JO3ohzhKZ+K4fDXp3mUtJf04Msi702rF
/PqhLytgo8W/KpLg/sP7ihzXc3Qc7SX7Ag0tNUbPx7BkED/yzBP+7q6HG0Iv
7c8comGDxcufxWYZhOsw9X3Dr2ZghePH05LJ2OXqzhCckEZ8jUxOnODrh2j1
AvWMPyNY8ex+R/iz18Q+Nt5NtfpjsPTeisnDvwMfH5dje6P4hWRNN2ubOEOF
yNc6z3hVs3B3U3iy6D+CdIs2JrhtgA79BXVZX4OLwV1kpDWU8zfJc+3qM+44
OrC9y1Bd9GgCDfWVC2HjFaSxSuoC7Q4NuFtvt+se7YCgUzsZNrJUk3KeiVje
v0wFYuLfN+v6bmhUfCOzkb2G9IwtobIijAJEkft7a8Y+GJiN8NxpWkM6N7ZQ
6vWPDE9UxSdkVPshWPpj5BaZGtJLyeYjWZFkuLm6YGoT0A8c790Y+8uqSQzc
IYI2V8jgoJj3sX+Qhsc9SsqIP6mEXIS3HzW/HixKjhvab6Jh8bWH/12eSyH0
79Zd/lnfAn/fN5Mr/06i4GJt8ofMBOLi6+8TqeoDkGnr9ShTfRgHhXKEll6E
k7bkXTyXVjsO5y6/+7km24zeaeb+ft05pEUOrZczVjSw6lGTtqi+jYwM1XFn
CktIKm3wpntdj4vnj/Lsa6+EX5JnNba3VZBKXJ5sbjhKByO/oEOOqS2gsHDS
U9S/mlSVoOHnLE4Dv/0h8Uv+nbB3D8uu/pIakmqjY1SHNBVWNlm4jVzuAYUo
QuaNYi2pQp07L9qFAlTdhT6rXX1QtHHB6B1nLUkivmBk0ywZXr3ND9be2g+i
ufcbagNqSHyunkGsCWSI57xwI865HxqSfHm4uGtIB92cz5Fuk4F5X9UHvmoa
5kw6x7k5fyWq/V22Dl9qAPVzLncsu6mo4O5Vl9aSSEQ+fLiRzNgGkSa6ea/l
JvEZZ/prXz9/QvrxOHX22iD8YgJuyWODeG2vkEQVNYW0Ie3mo80HJqGBv6Aw
o7YGlQ1nrctvFZJCU7lCy6XoIMuvftjibBronkiq8HhdTipxTps9SKdDr7J1
qPuxeuA3K2CKuVhNOiDvpL1rhgaJP3x7Wo63weTG3k+tErUkv/QcZaZaKqi5
61coGHVBBFOkxW+ilhRDa6EUTVHgn2PczamkHpjkTFVNy6klPTe9u2q37mNS
O+e7+Tf3QQ7XlGzkoVoSTN+YiF0kw0mpqi2LK33gJ1ezmhNUQ2pwSpQ8l02G
aW1/JX/oBzsxhxPBi9UkKWtPKdcXZAj0gR8n02mY0ub0fORIIqH5dPOwmXgj
DPwHV3ZFreepnI9ea9bRRLzXXP0903Y4FPzYOXnfBB6RiSigBz0n7W4iXVjM
GgIm37eyM6R+TC85lW6WnU1SUDwWVbx+f0Z2me/YXDGe/fPu0KprKWn6gi1b
4zp/vhK4/sHQGOHxlUc74WAVSbf4g/TdIjqcfnToS+z9Roimv1LiXqwhGTDz
v7FIoMHb9Kdnsq+2Q++uiP1MTHWknLcsVcUvqfA5K/WoTGkXhLsY/7HaU0fq
SD9olNhMgXHta3IGWT3Q8HLgWF9HLenKzuF9aRYUqCg2D7vd1wuX6h7cPbin
lqTt1FbVyk6ByMkg1rOv+oD1fsmR2GM1pFe3bqgytJChFT3D37D2A//3/+4m
JFWTeo4+GdHJIENizP1MUhgN3zfEy5DuxRGXvVuW/ow3QtutVs2cY1Sc79KZ
sM97TJx8Vy5lU9IBTyTLLGa2jOPbovCe52kfSE8PfF8bZxmBKnbbLj6Dblx6
d3RMzRhJgRuf1kEmBZZkvUocxzPRzmPXZ0v3cpJIS+27mXUf8xr96MtcXQoW
KqSAx+vzn5HDEWgZTAc9VmeVbbuaoUPMp15hsJbk/ZnJsPgiDZ74TpTm7ukA
G/3zZp0OdSR+VoXLf52oAFcLb9f/XefVWvlKL906kpOP5I/RMgpUO3ZsS33Z
A4e83A8c/V5LsvGa3JdnTYFDT5PYswN7waTPY1VpoIZUOPMk7+IWClhymZ9R
EO2DfZe+u/cPVpOGOlnk5P6QIXb66+kp/z6wFPu8rfK/ahK15gkHvYMMUeqX
stxcaXjjJ5tD4d8Iwoa2ZVtSZRNMq3keaaVTMG5VfbTftLNA0WvqibBpF+To
5DYOU0dRzr2l6t3ONFL94xt3TpiMwtO1PIVmjnb8M8yvOtxVRKplvuZo/5kK
/QK/WKs8ItB/T9z7iveVpFb2oQsdq3R4GnCpMAorQZh7Q+OFrbWkqyeG9ske
p8ONo1/vBNi1wMq5hrNyxnWklre3E2p20qDbLheKP3aA2bCy4A33OtJdFoHz
Gqeo8HWk977rShfs+G3wPYG3juTtK9Wuv9635Ym0FnOjHjhp1k0+daaWNMNZ
ynDNjQJB5nsXlTb1QvYNQwbhqzUkjy6TtHckClD+HlH6/bgX1CLE7r5c9wfX
L27fc6UoMH2reUWd3gvxexRPR6dXkYK8mwzvM1NAVFHvqsRpGnJxne82uRZH
rKRWyPQ7NoOQEBx/akTFRvGLi/uzHhAHDt/LvfCtAzIrbkw/zh5Dg0md0n/P
v5AqDBymn90ZgUuH72399awD6wI3xkc8LCTxKJGP6ZhT4ZzKUtf1N7F4f82v
dpClkmS1Pfyf6AodXo95MMbcrgROpQ2SLztrSGGXnfTmT67rd9ScPZzUAgn3
vus1KdeRlEI+aT/YQ4MfAU+Ts1w6ADtsVM641pFqW270tV+gwv6L9b08qV1g
oni0qkW0jvRmuqJptoMCUaXR6lUz3bAn9LhDtnMtyd1DX1w4hALdYpOqb1N6
wKV5zE3pYQ3pDzXUdN6SAr9esMgESPRCUc/Bq6/uVJPUybxPv+ynwHnXN8Vq
Lr1gugU8RgOqSLUcM5YGchT4y3/Ly2hTD54QKS1VM2JBp7CWupMPKBDAv/8w
i9EwxpfPDyVqMuD5VAG22rxxMNx2vCIseBTzmwLGB+aWid2PNr54njMKniKk
TfJOI3j4m9XZr3LLhMh0ZJB+2Rj8kV7oDDPtwCH3he3dM5zo6TP72cCWClq1
bxetDQcwciil0/UuGyosasccIE/Cr80/A/6EtuLF4ZLJp7wb8dDId2vSDBWe
7q0V0djTi9akLK4/jDzYf5TLOkmDAqMVZgbbPw2imZt60qwnB75bHCg1Z5iE
s3m8+9NwCB1/SGvxsLPh7oArIW2KE3Dc2Idt18lmjB8ak+Dv4keVwTdxRWdo
cGIjo7ttaicWtL0++9iLDwsZKV60TVSY/VK9edG2H/s9lIY6qzYgs8Yen4Y7
ZBhysnrVbNGITrqff3X9FUQj+UkXk880uOlSEOhFtOFR0ifuwu8CeDn2v5xz
2VQIGXExPrTUjdWX8+IJfX60PM7huDeYAptiNu6wWO1H21p3k7VLGzGJoypq
g9S6P1xm23Dy0gAKf9mv6nWHF+sr+K879k7CpF+n5srTelT8Rer+NroJw5/Z
KqtO0CCod/CW6s4WlOfmzGj9LoStQb+bXVVpEHepQcjjcweG77UZ8rMSROkO
La124/V5nr1/MJ6lF69KOyteoPPj74Da+yz6FLhyO2dyCGuQcSnw4pv3Ihjx
QfdkkvQ65yxLZLXVNOId0+wDuT7CWB6t53T1NQ2GNbh+tCS1YpN58pAxbMJi
yZyWSgoVtLOei2W4d6I65Q/T9klBrAjX//1kKxX+0g99sQ+uREm6t7mSihge
KjpH51/Xi+pUFdEXXY/35gYPbBEWxRwOgXHVMRo47enjbSQ34U6t0jdHx4Qx
0IK/htNxPS9XOs3pKrYhk1D1RPfHTSh869m9xSYqHBDR33P3QidGZT0YVTMX
QkVO687wnes5NEKHV/FpFwrePej7vFAQ97ftoW0YpIDeUaf6XqcyPMvZ4Znz
cjO28k/JFtyiQ9apE0dVhGowuumUtOQ9MUz6MN1bI0+Hpb76jNEzDWgYfm/Q
/awoikbHsJrVrNfJyv/nlXQzTj2W/xsqL4Jj/6WY+lvTQJzRpoHW1Yo7uF++
NadswuFbo5/fD1HBVOZoQvulEhRPHrBxqBDHubYmD68IOjBEx1u2Slbg/evX
Up2yNyO/lVlngTUdLOFA5WJjDS5HSTzWfiuG3r+Z5YLW+ero53dMp6AB867b
vnG8JYo8vzacptTToPJOVPeWZ004vXEw4ZmBCCbNOI3yedLAy9zYZ7tzIXIp
lslZN0sgq//HY1UZdFB03NJ2zqgU2VYZz78tFke5lEKL5Kd0UElnz/y5pwJf
c+72zU/ajAVvKkzarejw84DvvjauGmzwuNi29akYXnY+f8tyF30dllxfxl+r
R4Xhd93qV0TxirJMNFBpIGJmlhEpmYC5u5lMeRYkUc89qa93iQ4c1VRnR+nv
OGkx8+ivriR27ZfwdCOvc2PmN60wpZ+4/K7+mqSfBI7Y3i1Na6BDrOSdDKp4
EeY9DhOryBXH7ZaS5VEpdBCx0eW6+vY3Gk+VqluMb0aRcwfCNO7ToU9fUeOt
wzhy93dv2ePyl/j2pyjix/dhePko8/vmt2SUt+myy5OeIcwHfBc27OkHIXfl
7pP1ZLz/oCVn7M400cIcONab2AftXXpsdW8mMXN475MMgxmiLu2wjWT5AFwt
ohyfZaKiGK9L8dOVcSJ6y1fNx4zr3KCr4tt5aAQbt7ZtC8xlwh3+EbolY2Mg
dKQ7ZuHsOJ5kbMhy9v5HdMppRr0sHIZeEXbVzOcjOBh3fLfsPxZ0s9173fTD
GAw/F+S6JT2OM4LhAgqnGXHW2OJ1DNsI5JwLevZyahKv3dMSuSG4SIwXedeK
HhqAx6uxwrXbhvA0891T3y9yoWb2X0mrDxNg7DVxyC9oBO0brQ1ul7Hh6SJ/
nR/JY9BvxBivmDOG+coPVMQWmTBWUsy5x3sEyjVO9EUSE3hKI03H6fYq8eLg
XJ034xBE5Ta1HN89hOWj9d+3tXBjvk/M19KYCZiykqdZa46gIT9nrz4fB/7d
KSn/c3YM7KssdjdJj+HBmIu7ErewIJvT1wOhUqNgt8y2cJZhHI14bhi5XmRC
tm2Z/qK7RkDdKnPvceYBtGXtHG7S48OMQ+/bT20mQ6b+tUu9PYN40P+ZHCPy
oKuvimxB+wS8o589/yl+GE8dSPhp3MyBApVZWuwe41DnECeuz9uLH42c86Wc
BBC/bNh3S3ed07QvCVE+9mPco8mEgQd8+DH7x6C7KRnejO+Y5tQaRN7w0REF
oQ2o1eEzuGA4CRbeIepnfw7hf/qbdIK5OFF51vG5jvIEBAcq29iRRlCCol/g
E8KGr4IHpy7TxiD+7mK++tYefDvVTzW/LoCLrnr9hT4UWNVSsuqu68Olw0F+
a9f4UMLqc4BJCRnWtiyRTdQGUB5u8LtX8aCRVs7zL0uTUDxu9sT9vw6M/eao
/01BCPl9/TanXKFCe4s49Y51F2qeJs9oSAhgmI9SYRKFAsmascccfHow2pMz
VpCND1mUXN4H2q9zAnPiV9HnfXhycHU+qZkbP5uW/fBpJYPtZdKqt0U/hr9I
f9i5mxvPNezOBf/1vVYYEin1sgVjq9SG1X5swqGc/Mn7W2iQx5feqL6zDS11
hp7vfiaI+iH2K9PNVCh7VbF8MbcdvbrsK23s+TFK5dA5jgAq8GWcy91l0Ino
HunZdpMXHzxhc29TpEKlmkfrQYVGvBjJwu3IJYKBlXyrs99oYPJi4jv7ria0
VHuFlRVCaDosABLBNLjHs3bliVwzpk6NTH0IEsBmTms35fU8rv1GVjh3awvq
CoC8ykE+7Cz+56exjwY9Mst3Kvmr0Odvqf4852Zk3NQunG1Ah29sR6VJFbUo
cLX5Vs8NEVw0VNF+uJEOzePG7zR1GvCvaozFWJMQXit2vaDRQIMd/+LqeQWa
kHWrb+j8XgFMcW752v2YBvOHbOJ62igoNSb+bi6MQsyXuUgS2eu5FEfYDJup
OGlMh/GEYYKPuuttsEIb+Kje2RVAoaJjVUnrMsMQQTwJrj2W0gohFR0tFxYm
0SnOmv/SnwWCb6uE9ob9A3Dzszz7n39kPCjwk6mTa5Yol82OilzrhaqzN7N3
naVi0z0VFm2/CYKJybMnzacDZr9fL9+nMImlW86X3A9aJqbIP5QanAYhzbs4
/OxmMgqsWsdEHFkkRF/wHNFhHoBjHcf0NQspKG4VJvLiCZ0Y+dV7m7SpG8I4
2F6s6UygEzU9a95zjZDsEPNnTRoC7qOyMVTBSZyWG5PLH1oihhVOnM95PAiS
82J6rENkTEvUWdA7OkvkF5Cf/7TtgwuiV2+Hio/jryry8a2mjNhs/PSKCPcI
nDba1eHdNI77/wsrEMtaJXgDEocb9w6Ds59l6HzQJG4XHr0jenuRoPRTWZWH
B0BB3pq3fNMo9rxylX+6iRUvb33xct/OMeD8aXZv+ssoukJAOM91JvwsN3rz
cMQo1PB3xjv8N4ZFtmw2lNA1ovaDIt97plGYbqSqcB8cx0s/T2+1dF8hzl/5
HXC2exi+m0Xd2uM8jKnzqhurGlhxf3IW74v348DIAE0WZcP4d8cN6/A5JrTU
H7/AbT4OO09kpPNtG0R+vRMO/jMcGIHzO9zOT0LK8hkTfs1BfDD648OZFlYU
n9EXfX9yEmzPJNxgPzGIIpd7eWRymNBJdUNXie4kbNgcFbqHZRi381+gh0kz
4m8WGunh4jgwMDNqqmj24dU/eXHs5zjQPC3G4T86GbwOcNygp/Ti1njOr2+n
WNDhnwSnyyYKlFXlKxxl7sSEKdMQZS8uVBNT/F67nwovWl67bkhtx0/Ke4TG
v7MhQ542k/JDKoSPbZoqHmnG7QdsgnO28+DJIa3lFRINpNnlZvdhI+6MUycq
F9iR8K82TI6kQX3O5J+EsHp8q9Hze9cvZoxq4Up5OU4DP5mnf+0vNaLdp7yI
o4+Y0Wg/3Wfo4zpX6A9P50o0oyr5w8n9ShtRdzNL0Mo6/zCkTRhe/m/9/j9x
UV/NuLCKzJSdmUyDlFzylVem9dicOekW7sGKdfXblBem1n1A0mMqJ52K3w9y
PNi1ZZRgnwscje5sg/bZ666xCjRsrJvbev3jAOGTeNw94nQLyPakv2P1ouFh
NYsvJVY9xDlWJR6FR01gJ5ixj1uLho89nJZrZQeI2ebIaF6OFngoEXhptwcN
a/e3TJ4m9RCDPW+kx980Qdb1FNXOfgoWHfoiccSKRrwdSierh3WBrW0LSptS
sWuOgdfRcIKQ8v2XzxHTASGf2et2lVOxdbTcZL5jmHihcyTog2MbKH7tPmIw
Q0b+na/287PPEpvSWtyPKPZBm/9ErrcFBcmyt7h85KYIx1c3VAWye4Ccuf3I
jDwVW2RJwbPCE4RhTmj4DYtOSLnzdLta7SSajte77762QDzri/yo5z0Aqvay
iUwSZFRKUtbu3T1LZJQsOkUxDMB59v+6k7Qo+HHwjmfHRhoxlDb8NFeuF8rY
aeMSphNYqE+L9FRe5x8TccHaZ0NgkbYzkXx7AlXztfMcfeYJ/jHrpgqrIUiT
06Pc/TCJN6tqY5N4Zoj+5ZqrUbkDkN/RmMV2cgyVzjIMWzMuE8k3Fe93UUfg
XNKR9jqlMazfHXyQ5/cCUWm8KbaddxRkkjzPPUobw67rAePp6fPED+O198f8
R0DlSjXqrAxjRalOwxl5Bpw5Id11d+c4fPe61/rRYxgzzzwuO3BjmVC56TDH
/WYctNcOfWZ8PIBOgTdeusWsEXl6NS16xZPw5MaDOeJ2P3Lm3YmdGf1L8O3a
MrR8jQyOHIUeb3P7seTm+QqpxL9Eu4CfMscRMgx2yIQLcPSgcj+UFz1nRJVU
a91vARSQ+i44UR3dgYJBN0+UuqwQzHba2XamVNh5cS5ldKQVGfefcKOOMSFr
4rzBzwEq1O1e02Xf3YiU0xkZMyurxLL1A/W29f1lUZf1uPtTKS443qho8PtH
RN7WYR9/RIc3bSafEk6XYttmu6MZRxlQyP3rSfd1rvblGKs56k5DscZ9B6+l
dxMXw21ta5KbIJG9u9WnkIYnxU5EJPW3Eqe/6aXKJTdA0Nwh4YQwGpJmTj+0
3NBJaJ7t3eEx2gi/msMZDH/TkGv4X2ExrZWI9DV/FxLSABOFm8JNP1KRV3j6
fe/6fDq6UIo3CLbD7FeT37oaNDRrs375pL+XSPjmOm4u0AK3w+I0r3yk4IJm
g3cGeZI4/M/fh9OvG6q2mT5OrqJg3s8HnIq2o0Tu0+jIg5NdsEVfe6bgBxV1
EzSL1w4NEl+0jpqEVrWBgVfntuJBCraLxK7Gp48QrFO8DGohXVAoFW7idJKM
ez7p15YITxHSEW7uiqn98MbpTCLPMTIejjLQFyqZJK48q4k0zuoHL1Hlhu5r
ZFypj9/QOzxBnJV6mzNzux+COgseFFycwHoZjdpG5hmCQ2D0WLbvENRpZ9hG
OI+ifPGnCpGSGeLikL3+rpZRoHPXEE4+43gk1DOtYQOd2Bc9/HQgchj8VyX/
qYUM4Wgc/9KFpwsErTxQytViAk5WKOp6f+vC+jehab2/Z4nA2B1rwp0UUDNP
6Llc24+iwZRfcbIzxP2h7RYkbTLQz/l/4rrUhLyx5GFfqXliTsg41+X+et5x
sqwUE/+NsRNvv231mifuu81cHQ+gQ0LZ9BvnpY/oUqZ6qpSYIzg8Hk8Ti3QQ
RWOJqAcx+J1871PlnnkiWtNf/sIKHe56bVewSKBh4qev6aVqbcSnqytBCfcb
4WHdY/mAIRqyCfFxk381EhvzrMbUcuqhqNPacSqPhrZ5QgZZK81EVGLx58CO
BigI6RoMX1g///177eGORuKoR/tO3FkPfkuR8q86qMiyyP2sfNsAAWczd+jz
tcHErrGSrks0bDp3b9z7aTtxYuGMw02RZqBNh7zlKaXgqPR3n4uWg8S36gcd
j1i7gTG/zPDmABWV2g73fsJuovHxpITlWCvcaIjzTlqg4OSLPbdusA8Q/eZ5
IgLqXXBndSiieHESPZbvnTiaOkIMug2f6dEaAPO4D3GjB8l4Zi+l/7rWMNHs
cXwwk+gHVdujMeoL4zh9b6/cjgAqwVzVtqmRdRiyUs4fVJ8fRo6DNbpzh6nE
71/Jaq+VxuHE31kOiWvrPPDB+87XlTEiaUnSwadyBEZnzjnYZQ8g5dgXYvrp
NPHq6aHvc4mToGm6oXTKsRGLD+yOKNSfIOr+ePu8TaTBFc/DmhN7mrC5s9S8
W3KCeDhS0LEniAapUfc7dJt/4c7fe5O/zY8TG83r5wdz6LA6VytwW+g1DJos
5Mk/HCX0Hc85i/6jQzq/lmJYWCmkRNn0b2kfINwyxTwbQuiw3SXlsHNyOQys
1v4K2tNPONcrbrlgTwfeB49bqwpoeE9/PufVq0bC/LQ2pbq0AUKPlQDHFA1P
pVd1pP+sIyKsZENjz9aDiPW0eFc5DY+1dn+5FtBAsNUmWoZ5NoChr2fiZUE6
GgvvTBhOqCbk/RN1PUJqoWhDisetqXUufShjIDTXRbCZ2nhdj2wFw7TlD8JW
6/7Dt0Xxo08z4XSkaVVxZzMYi++yeBRKwTOfojaJLK2/72u/eY2BblgJkvc0
LaaiYAHD7rjBNiL3lFSUhl8bxAQ+dbidQMGwMqXKJZ5uIlPax7brRTcc2Gv5
7I7GJGZEdAm+f9hPzERT9E0tB+Gw+8z97vXznG/BhfKB/cSxfZpYfmYQ4r9o
OhmOjuGs11Sb2two0WrtG33/8Agk389wftg6gBtb9Y7J1A4R+EeFkHsxCXem
9ZIHvw3iYhLzvudpg8SZq+Fvy5YmQF1Q6bSPdhdKrAUdX1IbI/KMr9y/PE+B
bzMyD/Xy6mA+IueVE6Wd4D9UsmDJQAdZUaUWqfW+SfCuDdC7y4mxbqPihdBa
aF3EaAEqDXc+e3CF41IVsXZc7+Dc9Xp4IisTazRBxWmzq3LbNVoJPvULaUpE
KwjbD9Bk1t+RN75F6pBkLTHtO9ZgW9kAKipxR1f20nDoeWYyd2IDkfgFauXU
W2CwryFu4jAVz2MX24WgZsL0wxGKTEMH1PtviFVxIuOm5tkw5542IjBlSdzq
QT+kHX8uFHZ0BA+vXuSRuNNLMBVPTN8cHoPPu3i0l5VGMXpvhpEwtZP48MAI
+fnGgIX6ZodRGQ1HyEaPI9hrCJXIMo9b/g3QG9ARM89KRycXmemwmVIiSG3r
cQGbOthT8sxZsJuGAp8/UWX6y4jrEwatDbR6OJgZUd8vTcd3vX2SD41/E1PL
3nJ2+TUgY7b/iGMOFaW1xplPR9UTErG3nVRz24Cirr9B0YeGNh43tz6pryTO
/g5p3n2tCSKFDBnsqqhYwxVWattVS+RVVu/UsGyDePEvlMQJMo6vJ4APY82E
lrz2E9kTfZA+ziE0vJeCAvJXpXuLGggVpURTvyO9IKAT7lLGP44PhQO92581
E5a04oxDwiPgq5mjOao8joePce5ZzW0i6ITMXtvpYXDVvjcste6TBqydlEs2
pcT4m7uP5PoaIHVyOeOiKB31fOe32U8XEiOvU2I2aNUC60aNlBkyDUdHhFpq
HYuJEUMV6yte9fDeM4Dpx08algYI+Tf2lRA+0q5tes0N8Dm+6/RuBhreffiH
FDpWRpj9pyt762ArdJQZX+SLpSBdYfu072wlwXC8w+ZObDcYuV+VfdIxjrXu
73PVu6oJnfMWWWflh+Gor0O3nW8vnDALXp1qKST9pZVL1stQIID4toUrvhfI
g6751jeKSK4+sWlTohRgyncW61z3+QbRwS8i/5BQd44OSt5RD06qj4e71rki
wO9ylJFAIfFIa++vyC8N0KzDwblZio5BISZRj2J/ET+U/QqFOmugc1PRy5/r
8/k6TCPgv7wi4msi6+5IjRbIT004s02Yigz7dxlY1JYQP3LmX3l+6wSBC6p+
erETyEawnOqwLiUOul81/6gwBMmELCvr7T4YO1WZtFmvjOR4Q+Hjqx4yNOlJ
FsX/oyE9Q2lt6X0e4V617CfSUgfiHJw8p4pp2D5hozcjlk88wdfnXGMb4Mip
zY//ilPRpLee9+q9EiKkfeTHUngnTB4xv3fTmobdHf+16OcWEPNB117RpZvB
scIs76kUFec3nPFkZP9FKHo9WU161Ann/Law3Po5gX5/X368wlhCRHi0zeax
DgHVRkus59UE0he4OzJMCOJ+eelDRc0hcJoLbxzO7AOeqw7OsfEVJIYNt+8S
VWTQV1u9uyO6D6Q6mjf/Vq4kaR54IC/QRIZM8STPg97rfZ4Ryzi5N4+4WSE/
ZPugCY5EuhkFstBRjOm/k542WQT/QOhUpee6vuy2xaqsv8uT88qO+1WyCbVd
+xRUvzXAhpfSzALrOSXT1ey0zEo2IV+e8e/x2yYYLp13yBWhovVSSqyMWQ5x
qv6Q1otPnaCUf1fuzH8T+PbERKFWegax/F1TNjN1CHQ0ch1ezPXCm4YnFU/m
q0iKoz11LEwUoPooGv2XT8MDVzKDordlEIcdJ6+/r2+Ai/Rgu3w7GrqNbCsL
PZZBzEkXXWBha4aoTcrnUtfrjyncvMy+PYsYeMNYo+pRB1rcj1wOclCRidHy
msRqOhHAPBD1cbITRuy/JFmkjKPFcfvmz/MfiMU/lJYLVsOQ05L/zftHLxiR
3V2/X64mtSXOHUwQpEDSTauwScZeaHd/NZqhXEO6fpyVlq9PAf3H11g7ftDQ
ov/aIz+fVCK8rdtSn7kRnhefcJk1pGFP4mHLUe9vRKXyxXSL0GZ4323KJE6j
YPDJ2F+fjb4QX5aW+ZzPdsFSavS98LoxnDgltDFx633CWrMnYMJ6BG54qq1o
6PWAb1EkHh6pIeWN67Lye1Bg69vIy/91doPk/gptAfFakjNnSaDhcwqMc9Rd
PZm0ztsh+t4yuV8IBaliqRb9Rvi33HX6jDINrcwm9w1bfCIGxuw/ie9rgexf
H/4dWuelLlESLXJDHDFo/0ouhqUbjA3P9C66jmJBsa+ky6s3pO6rzuPtDaPw
+6gJj6p1F2RHbzxZQdSSLjZIMxZQKHDnZdKTG3b9YK997mc/ew3p++K0R/Ad
Msg6kzpnxPuB8iyx/ZlBDek5Q7bGoY9kkP/0TS41lobXtJRlj//+QGQ+mppU
ftEIts+0BrV4aej75DaTCS2OsEo3a9n2pwXk4t9WagRR0OPxg3j9V6EEQ1u/
iui/bsjI6r6/rDOMwdkmAo5rqaTSwE8OheXjECmyJ9DKtAt2fVUPqSiqJZ2R
9OUtpVPAxtGt4ftKO3x+RjpoxF1H0n4ubtJ+iwoy2Spn3bL6IMY0317uYg2J
Wc1Z6vW6jvS+G9zRu9oHpyn3Mw/51JCuPPNKNe8nQ52Brf/wCxpydKq777wT
R+jtCxDVJTcClUtD5ukQFdXKbzMoi78mPMM80uy6W4Hlkcz3HnkK8nCdCKOP
nSCFvH9vGW3TC8InfdlPV/ajiGeQ0+34PJI69cXYLx0ymJtnSZ192Q4z428N
mzbVkXQEra0XH1NhJX6fdtHeFlj2smH/ylhHuiL4q56mTAOmaPde/xe9EOk2
d+V3dQ1JOFzAdpckBXIeeN+lpFJR1uFq1x2th4TCCWrGs6E2qCBUb/qs189y
b/ad1eU44qVEC2MntRG0prOfKseQcV5z/lVX6AuSpLNVZZl8P2z7tUF05nU7
xltKlp5xLyIdupDPrLleT0lmdDjdqhk/3lt197MqIR2mm28vN6Ot+1vqfi2X
ZjDZwmN7/28tScalWzfblAatN+TPFIpUAecriyoRhVoSq6+Mp50BHapSvLxb
PHvBeZvsu+GmGlKEZbVN91YKsKgwiHaG94AfT9wKK1stiXtLoaGL9fr83z0k
OdVMxcYj9xzY7oYTQhW993V3rv+Xjei1ECoZP7CKTErm+pEy4uaDtEl9cM3V
US937Q0eiOOFlouVpO3S3rQdq3QIDlPgMyIqIcrjkstG2VqSiSV3n+pxOjCo
2KVYbu2BA9FXtry+VEva/XVwJseHArufkPcfuNYNXmI9nMT3WpKlruxOgSQK
qIvstMye7EelCdl7KqKM6AQ5ranyZPCQ6E31ih7Ggwprk2VX1wizKEZnO+9x
oB+Mr75e04H1S94WD4PZkO1M+GDuESpkT7yt8LQbwCmfwtcC3KxYETeJ57sn
gX4VKHaSbSiv9+XZ4XfcaBiutsDVRoXClbnJHM9enP+8tLNTmAsnn1+SHF7v
m2Awy/PB5EFk3crT5LSNA8muR0s1ViYgQvrH/vfUZny+PUTdVIkPLRzeRcTp
0OCxvN67nRu7cFpjrdyugRdH3vTvK1ujgGV1gezUrfX59LbdyzDFg2blT17x
3yCD5tWfXNOsTbjJW+XE00sCyCPELvPrKQ1MOmRle/a2o70C/8OJKH5Mdw6T
OBBHhQojYQVt1R78kbxYJJ7Gh7x3NUQ/e1FAoUotdP9aPzbtqGTdaLgRC2dE
7HokyPD2nJVo1ZEGNLq/tW7IQQhfsW33jqyjgYbL9XTbry2YUfQorf+dIBbq
DPWZSNDgPZr/dZ3twMMNAvVMuQJY2DLJe1qXCjc2Tk7Jiveio/JGvcE8fvT8
fTWdXYcCixn2oheO1+Ep395QTz1h5Jw2i7Jjp0PgcP31mxeaUMrF+7LpzU2Y
1EoJ/Leel3MtLUtU2drwAl1c6GKYEH5xLpF92EWFzmDSeNybTqwrHsj+Hi2I
jNVK6qmbqZCv3ZpE2lGNlLXgvHSaCP5u1/7mpkGHgxxFboUaDXjxT8crV0kR
vBs5OrbUQAPd1St9mqbNaLf4i3xuvzCueN8dn7Cgwd60I8xWNm04JW4Xr3ti
Ewodj70cWUEFo4SuQRmbTuwTlLnLdFIIC3Sk64LkqLDXOFwtQKQCWYcye8Wv
i+ED6mwx7yU6VJuFnbQ9X4vsW9pc4qJE8USVb6+GMB2KU8z0ZaoasPU6qfdm
tgiyZdb6sRXQoOKgrliBdTPa3jo4ub1SGJ+QueIS13WtEyFor0VtxQfFLNrG
jZvwL8T2mvZTQdzvaU202G88GbOt6uLvzaipPC75N4AOXLcv/Od6sxK5u/cV
BE6IoYassvkWIzqYWZ0J7iyvRWsN014LFjHcUKRi/2QjHWw5Qm66hDRgesZX
Rw0RUcyMvHLs1G8auDNHHFFNasLcMjnTUFkRtLOLZ3/iToNE5vHsg7uKcbLO
z+2/GXHkDrd3+/SeDg027mo2ab9Ri2cr19AGcfznM3Hd4B4dyj2F/82rVKLd
q+Zjw1s3Y+KePX+fm9CB3G0fRk+rQdYjWhG++8SQOdf497MtdJBzStSLC6/H
XzqTP1dBFLWPsdkYja+/i9zGtP4wxCdn9zjK6kkiU5uY283C9RwdEPPddEMR
Hkr27pBKkECtuzVS0t/o8GdGJYzFuAR/B1YcS2eQwBdnVZWUI+nArRoYrf3i
N24TiqyhnBfHvPbewOT7dIhnKSTS68txuImNeyRrM05uffbtpR0dgtxLnLM7
JjCgbtTZTniOINW9vhrUPQivvfjfRdZP4oLN1d26f2YIstzjYxEeA1A0IVK2
4wcZg+0LCx2qp4nHC54d7Cz9kH/iffM1wTFU4G9Ry6xZIR51LtzwVhgF+8Lw
3ZRtE6h96azSIZYlglbPrMRVNQQTX64eSB8dxpvTW/ffUWXGDdsHWbZpj8PF
z1HODR2juBo3150VwIiMGzTMO+xHYdubEzU2iePI8l3p0gOnNaI+X0Vv9cow
+Pr/454pHMaJrEIlNXk2fH49Uvrj2XHg9bgl8cptFJskKYk7pFnQa0Nm0bHa
UUjnV1UwYhvHrS45821/GdGW44GQ+dYRYHfQzVtuGcRfrltc+iq4MDR8f83d
3gkYUGNZOWg9jI93P9lp9pgD7+o01UUmj4NDFgeZo30Ez83FpAjtY0N1lwST
uzZjUNP5RVlMewx3JtH7rMqYcWWn3KcxxlGoV0z1mXUZRD89Wc6TvTyYP6e4
64f8JKRX6p+tzx9CuR/HryaZcyGv5kt30b0TsApZtxrXhrGvrPNnfj47coZq
C1pvHwe2rZXPDSP68QPv+29yAXxYlDTkMHOeDI8e6r2vzBzA3iDxzYKGvFjv
FcTN+mkS8mlNsrXVgzh/a/+PXH9u7O1/sFl+ZAIWx1zfv+0awrcHvD0Ev3Fg
XPO7B+0iE/Cr8pbhEezBRZ192jL3BVDXwN/S1IwC5WYXMi886sPWMMriVxZ+
tPizq/5yOxleMZseaErsx0bl0IxRro14W61pWeo0GXLKjZ9k+w1gqDg1SZyF
B19K7OZOLZ+EyE2HZfVbu7Cb4ZT06UIB9PwoGO1fT4GI1yReYckelHh8YeHa
Vn6cpdvlm9ynwN3PRcdPWPfiruwG4QC2jWi9K8/SZxcFRjhtWz/F9uFMQwBV
pYgbHUmn/hNsJAMp3tx/i1k76kSmD1+wFEJx8v7nzZFUSFVpP7NxUwdyWpdY
skUK4IF9DjNfr1NhmcnKa6mpA9NTvzzuaeHDHyI9q0cOU0FfVJ659UUn8v0y
+PBvOy+St/CrpEtQoZ7NtIWBvQVT+ht3GVau+1XApS3/adHgr+KFiaNaLeig
rj39pV8Q1euZz17bS4McyopdgHML3qBeHlhc4Ec1CYUPz+Ro8HKUKpj2rgWZ
Dfb+0dywvr8O/mF/K0UDSUv7FPnNjdj3Seyez7qf9+51XvROp8Hx1uyEfQWN
SI0ncvUObsJOxZLCpUga/KljZkKrJrwdIVlg6ySISY1il+PX94tl1hO2IsZm
3FnAL7f4jB9vD88PXrtMA3OzIfMpdSryKmYk/V+BmYZD3f1xGFmyPGUrKhVp
kZIsbZ6arzZEWuxUlEghokeLSlmiRdkjEiFbZC/EOVRE9m2IsQxmxpiZnyX7
+p//23OdF+c65/re9+dzRFyHUFiAZEzMxk4IuqaaeMOBg9m1/wR+ZjFQ2zfO
SnPtP7BeqPHk0mY2NsU2o+y5UbR2ssx/fUAPJB95+NnZm433/NPeQN41igR0
NG06pbth9Ysb3fYTw9jHPrpOe3kKUWJLTioAFQ7Upbu+NGDh0aD24MS8SaTY
omzQm9cH8dFjP2hxLEyrkqoosp9AvWOcNT3b+6Cly2aXp+gwfqd3wGdxfB7x
2RwpDY/shwelA6/mTg/j3fsSKV9U5pCNlsb6O1r9kBlbYa/6ahhrx14R2uAw
g5Lsvua4UKjwonlOeoo9hIn0xngPLR4cWrPP2VRiEPj/yuxsX8XEfYIrRz32
LSH93Z/vT9MH4KeNnuWtvUy8Y+xNYcrkPAr4VqRyuWQARufjOrq8GDgt6Vv6
+A4+fC4qRNe7iAZPlP2UlW4zcMLVL8j1Fw9uWEwy3VJJg6eOG3JvOjBwlP3b
xoa6JRSu+XFtaTN3v7WGsPkQDSd6+Y+c0xPAx/SVQvYbMyB8b1FrSiwNHyIf
8jWKW4HdZJXdH0UxoJWPz0TOiIYTtlwA/0lenFgzbUSmMMDiVces67cBfPXZ
gaU5V0GcQa/x263GhL37L1WRNg7gdkuh+A+3+LHfLs5hvnQmzPj5ZG9/2I8N
f/0nsMOFD0c71W+a3TQMMXVt2qvbqTj0osbkbyVhzO+KumqChwG7WyqtI/fh
2uTxY9crBLFVrNuhh/tZgCMGI0Xe9+JdNtJmiZb8eM609OMz7tw55mS6FYt3
4xPvdb3EB1bibOpD+n0fNqib/T2esLkTy56ier2eF8Dmwf0OD/dzwHWmvIy4
24FJ6i7zrsUimEci4khKCAfUNRpnkmNacd2MIKP0pBCeP/ysLtuAgNWEUodl
WiO2ZmjlahSuwEEvgmee0gj4QBm/sK6nFSvYZ7hvsRfDyU3G+We1CRBMdZt4
l9iMvexeJEq1r8RKO15N9r8jwDlBTvKTbSM2dWlfttMWwHuTqDXTBAFXT2Ka
+w4C33L4d8U5Oyo6llJ6crtzG0QEfLQPUyGw7KOxmHUXqIh+Wj0o4FQbTGfU
TqZpEPjISOCj7vNUVKj4p426vQ2GLzX43ArgYIZ3hdZmTwbKmY6bkUrrgJhZ
yaCtzzg44sywIUWVgWieJOOCjx2g41Ps08Fdn5jJMHxLo6M1G43emiV0QNj4
Z8+TLWzs21rz06GSQDeiyhLafnfBg30g8AKxcatVM1OawkF6Pz3c98tT4Jmb
mW5QGhvX6xlkPR5jo72F7GRLDwpMa5sQF9ks7NgpIRi7/i+qaxbTcDvWC9fX
fZLelcfCU477TJoNx9G4hYDcN4E+SHTdc+v1PRYmNb5Yln4yhnhZjTIuN/qA
Hr569EHBMPbPWA4Pzp1ChcsdWeNxVNCTN0rW0R7G0hfOGgx7TaLv/xzzKTnd
D3c6rX59rmRiokVyT5LuBIopL93gM9UPtg+8L80vDOFXu0Q9hZmzaBMvZ9F6
cQCmTu2ttVEawtdyDxaOqs2g+82uGjYLg/C3+86piFMM7Msx839/awqJr+4+
HzZOgxtZN/fL/0fHTmIbDZbNFlAfxe9HRS0dLAhSyaHVNPyvv6qy/dAseq26
KDwuMwQbjqnIxJUMYiOWl+nCGR5cscuwbo/NEIyOLuna/v//vKmB/67xIgr4
FEwozjPhek7anuNP+vBliaV0BnkWGa5hB3Q7siC24ZpI7KE+HGDkb+Gjx4O/
TLadY4SzYNdMs8Ra9068fd9lc8WuebRxoOzJsCIHdOwWP5W5dWHprtyjYqW8
OFsxWD58iA2CNwLWbyhswX6F+k7bTi8iUz+ued0IKL6300P8LBkr2e0IiCD4
MI9z1LjGEge0Qo2HCgaqcW7Emz4NgSWUd2BCJMtsBEZO16Z6ra/Ak2VqC5UH
l9F9YSYaDBqBa8m2A6NRBHY4URN96E4nsmoo2+JR2gw/HbJeGQUTOLb7hIVu
eieq+6aw+epkMzxNnk6JDiCwqvG5BlJPJ/LYa657VKUFbLwXnmutIbDPRfWw
q25UpDyWXZHR1AZvcgXpleMcPHvt+ODLMCoKdvh9QzGQDLmve2TEuR45KHbT
bMc7OtrU5fDPzNE/8PbNzTWi8hw8c3zspd95OlqM9dFQ8O2E5St2dVFtbHxs
1tzhKD8dGeknVqiUd8HZzR3XStzZ+PuXWcbYKjbSuDBtpHymG+burbj9ksnC
lOOX76w5xEJJ73iXnpzuhSuOPrevm7NwlVPkBS+rYfSv4lSxc3wfRE1/IbRX
sPC3x9pxsfmjKKU93qhlBxV4zofpOPMP4wenWzbq1Y0gMZ3cMPcP/fAwKXlB
N2cIi/6Kcz7D+xeF8s76R1oNgsSv7NPHh+iYqqwQUh0+hnLo12ulLOggcLtw
wK1yEL9iyXjP6UwgEZ+mtAazIeiqyhnM5PblAJb7+PW102g8qiPuErcvl4rY
8359QcHyqbfh+6m/SAsyVSGJDbxeF0hXHdrwRdks6RqnCXTabvm0gRIBS8QJ
Y/HztdjToLFGceUkSj9aPCO4bwQOnrroa9xRjDsNirXLqRPIo20+sa15BD7a
5wdQH8bjba2y3ZLPJ9B8AxiXzY/AN5qXxMMWAre+Nj9/XawNmX/7LTGzuwnW
yEkmPftBYEdlAd1P59pQ/N/kdcOxTRAYmVWkkkfg0t9L2cnhbaj2+RW5D6ua
4XX8yrXz1gR+WqTbe8O4Czklj0q2KrVCLf6ubczlZ4iOg2ZZTxdSVJZ26eDy
c5MuQ+XmDw6uVD5zYyaTikydLOwKvNvB9It6sLsJB3d7zFZoJ1BRBbL1mon8
A8KbLfRkKGz8rWRVECOYiupD7NnyyV1w9IXg2e1CbOw1nDNq4k1D/+73sJ+h
9kCn0bn4LmkWlunYq+TFGEQDGpvC5kWp4HiMnWHO5c/1kclVukJM9Egk+fEM
lz8yZiTj48VDOERlU0PEAgeJq1jvyDw7yOV8/7q/oTSc1FvbKMvDQtp76GW6
CQwYJ38kl14awOJiJJLtJIHea0Vt8rzPhMpn02sCr1Fx+8/9/LtSxtBxyfT3
/F3D8F/Th2ipgGb85a6QaLAaEwW4qhkf+MDNXS1VV37x/cCNRS/GHAqGkFE1
J2brxxEoX2XXtp7jgFfpCG+DbDoq5dm4anp5BHKDqi9Ll/wA8uPwqO0H+tHv
j6t/i70fgTfJ6yntowR+N7hEazjWhGoXHpg+MGkE/x73WwldBJbr2RBi7duE
+G8pyAuPN4J8tKlDUgWBFx0jAx/8aEKiW/gVdgY1QZJEAfnhIwJHqS2MKa0l
I14TXuGDN1sgRTUuYYc612t7tuk4fiaj++/emHiptoHclMr4DjoHX9x2W6DW
moIyhSOqyurJMHH3bUO+HgcPmilTxq5TUJj8cntA3R9wc893FIviemrrU5f7
lyloJZGacv8bBYyueLgLfGVhBf/M5n3buN4MnOSTX+qFvtN1zvEHhnEI5y4q
f9qHCmouRm6y7Ic8XUqgUeIQttbpO5t1dwBNK4b2ezoNwg/1Lak5Hxg4U8DJ
J9eAgSJ3z/pEhtFgwy+msJoYl+cUcu2tgwOopHyzXKPzMLwU/yp8sbYbD2Qe
id6tTEMiEx9zBs6zYa11THmETge2U2A8mL3AQHIHtmc0xnBg6z7BxXPzBP63
8/hG2mAtYoTtFDzF3wgbcoW0F/sIbO0sWFNuWIfyzbaatf9uBH2Plnb6XQJ/
ygtwOni8GaXMGf7dHtwCRw/mJIA0gVdkid1L/t2M4hTSkFR7G7xqrbywq5aD
N1eLabKU2tF13QHVI6btAJ1Rq+VYbDxQGt4kK9OOPv7VUZB26IKTL7X0rqUP
429y1fY00S4kNkO7l5dNhYL81gnNQBoOTQ54sAkoSCrucfbNVAaoVTml/IoY
wJUuofqRNn3o9ZyJrtcZJii3MTX2rRnB2ZmKTxv3ViESX4ch27kerof5ehdM
EbimzNfF0LMKOSsXyVXsaOR64fr0ZTKBPww4H7P8XoXOpgq9UJRtAkfhpoOV
iMCb//rdeYHrkMrHXmUh3ASSgvKatFMEppi9Mk2NqEe7D7dEqCe3cu+TL8eD
ywG6YeuD9VYNaOFGne6L/3NgD++JWQsOHsr3q2z824wonU3Cqr5/QMy2O/j+
SjZ2hZp/mS+bUXS1lZFSdw84M22eHHnIwhnPfZ9o3ScjlRPes0ev9sF//zX0
eW4YwgoftR8+m2hB9WfxHxVRGgSBSXzBYzouWTFNLbFqR88+5IWbl9PhvD6z
qHjlCN6iy6TLfv6JLHvQtML+BrAZtk09PkBg/vf6gbZNP5H+Ct97ksXc+Up5
v6D5jcCXyZNSnPGfqFl9+/nM9iZIFn1Kt/Ql8MBEb5Pqlmp0yF096aheC7AJ
/pzofg6O0c+6ffd1NfpKzvprTiXDFW+xQ8ZH2bjY9Xz/no31SHrASZ5HtAcK
OKEKtoeHsF3GNiEc2ICcWfNXtGmDoLZqSxQ5ogfeKlwk+ZG+k1TpWm6LG9jg
vxRnESY7gm93GqcvpJajNS+NmtL31cMlObFaSw43rzo++L09sRxdElIKoLg0
gkCVkPsj7nvxPmuOJ8WUo+XAkKvLZU0gICV064gAgde1y9GH2T+RzP2wTKmd
ZLD3SKwofMvGsclvNh7OrUIr3pP9GvIpILSNJE18HcISzb7zPlCNPB+PcHyN
BuFLdNSz37K9UL160/K5cxUkL7Lo0Nw0C47EJMl+niTwTMOzgPm1CDlFP3+Y
rNoIDdKPX7RxzzMcZmci9KkU2WRf4YlFTWDHDNXL4+btEaPXZ8KOlaNUTaK4
Wa8N+FoaVupKcHBFindAhU8ZuqYqkJz0oxP2uPj/VFnDwasvSp0zzP+JFnuF
HT7ldsLStsNloQ+Z2C/Q/PZHU4xcflz1T7ccAM/y84KsUCb+Eq1takD5iXTU
AMkeHoBXwWf2ukX1gsO7JVkNejWJOHElZ3MrC/hn16aL+fVCwGGOvd6KKlLv
wVh+xh8WPN8eR964SGDbuNyMAHIROj93PyKN3QCX1bYRrSUEns5o/N62ogjl
eNN679Y2AV+gvmW4B4GLbOIP3tlViGIy9eKj3rdAQ9au9dcvEThmfbZtErkE
VYaWiJxRb4WXTZkPnXk5uMF91O1eSxEyfm8Rvm5lF2wKS02dl2BiEZ4AT1H7
AjTVf5/DOzAAuzbrtn1e3QsHzYt5Cv/8Jil2a730mWOBl1xrtC3/CK5miuRf
sviCUveqKhKeDdBbcNd/pJDr/UBWtKdkAbpAZHYZMJogYufW041XCexsaPyb
XpGH7NaHTb8TbYUGqaqrDRw2tvLTskn5koe0pvTG0y90QYr4bG1O4BAecZ6Q
PKqYhtL3+MSm+Q+Ci8RcyrptPRBA8dF8k1NLumM7pmujxQZN+bWi8XU9YFT5
vNRRopa0vTMvFomxoZJ145gfN2+kvNQ/Gpifg6zNwu6aiHHzhk1Wj5shga/N
eL7Oq85Cd0Sxk3FIK9yMzHS15ubGIF6VTUdGMpBlUtZp+e9dEDB1N3aykYHH
UtPQZtMQdCPs9ebLNjRw7trD0p6ggHLkyqcV43Wk7+MWJl+fs0HWxNz48Otu
SJ1x1rO3rCM9sYzy3GbLBqWJfRJNGQR+YCfNeBWXiULPD+/NPNQMYh6Vwfxc
P1681XfmWHsqOt5tdFRnbxuIleJVZfls/GvjaekP3xORZA7PBxk9Cjw+d1fO
/hMda8huZV5cCCKphmsHNkfQQUcnnSd1rAuiZG4dNdxXT9p9r6aLWs2GtIpz
Mtr7+2D4qfD6zm11JE3/n4+pb1jwzexHyFwSgScuOairxaWiO2H5QZtdmmEy
PVW/WZzAr1+drCH5JyCVx9XVLGYbMPI/Jdn4szHrwYbytKk3qK7reL4jbzes
aj1p74wGMWXPMSuckE6aHPugmnxpCJrMPPRay/5A21PJrq2F9aREZXF4YsCB
xap3ZmSLLmDOubga4npSwWJymifBBjFW+/mbT3shuEBVc6tTHUk5cjXJlzsX
Tp/px914+uCM9dB3ZYM6El3ewufQFxaU8Ob+FXhHYKedybX+Okno5CPKhG5a
M5ykrZFsG+LggLEBc8XLb1FH2GVSXhkZ5OOcRbZyOVlU9CO4RPwRErmyPzaH
y0lji7aec5eoWPuiiF9jdiHpa25F6GLfMIR+kV5Su0uGAwb0nTVd9aSaH6+I
gikOmFD5wmioAyKF2B8KVjaQoq1PzPb6cMAp+9ZnPNsDIqu2Tp6JqCPFI0+1
Nzxs2J2x8L0xhMB8ypVqs/fi0YLmEMasZgjx1alNKOT2dL5kH7W6QCQ2bK0s
VdgOexLab5SQWbiMltW3+4Q3Cb0qcv03qBd20K1qrVIbYUVyzoV023qS26K+
VSqNAMURg0Wx4lbIOWm91Pe3ntTi91TJW4cAg/Gdseq0bq6X4rLItDrSbrPK
CHMDNojHzJzk9e+B1VSda5/r60g6Deve6Muz4c1VTSk6hYNbwrMEL2cGIau+
4RnxZTJMpjF3GyWycAhTRtA79jWJRyS1mFehDxamtAteOn8En7QDe3fm1JBs
OIaklpkRELZ41L1E+w2CjRsyvbbXkyiySqFSp0Zg2/NPZ/qLKXDjw1MB3pB6
Ei+2dFWPYoNde8flGNtu+Km5u/q2Sj3pjdER+zs32fA/Cy+4qg==
       "]], Axes -> True,
      AxesLabel -> {
       FormBox["\"Sup. fraction\"", TraditionalForm], 
       FormBox["\"Maximum LDE attempts\"", TraditionalForm], 
       FormBox["\"Fidelity\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
     ImageSize -> {316.6223856639158, 229.32386803803277`}, ImageSizeRaw -> 
     Automatic, Lighting -> "Neutral", 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{0.05, 0.3}, {1., 40000.}, {0., 0.6241629327069971}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
     ViewPoint -> {2.901696582785441, -0.21053479647920173`, 
      1.727956029800169}, ViewVertical -> {0., 0., 1.}],FormBox[
     FormBox[
      TemplateBox[{
        FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            GraphicsBox[{{}, {}, 
              RasterBox[CompressedData["
1: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
               
               "], {{
                 Rational[-15, 2], 
                 Rational[-225, 2]}, {
                 Rational[15, 2], 
                 Rational[225, 2]}}], {Antialiasing -> False, 
               AbsoluteThickness[0.1], 
               Directive[
                Opacity[0.3], 
                GrayLevel[0]], 
               LineBox[
                NCache[{{
                   Rational[15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[-225, 2]}, {
                   Rational[-15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[225, 2]}, {
                   Rational[15, 2], 
                   Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5,
                  112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
               CapForm[None], {}}, {Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.5, -112.50000000000001`}, {7.5, 
                 112.50000000000001`}}], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.50000000000001`}, 
                    Offset[{4., 0}, {7.5, -112.50000000000001`}]}, {{
                    7.5, -40.384615384615394`}, 
                    Offset[{4., 0}, {7.5, -40.384615384615394`}]}, {{7.5, 
                    31.730769230769226`}, 
                    Offset[{4., 0}, {7.5, 31.730769230769226`}]}, {{7.5, 
                    103.84615384615385`}, 
                    Offset[{4., 0}, {7.5, 103.84615384615385`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -94.47115384615385}, 
                    Offset[{2.5, 0.}, {7.5, -94.47115384615385}]}, {{
                    7.5, -76.44230769230771}, 
                    Offset[{2.5, 0.}, {7.5, -76.44230769230771}]}, {{
                    7.5, -58.41346153846155}, 
                    Offset[{2.5, 0.}, {7.5, -58.41346153846155}]}, {{
                    7.5, -22.355769230769237`}, 
                    Offset[{2.5, 0.}, {7.5, -22.355769230769237`}]}, {{
                    7.5, -4.326923076923082}, 
                    Offset[{2.5, 0.}, {7.5, -4.326923076923082}]}, {{7.5, 
                    13.701923076923073`}, 
                    Offset[{2.5, 0.}, {7.5, 13.701923076923073`}]}, {{7.5, 
                    49.75961538461538}, 
                    Offset[{2.5, 0.}, {7.5, 49.75961538461538}]}, {{7.5, 
                    67.78846153846153}, 
                    Offset[{2.5, 0.}, {7.5, 67.78846153846153}]}, {{7.5, 
                    85.81730769230772}, 
                    Offset[{2.5, 0.}, {7.5, 85.81730769230772}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.50000000000001`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -40.384615384615394`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 31.730769230769226`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 103.84615384615385`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                 False], 
                Directive[
                 AbsoluteThickness[0.2], 
                 Opacity[0.3], 
                 GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
             Scaled[0.02], PlotRange -> All, Frame -> True, 
             FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
             Opacity[0], FrameTicksStyle -> Opacity[0], 
             ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
            Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{
                  RowBox[{"Blend", "[", 
                    RowBox[{"\"SouthwestColors\"", ",", "#1"}], "]"}], "&"}], 
                ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "2.979296910233015`*^-6", ",", "0.6241629327069971`"}], 
                  "}"}]}], "}"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
            RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
            RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
      TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.708832743460734*^9, {3.708832913707757*^9, 3.7088329421776037`*^9}, {
   3.708832985973983*^9, 3.7088330229114428`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"optimalAttemptsAndFids", "[", 
    RowBox[{"popmin_", ",", "popmax_", ",", "popsteps_", ",", 
     RowBox[{"ret_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"attempts", ",", "dat"}], "}"}], ",", 
     RowBox[{
      RowBox[{"dat", "=", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pop", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"attempts", "/.", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "[", 
          RowBox[{"FindMaximum", "[", 
           RowBox[{
            RowBox[{"EntangleOnDemand", "[", 
             RowBox[{
              RowBox[{"PopulationToTheta", "[", "pop", "]"}], ",", "attempts",
               ",", "setupParams"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"attempts", ",", "10000"}], "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "3"}], ",", 
            RowBox[{"PrecisionGoal", "\[Rule]", "3"}], ",", 
            RowBox[{"MaxIterations", "\[Rule]", "20"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"pop", ",", "popmin", ",", "popmax", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"popmax", "-", "popmin"}], ")"}], "/", "popsteps"}]}], 
          "}"}]}], "]"}]}], ";", 
      RowBox[{"ldeAttempts", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Sup. fraction\>\"", ",", 
            "\"\<Optimal max. LDE Attempts\>\""}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fid", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"dat", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Sup. fraction\>\"", ",", 
            "\"\<Optimal on-demand-fidelity\>\""}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "ldeAttempts", "]"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Print", "[", "fid", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"ret", ",", 
        RowBox[{"Return", "[", "dat", "]"}]}], "]"}], ";"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"optimalAttemptsAndFids", "[", 
  RowBox[{"0.03", ",", "0.5", ",", "10"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7088331223025026`*^9, 3.708833231571574*^9}, {
  3.7088333172075615`*^9, 3.7088333804035616`*^9}, {3.7088341368863306`*^9, 
  3.7088341371583576`*^9}, {3.708834218681509*^9, 3.7088342339450355`*^9}, {
  3.7088342703476753`*^9, 3.708834777086344*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{0.06866442039636114, 49948.54843420995}, {0.077, 
      36604.63575207157}, {0.124, 27375.19090354742}, {0.171, 
      22408.741494488313`}, {0.218, 19226.559868607026`}, {0.265, 
      16994.503519814367`}, {0.31200000000000006`, 15342.416204139961`}, {
      0.359, 14078.26066311755}, {0.406, 13093.84355491263}, {
      0.45299999999999996`, 12326.28588310573}, {0.5, 
      11741.909995869153`}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Optimal max. LDE Attempts\"", TraditionalForm], None}, {
     FormBox["\"Sup. fraction\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5}, {0, 49948.54843420995}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.708834701574794*^9, 3.708834714166053*^9}, {
  3.708834757557391*^9, 3.7088347856432*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{0.03, 0.41673060390720745`}, {0.077, 0.5498905454093392}, {
      0.124, 0.6064791337678608}, {0.171, 0.623766000011024}, {0.218, 
      0.6212950214010519}, {0.265, 0.6072849993379518}, {0.31200000000000006`,
       0.5858697296610551}, {0.359, 0.5593836813811911}, {0.406, 
      0.5292584323297931}, {0.45299999999999996`, 0.4964292887930642}, {0.5, 
      0.46154086794364607`}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.40637883410201664`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Optimal on-demand-fidelity\"", TraditionalForm], None}, {
     FormBox["\"Sup. fraction\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5}, {0.41673060390720745`, 0.623766000011024}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.708834701574794*^9, 3.708834714166053*^9}, {
  3.708834757557391*^9, 3.7088347856502004`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"FirstClickProbIonize", "[", 
     RowBox[{
     "\[Theta]_", ",", "pd1_", ",", "pd2_", ",", "pdark_", ",", "attempt_"}], 
     "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"], "*", "2", "pdark", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "pdark"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "pdark", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pdark"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pd1"}], ")"}]}], "+", 
           RowBox[{"2", "pdark", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pdark"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pd2"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"pIon", "[", 
               RowBox[{"attempt", ",", "\[Theta]"}], "]"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"pd1", "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "pdark"}], ")"}], "2"]}], "+", 
              RowBox[{"pd2", "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "pdark"}], ")"}], "2"]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "4"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "pdark", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pdark"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pd1"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "pd2"}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"pIon", "[", 
                RowBox[{"attempt", ",", "\[Theta]"}], "]"}]}], ")"}], "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"pd2", "*", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "pdark"}], ")"}], "2"], 
               RowBox[{"(", 
                RowBox[{"1", "-", "pd1"}], ")"}]}], "+", 
              RowBox[{"pd1", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "pdark"}], ")"}], "2"], 
               RowBox[{"(", 
                RowBox[{"1", "-", "pd2"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"CumProbIonize", "[", 
       RowBox[{
       "nMax_", ",", "\[Theta]_", ",", "pd1_", ",", "pd2_", ",", "pdark_"}], 
       "]"}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cp", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"currentprod", " ", "=", " ", "1"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", " ", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<", 
            RowBox[{"nMax", "+", "1"}]}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"FirstClickProbIonize", "[", 
               RowBox[{
               "\[Theta]", ",", "pd1", ",", "pd2", ",", "pdark", ",", "i"}], 
               "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"curprob", " ", "=", " ", 
             RowBox[{"FirstClickProbIonize", "[", 
              RowBox[{
              "\[Theta]", ",", "pd1", ",", "pd2", ",", "pdark", ",", "i"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"currentprod", " ", "=", " ", 
             RowBox[{"currentprod", "*", 
              RowBox[{"(", 
               RowBox[{"1.", "-", "curprob"}], ")"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Print", "[", "currentprod", "]"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"p", "+=", 
             RowBox[{"curprob", "*", "currentprod"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"cp", " ", "=", " ", 
          RowBox[{"1", "-", "currentprod"}]}], ";", "\[IndentingNewLine]", 
         "cp"}], "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "First", " ", "calculate", " ", "the", " ", "state", " ", "in", " ", 
         "a", " ", "way"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"CalculateRawState", "[", 
        RowBox[{"\[Theta]_", ",", "Attempt_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"totalattemptduration", " ", "=", " ", 
           RowBox[{"LDEduration", " ", "*", " ", "Attempt"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"DM", " ", "=", " ", 
           RowBox[{"rawStateAsym", "[", 
            RowBox[{
             RowBox[{"Sqrt", "[", "vis", "]"}], ",", "fz", ",", 
             RowBox[{"rValueAsym", "[", 
              RowBox[{
              "\[Theta]", ",", "pDetect1", ",", "pDetect2", ",", "pDC"}], 
              "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "include", " ", "phase", " ", "error", " ", "due", " ", "to", " ", 
            "interferometric", " ", "instability"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"pPhaseError", "/.", 
              RowBox[{"t", "\[Rule]", " ", "totalattemptduration"}]}], "]"}], 
            ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"Tr", "[", "DM", "]"}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"DM", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "pPhaseError"}], ")"}], "*", "DM"}], " ", 
             "+", " ", 
             RowBox[{"pPhaseError", "*", 
              RowBox[{
               RowBox[{"KP", "[", 
                RowBox[{
                 RowBox[{"DiagonalMatrix", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], "]"}], ",", 
                 SubscriptBox["\[Sigma]", "3"]}], "]"}], ".", "DM", ".", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KP", "[", 
                  RowBox[{
                   RowBox[{"DiagonalMatrix", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}], ",", 
                   SubscriptBox["\[Sigma]", "3"]}], "]"}], ")"}], 
                "\[ConjugateTranspose]"}]}]}]}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "totalattemptduration"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "is", " ", "projected", " ", "into", " ", "dark", " ", "state", 
            " ", "based", " ", "upon", " ", "ionization", " ", "properties"}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"DM", " ", "=", " ", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"pIon", "[", 
                 RowBox[{"Attempt", ",", "\[Theta]"}], "]"}]}], ")"}], "2"], 
             "*", "DM"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"pIon", "[", 
                RowBox[{"Attempt", ",", "\[Theta]"}], "]"}]}], ")"}], "*", 
             RowBox[{"pIon", "[", 
              RowBox[{"Attempt", ",", "\[Theta]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"KP", "[", 
                 RowBox[{
                  SubscriptBox["\[ScriptCapitalP]", "1"], ",", "id"}], "]"}], 
                ".", "DM", ".", 
                RowBox[{
                 RowBox[{"KP", "[", 
                  RowBox[{
                   SubscriptBox["\[ScriptCapitalP]", "1"], ",", "id"}], "]"}],
                  "\[ConjugateTranspose]"}]}], "+", 
               RowBox[{
                RowBox[{"KP", "[", 
                 RowBox[{"id", ",", 
                  SubscriptBox["\[ScriptCapitalP]", "1"]}], "]"}], ".", "DM", 
                ".", 
                RowBox[{
                 RowBox[{"KP", "[", 
                  RowBox[{"id", ",", 
                   SubscriptBox["\[ScriptCapitalP]", "1"]}], "]"}], 
                 "\[ConjugateTranspose]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"pIon", "[", 
               RowBox[{"Attempt", ",", "\[Theta]"}], "]"}], "2"], 
             RowBox[{
              RowBox[{"KP", "[", 
               RowBox[{
                SubscriptBox["\[ScriptCapitalP]", "1"], ",", 
                SubscriptBox["\[ScriptCapitalP]", "1"]}], "]"}], ".", "DM", 
              ".", 
              RowBox[{
               RowBox[{"KP", "[", 
                RowBox[{
                 SubscriptBox["\[ScriptCapitalP]", "1"], ",", 
                 SubscriptBox["\[ScriptCapitalP]", "1"]}], "]"}], 
               "\[ConjugateTranspose]"}]}]}]}]}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"pIon", "[", 
              RowBox[{"Attempt", ",", "\[Theta]"}], "]"}], "]"}], ";"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Assuming", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", ">", "0"}], "&&", 
             RowBox[{"Attempt", ">", "0"}]}], ",", 
            RowBox[{"FullSimplify", "[", "DM", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "TIonization"}], " ", 
       "=", " ", "600000"}]}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "1", "k", " ", "repetitions", " ", "until", " ", "we", " ", "ionize"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pIon", "[", 
     RowBox[{"att_", ",", "\[Alpha]_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["E", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"att", "/", "TIonization"}], ")"}]}], "*", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"]}]]}], "//", 
      RowBox[{"N", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "only", " ", "population", " ", "that", " ", "is", " ", "in", " ", 
          "ms"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"0", " ", "after", " ", "the", " ", "\[Theta]", " ", "MW"}],
           "-", 
          RowBox[{"pulse", " ", "will", " ", "ionize"}]}]}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Commulative", " ", "success", " ", 
         RowBox[{"probability", ".", " ", "This"}], " ", "does", " ", "not", 
         " ", "include", " ", "ionization"}], "*)"}], "\[IndentingNewLine]", 
       "pltwithDC"}]}], " ", "=", " ", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"CumProb", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\[Theta]", "*", "\[Pi]"}], ",", "pDetect1", ",", "pDetect2",
          ",", "pDC"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "8000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"1", "/", "10"}], ",", 
         RowBox[{"1", "/", "5"}]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<nMax\>\"", ",", "\"\<\[Theta] (\[Pi])\>\""}], "}"}]}], 
       ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Success probability including dark counts\>\""}]}], "]"}]}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"pltnoDC", " ", "=", " ", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CumProb", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\[Theta]", "*", "\[Pi]"}], ",", "pDetect1", ",", "pDetect2",
          ",", "pDC"}], "]"}], "-", 
       RowBox[{"CumProb", "[", 
        RowBox[{"n", ",", 
         RowBox[{"\[Theta]", "*", "\[Pi]"}], ",", "pDetect1", ",", "pDetect2",
          ",", "0"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "8000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "5"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<nMax\>\"", ",", "\"\<\[Theta] (\[Pi])\>\""}], "}"}]}], 
      ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Difference with and without dark counts\>\""}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"pltwithDC", ",", "pltnoDC"}], "}"}], "}"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "These", " ", "plots", " ", "can", " ", "also", " ", "be", " ", 
       "expressed", " ", "in", " ", "terms", " ", "of", " ", "elapsed", " ", 
       RowBox[{"time", ".", " ", "Can"}], " ", "help", " ", "in", " ", 
       "identifying", " ", "what", " ", "the", " ", "metric", " ", "to", " ", 
       "improve", " ", "is"}], "*)"}], "\[IndentingNewLine]", "pltwithDC"}], 
    " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"DensityPlot", "[", 
       RowBox[{
        RowBox[{"CumProb", "[", 
         RowBox[{
          RowBox[{"n", "/", "LDEduration"}], ",", 
          RowBox[{"\[Theta]", "*", "\[Pi]"}], ",", "pDetect1", ",", 
          "pDetect2", ",", "pDC"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"1", "*", "LDEduration"}], ",", 
          RowBox[{"8000", "*", "LDEduration"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"1", "/", "10"}], ",", 
          RowBox[{"1", "/", "5"}]}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<elapsed time (ms)\>\"", ",", "\"\<\[Theta] (\[Pi])\>\""}], 
          "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Success probability including dark counts\>\""}]}], "]"}], "\n", 
      RowBox[{"(*", 
       RowBox[{"Cumulative", " ", "success", " ", 
        RowBox[{"probability", ".", " ", "This"}], " ", "time", " ", "with", 
        " ", 
        RowBox[{"ionization", "!"}]}], "*)"}], "\[IndentingNewLine]", 
      "pltwithDC"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"DensityPlot", "[", 
       RowBox[{
        RowBox[{"CumProbIonize", "[", 
         RowBox[{"attempts", ",", 
          RowBox[{"\[Theta]", "*", "\[Pi]"}], ",", "pDetect1", ",", 
          "pDetect2", ",", "pDC"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"attempts", ",", "1", ",", "5000"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"1", "/", "10"}], ",", 
          RowBox[{"1", "/", "5"}]}], "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<nMax\>\"", ",", "\"\<\[Theta] (\[Pi])\>\""}], "}"}]}], 
        ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Success probability including dark counts and \
ionization\>\""}]}], "]"}], "\n", "$Aborted", "\n", 
      RowBox[{"(", 
       RowBox[{"Re", "@", 
        RowBox[{"Fidelity", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "4", "]"}], "/", "4."}], ",", 
          RowBox[{"bellState", "[", "2", "]"}]}], "]"}]}], ")"}], "\n", 
      "0.25`"}]}]}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.708774013559918*^9, 3.7087740140259647`*^9}, {
  3.708778979983525*^9, 3.7087789860341296`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
ShowSelection->True,
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 217, 3, 61, "Section"],
Cell[800, 27, 1312, 27, 64, "Input"],
Cell[CellGroupData[{
Cell[2137, 58, 121, 2, 27, "Input"],
Cell[2261, 62, 29976, 825, 384, "Print"]
}, Open  ]],
Cell[32252, 890, 3810, 107, 202, "Input"],
Cell[CellGroupData[{
Cell[36087, 1001, 170, 2, 35, "Subsubsection"],
Cell[36260, 1005, 3855, 93, 132, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[40152, 1103, 104, 1, 30, "Subsubsection"],
Cell[40259, 1106, 8209, 188, 352, "Input"],
Cell[48471, 1296, 2753, 75, 100, "Input"],
Cell[51227, 1373, 6620, 164, 352, "Input"],
Cell[57850, 1539, 204, 3, 27, "Input"],
Cell[58057, 1544, 2646, 53, 49, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60752, 1603, 149, 2, 61, "Section"],
Cell[60904, 1607, 1866, 40, 268, "Text"],
Cell[62773, 1649, 4591, 112, 202, "Code",
 InitializationCell->False],
Cell[67367, 1763, 3602, 100, 244, "Input"],
Cell[CellGroupData[{
Cell[70994, 1867, 200, 3, 35, "Subsubsection"],
Cell[71197, 1872, 3899, 99, 31, "Code",
 InitializationCell->False],
Cell[75099, 1973, 5922, 150, 158, "Input"],
Cell[81024, 2125, 10517, 249, 297, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91578, 2379, 120, 1, 35, "Subsubsection"],
Cell[91701, 2382, 5252, 119, 300, "Input"],
Cell[96956, 2503, 3875, 75, 154, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100868, 2583, 220, 3, 35, "Subsubsection"],
Cell[101091, 2588, 8547, 190, 510, "Input"],
Cell[109641, 2780, 2349, 58, 118, "Input"],
Cell[111993, 2840, 2875, 66, 190, "Input"],
Cell[114871, 2908, 3189, 91, 118, "Input"],
Cell[118063, 3001, 979, 23, 64, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119091, 3030, 215, 3, 61, "Section"],
Cell[CellGroupData[{
Cell[119331, 3037, 158, 2, 45, "Subsection"],
Cell[119492, 3041, 68, 1, 27, "Input"],
Cell[119563, 3044, 3887, 78, 226, "Input"],
Cell[123453, 3124, 3146, 88, 49, "Input"],
Cell[CellGroupData[{
Cell[126624, 3216, 195, 3, 27, "Input"],
Cell[126822, 3221, 1221, 30, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128080, 3256, 210, 5, 27, "Input"],
Cell[128293, 3263, 2092, 55, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130434, 3324, 155, 2, 45, "Subsection"],
Cell[130592, 3328, 12138, 200, 406, "Input"],
Cell[CellGroupData[{
Cell[142755, 3532, 5812, 135, 460, "Input"],
Cell[148570, 3669, 9903, 206, 220, "Output"],
Cell[158476, 3877, 8478, 173, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166991, 4055, 3355, 87, 140, "Input"],
Cell[170349, 4144, 9719, 190, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180105, 4339, 2607, 61, 100, "Input"],
Cell[182715, 4402, 103569, 1755, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286321, 6162, 3422, 84, 190, "Input"],
Cell[CellGroupData[{
Cell[289768, 6250, 1930, 43, 211, "Print"],
Cell[291701, 6295, 1955, 42, 216, "Print"]
}, Open  ]]
}, Open  ]],
Cell[293683, 6341, 17104, 428, 905, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

